// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module process_features_calculate_single_value_Pipeline_VITIS_LOOP_154_1_VITIS_LOOP_157_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_i_i341_reload,
        phi_ln139_reload,
        phi_ln139_1_reload,
        phi_ln139_2_reload,
        phi_ln139_3_reload,
        phi_ln139_4_reload,
        phi_ln139_5_reload,
        phi_ln139_6_reload,
        phi_ln139_7_reload,
        phi_ln139_8_reload,
        phi_ln139_9_reload,
        phi_ln139_10_reload,
        phi_ln139_11_reload,
        phi_ln139_12_reload,
        phi_ln139_13_reload,
        phi_ln139_14_reload,
        phi_ln139_15_reload,
        phi_ln139_16_reload,
        phi_ln139_17_reload,
        phi_ln139_18_reload,
        phi_ln139_19_reload,
        phi_ln139_20_reload,
        phi_ln139_21_reload,
        phi_ln139_22_reload,
        phi_ln139_23_reload,
        phi_ln139_24_reload,
        phi_ln139_25_reload,
        phi_ln139_26_reload,
        phi_ln139_27_reload,
        phi_ln139_28_reload,
        phi_ln139_29_reload,
        phi_ln139_30_reload,
        phi_ln139_31_reload,
        phi_ln139_32_reload,
        phi_ln139_33_reload,
        phi_ln139_34_reload,
        phi_ln139_35_reload,
        phi_ln139_36_reload,
        phi_ln139_37_reload,
        phi_ln139_38_reload,
        phi_ln139_39_reload,
        phi_ln139_40_reload,
        phi_ln139_41_reload,
        phi_ln139_42_reload,
        phi_ln139_43_reload,
        phi_ln139_44_reload,
        phi_ln139_45_reload,
        phi_ln139_46_reload,
        phi_ln139_47_reload,
        phi_ln139_48_reload,
        phi_ln139_49_reload,
        phi_ln139_50_reload,
        phi_ln139_51_reload,
        phi_ln139_52_reload,
        phi_ln139_53_reload,
        phi_ln139_54_reload,
        phi_ln139_55_reload,
        phi_ln139_56_reload,
        phi_ln139_57_reload,
        phi_ln139_58_reload,
        phi_ln139_59_reload,
        phi_ln139_60_reload,
        phi_ln139_61_reload,
        phi_ln139_62_reload,
        phi_ln139_63_reload,
        phi_ln139_64_reload,
        phi_ln139_65_reload,
        phi_ln139_66_reload,
        phi_ln139_67_reload,
        phi_ln139_68_reload,
        phi_ln139_69_reload,
        phi_ln139_70_reload,
        phi_ln139_71_reload,
        phi_ln139_72_reload,
        phi_ln139_73_reload,
        phi_ln139_74_reload,
        phi_ln139_75_reload,
        phi_ln139_76_reload,
        phi_ln139_77_reload,
        phi_ln139_78_reload,
        phi_ln139_79_reload,
        result_1_out,
        result_1_out_ap_vld
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] conv_i_i341_reload;
input  [31:0] phi_ln139_reload;
input  [31:0] phi_ln139_1_reload;
input  [31:0] phi_ln139_2_reload;
input  [31:0] phi_ln139_3_reload;
input  [31:0] phi_ln139_4_reload;
input  [31:0] phi_ln139_5_reload;
input  [31:0] phi_ln139_6_reload;
input  [31:0] phi_ln139_7_reload;
input  [31:0] phi_ln139_8_reload;
input  [31:0] phi_ln139_9_reload;
input  [31:0] phi_ln139_10_reload;
input  [31:0] phi_ln139_11_reload;
input  [31:0] phi_ln139_12_reload;
input  [31:0] phi_ln139_13_reload;
input  [31:0] phi_ln139_14_reload;
input  [31:0] phi_ln139_15_reload;
input  [31:0] phi_ln139_16_reload;
input  [31:0] phi_ln139_17_reload;
input  [31:0] phi_ln139_18_reload;
input  [31:0] phi_ln139_19_reload;
input  [31:0] phi_ln139_20_reload;
input  [31:0] phi_ln139_21_reload;
input  [31:0] phi_ln139_22_reload;
input  [31:0] phi_ln139_23_reload;
input  [31:0] phi_ln139_24_reload;
input  [31:0] phi_ln139_25_reload;
input  [31:0] phi_ln139_26_reload;
input  [31:0] phi_ln139_27_reload;
input  [31:0] phi_ln139_28_reload;
input  [31:0] phi_ln139_29_reload;
input  [31:0] phi_ln139_30_reload;
input  [31:0] phi_ln139_31_reload;
input  [31:0] phi_ln139_32_reload;
input  [31:0] phi_ln139_33_reload;
input  [31:0] phi_ln139_34_reload;
input  [31:0] phi_ln139_35_reload;
input  [31:0] phi_ln139_36_reload;
input  [31:0] phi_ln139_37_reload;
input  [31:0] phi_ln139_38_reload;
input  [31:0] phi_ln139_39_reload;
input  [31:0] phi_ln139_40_reload;
input  [31:0] phi_ln139_41_reload;
input  [31:0] phi_ln139_42_reload;
input  [31:0] phi_ln139_43_reload;
input  [31:0] phi_ln139_44_reload;
input  [31:0] phi_ln139_45_reload;
input  [31:0] phi_ln139_46_reload;
input  [31:0] phi_ln139_47_reload;
input  [31:0] phi_ln139_48_reload;
input  [31:0] phi_ln139_49_reload;
input  [31:0] phi_ln139_50_reload;
input  [31:0] phi_ln139_51_reload;
input  [31:0] phi_ln139_52_reload;
input  [31:0] phi_ln139_53_reload;
input  [31:0] phi_ln139_54_reload;
input  [31:0] phi_ln139_55_reload;
input  [31:0] phi_ln139_56_reload;
input  [31:0] phi_ln139_57_reload;
input  [31:0] phi_ln139_58_reload;
input  [31:0] phi_ln139_59_reload;
input  [31:0] phi_ln139_60_reload;
input  [31:0] phi_ln139_61_reload;
input  [31:0] phi_ln139_62_reload;
input  [31:0] phi_ln139_63_reload;
input  [31:0] phi_ln139_64_reload;
input  [31:0] phi_ln139_65_reload;
input  [31:0] phi_ln139_66_reload;
input  [31:0] phi_ln139_67_reload;
input  [31:0] phi_ln139_68_reload;
input  [31:0] phi_ln139_69_reload;
input  [31:0] phi_ln139_70_reload;
input  [31:0] phi_ln139_71_reload;
input  [31:0] phi_ln139_72_reload;
input  [31:0] phi_ln139_73_reload;
input  [31:0] phi_ln139_74_reload;
input  [31:0] phi_ln139_75_reload;
input  [31:0] phi_ln139_76_reload;
input  [31:0] phi_ln139_77_reload;
input  [31:0] phi_ln139_78_reload;
input  [31:0] phi_ln139_79_reload;
output  [31:0] result_1_out;
output   result_1_out_ap_vld;

reg ap_idle;
reg result_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln154_fu_891_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] result_1_fu_364;
wire   [31:0] result_fu_1300_p2;
reg   [3:0] j_fu_368;
wire   [3:0] add_ln157_fu_1306_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j_load;
reg   [3:0] i_fu_372;
wire   [3:0] select_ln154_fu_932_p3;
reg   [3:0] ap_sig_allocacmp_i_load;
reg   [6:0] indvar_flatten_fu_376;
wire   [6:0] add_ln154_fu_897_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [0:0] icmp_ln157_fu_912_p2;
wire   [3:0] add_ln154_1_fu_926_p2;
wire   [6:0] p_shl_fu_944_p3;
wire   [6:0] zext_ln157_fu_940_p1;
wire   [3:0] select_ln153_fu_918_p3;
wire   [6:0] zext_ln157_1_fu_958_p1;
wire   [6:0] add_ln157_1_fu_952_p2;
wire   [31:0] tmp_fu_968_p163;
wire   [6:0] tmp_fu_968_p164;
wire   [31:0] tmp_fu_968_p165;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [6:0] tmp_fu_968_p1;
wire   [6:0] tmp_fu_968_p3;
wire   [6:0] tmp_fu_968_p5;
wire   [6:0] tmp_fu_968_p7;
wire   [6:0] tmp_fu_968_p9;
wire   [6:0] tmp_fu_968_p11;
wire   [6:0] tmp_fu_968_p13;
wire   [6:0] tmp_fu_968_p15;
wire   [6:0] tmp_fu_968_p17;
wire   [6:0] tmp_fu_968_p19;
wire   [6:0] tmp_fu_968_p21;
wire   [6:0] tmp_fu_968_p23;
wire   [6:0] tmp_fu_968_p25;
wire   [6:0] tmp_fu_968_p27;
wire   [6:0] tmp_fu_968_p29;
wire   [6:0] tmp_fu_968_p31;
wire   [6:0] tmp_fu_968_p33;
wire   [6:0] tmp_fu_968_p35;
wire   [6:0] tmp_fu_968_p37;
wire   [6:0] tmp_fu_968_p39;
wire   [6:0] tmp_fu_968_p41;
wire   [6:0] tmp_fu_968_p43;
wire   [6:0] tmp_fu_968_p45;
wire   [6:0] tmp_fu_968_p47;
wire   [6:0] tmp_fu_968_p49;
wire   [6:0] tmp_fu_968_p51;
wire   [6:0] tmp_fu_968_p53;
wire   [6:0] tmp_fu_968_p55;
wire   [6:0] tmp_fu_968_p57;
wire   [6:0] tmp_fu_968_p59;
wire   [6:0] tmp_fu_968_p61;
wire   [6:0] tmp_fu_968_p63;
wire   [6:0] tmp_fu_968_p65;
wire   [6:0] tmp_fu_968_p67;
wire   [6:0] tmp_fu_968_p69;
wire   [6:0] tmp_fu_968_p71;
wire   [6:0] tmp_fu_968_p73;
wire   [6:0] tmp_fu_968_p75;
wire   [6:0] tmp_fu_968_p77;
wire   [6:0] tmp_fu_968_p79;
wire   [6:0] tmp_fu_968_p81;
wire   [6:0] tmp_fu_968_p83;
wire   [6:0] tmp_fu_968_p85;
wire   [6:0] tmp_fu_968_p87;
wire   [6:0] tmp_fu_968_p89;
wire   [6:0] tmp_fu_968_p91;
wire   [6:0] tmp_fu_968_p93;
wire   [6:0] tmp_fu_968_p95;
wire   [6:0] tmp_fu_968_p97;
wire   [6:0] tmp_fu_968_p99;
wire   [6:0] tmp_fu_968_p101;
wire   [6:0] tmp_fu_968_p103;
wire   [6:0] tmp_fu_968_p105;
wire   [6:0] tmp_fu_968_p107;
wire   [6:0] tmp_fu_968_p109;
wire   [6:0] tmp_fu_968_p111;
wire   [6:0] tmp_fu_968_p113;
wire   [6:0] tmp_fu_968_p115;
wire   [6:0] tmp_fu_968_p117;
wire   [6:0] tmp_fu_968_p119;
wire   [6:0] tmp_fu_968_p121;
wire   [6:0] tmp_fu_968_p123;
wire   [6:0] tmp_fu_968_p125;
wire   [6:0] tmp_fu_968_p127;
wire  signed [6:0] tmp_fu_968_p129;
wire  signed [6:0] tmp_fu_968_p131;
wire  signed [6:0] tmp_fu_968_p133;
wire  signed [6:0] tmp_fu_968_p135;
wire  signed [6:0] tmp_fu_968_p137;
wire  signed [6:0] tmp_fu_968_p139;
wire  signed [6:0] tmp_fu_968_p141;
wire  signed [6:0] tmp_fu_968_p143;
wire  signed [6:0] tmp_fu_968_p145;
wire  signed [6:0] tmp_fu_968_p147;
wire  signed [6:0] tmp_fu_968_p149;
wire  signed [6:0] tmp_fu_968_p151;
wire  signed [6:0] tmp_fu_968_p153;
wire  signed [6:0] tmp_fu_968_p155;
wire  signed [6:0] tmp_fu_968_p157;
wire  signed [6:0] tmp_fu_968_p159;
wire  signed [6:0] tmp_fu_968_p161;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 result_1_fu_364 = 32'd0;
#0 j_fu_368 = 4'd0;
#0 i_fu_372 = 4'd0;
#0 indvar_flatten_fu_376 = 7'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) process_features_sparsemux_163_7_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 7'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 7'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 7'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 7'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 7'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 7'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 7'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 7'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 7'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 7'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 7'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 7'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 7'hC ),
    .din12_WIDTH( 32 ),
    .CASE13( 7'hD ),
    .din13_WIDTH( 32 ),
    .CASE14( 7'hE ),
    .din14_WIDTH( 32 ),
    .CASE15( 7'hF ),
    .din15_WIDTH( 32 ),
    .CASE16( 7'h10 ),
    .din16_WIDTH( 32 ),
    .CASE17( 7'h11 ),
    .din17_WIDTH( 32 ),
    .CASE18( 7'h12 ),
    .din18_WIDTH( 32 ),
    .CASE19( 7'h13 ),
    .din19_WIDTH( 32 ),
    .CASE20( 7'h14 ),
    .din20_WIDTH( 32 ),
    .CASE21( 7'h15 ),
    .din21_WIDTH( 32 ),
    .CASE22( 7'h16 ),
    .din22_WIDTH( 32 ),
    .CASE23( 7'h17 ),
    .din23_WIDTH( 32 ),
    .CASE24( 7'h18 ),
    .din24_WIDTH( 32 ),
    .CASE25( 7'h19 ),
    .din25_WIDTH( 32 ),
    .CASE26( 7'h1A ),
    .din26_WIDTH( 32 ),
    .CASE27( 7'h1B ),
    .din27_WIDTH( 32 ),
    .CASE28( 7'h1C ),
    .din28_WIDTH( 32 ),
    .CASE29( 7'h1D ),
    .din29_WIDTH( 32 ),
    .CASE30( 7'h1E ),
    .din30_WIDTH( 32 ),
    .CASE31( 7'h1F ),
    .din31_WIDTH( 32 ),
    .CASE32( 7'h20 ),
    .din32_WIDTH( 32 ),
    .CASE33( 7'h21 ),
    .din33_WIDTH( 32 ),
    .CASE34( 7'h22 ),
    .din34_WIDTH( 32 ),
    .CASE35( 7'h23 ),
    .din35_WIDTH( 32 ),
    .CASE36( 7'h24 ),
    .din36_WIDTH( 32 ),
    .CASE37( 7'h25 ),
    .din37_WIDTH( 32 ),
    .CASE38( 7'h26 ),
    .din38_WIDTH( 32 ),
    .CASE39( 7'h27 ),
    .din39_WIDTH( 32 ),
    .CASE40( 7'h28 ),
    .din40_WIDTH( 32 ),
    .CASE41( 7'h29 ),
    .din41_WIDTH( 32 ),
    .CASE42( 7'h2A ),
    .din42_WIDTH( 32 ),
    .CASE43( 7'h2B ),
    .din43_WIDTH( 32 ),
    .CASE44( 7'h2C ),
    .din44_WIDTH( 32 ),
    .CASE45( 7'h2D ),
    .din45_WIDTH( 32 ),
    .CASE46( 7'h2E ),
    .din46_WIDTH( 32 ),
    .CASE47( 7'h2F ),
    .din47_WIDTH( 32 ),
    .CASE48( 7'h30 ),
    .din48_WIDTH( 32 ),
    .CASE49( 7'h31 ),
    .din49_WIDTH( 32 ),
    .CASE50( 7'h32 ),
    .din50_WIDTH( 32 ),
    .CASE51( 7'h33 ),
    .din51_WIDTH( 32 ),
    .CASE52( 7'h34 ),
    .din52_WIDTH( 32 ),
    .CASE53( 7'h35 ),
    .din53_WIDTH( 32 ),
    .CASE54( 7'h36 ),
    .din54_WIDTH( 32 ),
    .CASE55( 7'h37 ),
    .din55_WIDTH( 32 ),
    .CASE56( 7'h38 ),
    .din56_WIDTH( 32 ),
    .CASE57( 7'h39 ),
    .din57_WIDTH( 32 ),
    .CASE58( 7'h3A ),
    .din58_WIDTH( 32 ),
    .CASE59( 7'h3B ),
    .din59_WIDTH( 32 ),
    .CASE60( 7'h3C ),
    .din60_WIDTH( 32 ),
    .CASE61( 7'h3D ),
    .din61_WIDTH( 32 ),
    .CASE62( 7'h3E ),
    .din62_WIDTH( 32 ),
    .CASE63( 7'h3F ),
    .din63_WIDTH( 32 ),
    .CASE64( 7'h40 ),
    .din64_WIDTH( 32 ),
    .CASE65( 7'h41 ),
    .din65_WIDTH( 32 ),
    .CASE66( 7'h42 ),
    .din66_WIDTH( 32 ),
    .CASE67( 7'h43 ),
    .din67_WIDTH( 32 ),
    .CASE68( 7'h44 ),
    .din68_WIDTH( 32 ),
    .CASE69( 7'h45 ),
    .din69_WIDTH( 32 ),
    .CASE70( 7'h46 ),
    .din70_WIDTH( 32 ),
    .CASE71( 7'h47 ),
    .din71_WIDTH( 32 ),
    .CASE72( 7'h48 ),
    .din72_WIDTH( 32 ),
    .CASE73( 7'h49 ),
    .din73_WIDTH( 32 ),
    .CASE74( 7'h4A ),
    .din74_WIDTH( 32 ),
    .CASE75( 7'h4B ),
    .din75_WIDTH( 32 ),
    .CASE76( 7'h4C ),
    .din76_WIDTH( 32 ),
    .CASE77( 7'h4D ),
    .din77_WIDTH( 32 ),
    .CASE78( 7'h4E ),
    .din78_WIDTH( 32 ),
    .CASE79( 7'h4F ),
    .din79_WIDTH( 32 ),
    .CASE80( 7'h50 ),
    .din80_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
sparsemux_163_7_32_1_1_U508(
    .din0(conv_i_i341_reload),
    .din1(phi_ln139_reload),
    .din2(phi_ln139_1_reload),
    .din3(phi_ln139_2_reload),
    .din4(phi_ln139_3_reload),
    .din5(phi_ln139_4_reload),
    .din6(phi_ln139_5_reload),
    .din7(phi_ln139_6_reload),
    .din8(phi_ln139_7_reload),
    .din9(phi_ln139_8_reload),
    .din10(phi_ln139_9_reload),
    .din11(phi_ln139_10_reload),
    .din12(phi_ln139_11_reload),
    .din13(phi_ln139_12_reload),
    .din14(phi_ln139_13_reload),
    .din15(phi_ln139_14_reload),
    .din16(phi_ln139_15_reload),
    .din17(phi_ln139_16_reload),
    .din18(phi_ln139_17_reload),
    .din19(phi_ln139_18_reload),
    .din20(phi_ln139_19_reload),
    .din21(phi_ln139_20_reload),
    .din22(phi_ln139_21_reload),
    .din23(phi_ln139_22_reload),
    .din24(phi_ln139_23_reload),
    .din25(phi_ln139_24_reload),
    .din26(phi_ln139_25_reload),
    .din27(phi_ln139_26_reload),
    .din28(phi_ln139_27_reload),
    .din29(phi_ln139_28_reload),
    .din30(phi_ln139_29_reload),
    .din31(phi_ln139_30_reload),
    .din32(phi_ln139_31_reload),
    .din33(phi_ln139_32_reload),
    .din34(phi_ln139_33_reload),
    .din35(phi_ln139_34_reload),
    .din36(phi_ln139_35_reload),
    .din37(phi_ln139_36_reload),
    .din38(phi_ln139_37_reload),
    .din39(phi_ln139_38_reload),
    .din40(phi_ln139_39_reload),
    .din41(phi_ln139_40_reload),
    .din42(phi_ln139_41_reload),
    .din43(phi_ln139_42_reload),
    .din44(phi_ln139_43_reload),
    .din45(phi_ln139_44_reload),
    .din46(phi_ln139_45_reload),
    .din47(phi_ln139_46_reload),
    .din48(phi_ln139_47_reload),
    .din49(phi_ln139_48_reload),
    .din50(phi_ln139_49_reload),
    .din51(phi_ln139_50_reload),
    .din52(phi_ln139_51_reload),
    .din53(phi_ln139_52_reload),
    .din54(phi_ln139_53_reload),
    .din55(phi_ln139_54_reload),
    .din56(phi_ln139_55_reload),
    .din57(phi_ln139_56_reload),
    .din58(phi_ln139_57_reload),
    .din59(phi_ln139_58_reload),
    .din60(phi_ln139_59_reload),
    .din61(phi_ln139_60_reload),
    .din62(phi_ln139_61_reload),
    .din63(phi_ln139_62_reload),
    .din64(phi_ln139_63_reload),
    .din65(phi_ln139_64_reload),
    .din66(phi_ln139_65_reload),
    .din67(phi_ln139_66_reload),
    .din68(phi_ln139_67_reload),
    .din69(phi_ln139_68_reload),
    .din70(phi_ln139_69_reload),
    .din71(phi_ln139_70_reload),
    .din72(phi_ln139_71_reload),
    .din73(phi_ln139_72_reload),
    .din74(phi_ln139_73_reload),
    .din75(phi_ln139_74_reload),
    .din76(phi_ln139_75_reload),
    .din77(phi_ln139_76_reload),
    .din78(phi_ln139_77_reload),
    .din79(phi_ln139_78_reload),
    .din80(phi_ln139_79_reload),
    .def(tmp_fu_968_p163),
    .sel(tmp_fu_968_p164),
    .dout(tmp_fu_968_p165)
);

process_features_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln154_fu_891_p2 == 1'd0)) begin
            i_fu_372 <= select_ln154_fu_932_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_372 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln154_fu_891_p2 == 1'd0)) begin
            indvar_flatten_fu_376 <= add_ln154_fu_897_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_376 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln154_fu_891_p2 == 1'd0)) begin
            j_fu_368 <= add_ln157_fu_1306_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_368 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln154_fu_891_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        result_1_fu_364 <= result_fu_1300_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln154_fu_891_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_372;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_376;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_368;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln154_fu_891_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        result_1_out_ap_vld = 1'b1;
    end else begin
        result_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln154_1_fu_926_p2 = (ap_sig_allocacmp_i_load + 4'd1);

assign add_ln154_fu_897_p2 = (ap_sig_allocacmp_indvar_flatten_load + 7'd1);

assign add_ln157_1_fu_952_p2 = (p_shl_fu_944_p3 + zext_ln157_fu_940_p1);

assign add_ln157_fu_1306_p2 = (select_ln153_fu_918_p3 + 4'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign icmp_ln154_fu_891_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 7'd81) ? 1'b1 : 1'b0);

assign icmp_ln157_fu_912_p2 = ((ap_sig_allocacmp_j_load == 4'd9) ? 1'b1 : 1'b0);

assign p_shl_fu_944_p3 = {{select_ln154_fu_932_p3}, {3'd0}};

assign result_1_out = result_1_fu_364;

assign result_fu_1300_p2 = (tmp_fu_968_p165 + result_1_fu_364);

assign select_ln153_fu_918_p3 = ((icmp_ln157_fu_912_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j_load);

assign select_ln154_fu_932_p3 = ((icmp_ln157_fu_912_p2[0:0] == 1'b1) ? add_ln154_1_fu_926_p2 : ap_sig_allocacmp_i_load);

assign tmp_fu_968_p163 = 'bx;

assign tmp_fu_968_p164 = (zext_ln157_1_fu_958_p1 + add_ln157_1_fu_952_p2);

assign zext_ln157_1_fu_958_p1 = select_ln153_fu_918_p3;

assign zext_ln157_fu_940_p1 = select_ln154_fu_932_p3;

endmodule //process_features_calculate_single_value_Pipeline_VITIS_LOOP_154_1_VITIS_LOOP_157_2
