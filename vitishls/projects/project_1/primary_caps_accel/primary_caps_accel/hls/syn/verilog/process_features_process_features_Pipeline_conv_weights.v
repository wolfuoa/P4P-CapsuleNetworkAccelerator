// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module process_features_process_features_Pipeline_conv_weights (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weights_stream_dout,
        weights_stream_empty_n,
        weights_stream_read,
        weight_buffer_address0,
        weight_buffer_ce0,
        weight_buffer_we0,
        weight_buffer_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] weights_stream_dout;
input   weights_stream_empty_n;
output   weights_stream_read;
output  [7:0] weight_buffer_address0;
output   weight_buffer_ce0;
output  [323:0] weight_buffer_we0;
output  [2591:0] weight_buffer_d0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln104_fu_118_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    weights_stream_blk_n;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln104_fu_177_p1;
reg   [14:0] phi_urem_fu_70;
wire   [14:0] select_ln106_fu_153_p3;
reg    ap_block_pp0_stage0_11001;
wire    ap_loop_init;
reg   [30:0] phi_mul_fu_74;
wire   [30:0] add_ln104_1_fu_161_p2;
reg   [14:0] i_fu_78;
wire   [14:0] add_ln104_fu_124_p2;
reg   [14:0] ap_sig_allocacmp_i_1;
reg    weights_stream_read_local;
reg    weight_buffer_ce0_local;
reg   [323:0] weight_buffer_we0_local;
wire   [2591:0] shl_ln107_fu_202_p2;
wire   [323:0] shl_ln107_1_fu_221_p2;
wire   [14:0] add_ln106_fu_141_p2;
wire   [0:0] icmp_ln106_fu_147_p2;
wire   [8:0] tmp_fu_167_p4;
wire   [6:0] trunc_ln107_fu_182_p1;
wire   [11:0] shl_ln_fu_186_p3;
wire   [2591:0] zext_ln107_1_fu_198_p1;
wire   [2591:0] zext_ln107_fu_194_p1;
wire   [8:0] tmp_13_fu_209_p3;
wire   [323:0] zext_ln107_2_fu_217_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 phi_urem_fu_70 = 15'd0;
#0 phi_mul_fu_74 = 31'd0;
#0 i_fu_78 = 15'd0;
#0 ap_done_reg = 1'b0;
end

process_features_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln104_fu_118_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_78 <= add_ln104_fu_124_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_78 <= 15'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_mul_fu_74 <= 31'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            phi_mul_fu_74 <= add_ln104_1_fu_161_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_urem_fu_70 <= 15'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            phi_urem_fu_70 <= select_ln106_fu_153_p3;
        end
    end
end

always @ (*) begin
    if (((icmp_ln104_fu_118_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 15'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_78;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_buffer_ce0_local = 1'b1;
    end else begin
        weight_buffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_buffer_we0_local = shl_ln107_1_fu_221_p2;
    end else begin
        weight_buffer_we0_local = 324'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_blk_n = weights_stream_empty_n;
    end else begin
        weights_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_stream_read_local = 1'b1;
    end else begin
        weights_stream_read_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln104_1_fu_161_p2 = (phi_mul_fu_74 + 31'd51782);

assign add_ln104_fu_124_p2 = (ap_sig_allocacmp_i_1 + 15'd1);

assign add_ln106_fu_141_p2 = (phi_urem_fu_70 + 15'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (weights_stream_empty_n == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign icmp_ln104_fu_118_p2 = ((ap_sig_allocacmp_i_1 == 15'd20736) ? 1'b1 : 1'b0);

assign icmp_ln106_fu_147_p2 = ((add_ln106_fu_141_p2 < 15'd81) ? 1'b1 : 1'b0);

assign select_ln106_fu_153_p3 = ((icmp_ln106_fu_147_p2[0:0] == 1'b1) ? add_ln106_fu_141_p2 : 15'd0);

assign shl_ln107_1_fu_221_p2 = 324'd15 << zext_ln107_2_fu_217_p1;

assign shl_ln107_fu_202_p2 = zext_ln107_1_fu_198_p1 << zext_ln107_fu_194_p1;

assign shl_ln_fu_186_p3 = {{trunc_ln107_fu_182_p1}, {5'd0}};

assign tmp_13_fu_209_p3 = {{trunc_ln107_fu_182_p1}, {2'd0}};

assign tmp_fu_167_p4 = {{phi_mul_fu_74[30:22]}};

assign trunc_ln107_fu_182_p1 = phi_urem_fu_70[6:0];

assign weight_buffer_address0 = zext_ln104_fu_177_p1;

assign weight_buffer_ce0 = weight_buffer_ce0_local;

assign weight_buffer_d0 = shl_ln107_fu_202_p2;

assign weight_buffer_we0 = weight_buffer_we0_local;

assign weights_stream_read = weights_stream_read_local;

assign zext_ln104_fu_177_p1 = tmp_fu_167_p4;

assign zext_ln107_1_fu_198_p1 = weights_stream_dout;

assign zext_ln107_2_fu_217_p1 = tmp_13_fu_209_p3;

assign zext_ln107_fu_194_p1 = shl_ln_fu_186_p3;

endmodule //process_features_process_features_Pipeline_conv_weights
