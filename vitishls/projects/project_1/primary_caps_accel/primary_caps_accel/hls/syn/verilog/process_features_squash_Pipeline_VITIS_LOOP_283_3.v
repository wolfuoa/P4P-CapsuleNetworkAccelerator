// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module process_features_squash_Pipeline_VITIS_LOOP_283_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        squared_norm_address0,
        squared_norm_ce0,
        squared_norm_we0,
        squared_norm_d0,
        squared_norm_address1,
        squared_norm_ce1,
        squared_norm_q1,
        squared_input_address0,
        squared_input_ce0,
        squared_input_q0,
        squared_input_address1,
        squared_input_ce1,
        squared_input_q1,
        squared_input_1_address0,
        squared_input_1_ce0,
        squared_input_1_q0,
        squared_input_1_address1,
        squared_input_1_ce1,
        squared_input_1_q1,
        squared_input_2_address0,
        squared_input_2_ce0,
        squared_input_2_q0,
        squared_input_2_address1,
        squared_input_2_ce1,
        squared_input_2_q1,
        squared_input_3_address0,
        squared_input_3_ce0,
        squared_input_3_q0,
        squared_input_3_address1,
        squared_input_3_ce1,
        squared_input_3_q1,
        scale_address0,
        scale_ce0,
        scale_we0,
        scale_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] squared_norm_address0;
output   squared_norm_ce0;
output   squared_norm_we0;
output  [31:0] squared_norm_d0;
output  [10:0] squared_norm_address1;
output   squared_norm_ce1;
input  [31:0] squared_norm_q1;
output  [11:0] squared_input_address0;
output   squared_input_ce0;
input  [31:0] squared_input_q0;
output  [11:0] squared_input_address1;
output   squared_input_ce1;
input  [31:0] squared_input_q1;
output  [11:0] squared_input_1_address0;
output   squared_input_1_ce0;
input  [31:0] squared_input_1_q0;
output  [11:0] squared_input_1_address1;
output   squared_input_1_ce1;
input  [31:0] squared_input_1_q1;
output  [11:0] squared_input_2_address0;
output   squared_input_2_ce0;
input  [31:0] squared_input_2_q0;
output  [11:0] squared_input_2_address1;
output   squared_input_2_ce1;
input  [31:0] squared_input_2_q1;
output  [11:0] squared_input_3_address0;
output   squared_input_3_ce0;
input  [31:0] squared_input_3_q0;
output  [11:0] squared_input_3_address1;
output   squared_input_3_ce1;
input  [31:0] squared_input_3_q1;
output  [10:0] scale_address0;
output   scale_ce0;
output   scale_we0;
output  [31:0] scale_d0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_enable_reg_pp0_iter69;
reg    ap_enable_reg_pp0_iter70;
reg    ap_enable_reg_pp0_iter71;
reg    ap_enable_reg_pp0_iter72;
reg    ap_enable_reg_pp0_iter73;
reg    ap_enable_reg_pp0_iter74;
reg    ap_enable_reg_pp0_iter75;
reg    ap_enable_reg_pp0_iter76;
reg    ap_enable_reg_pp0_iter77;
reg    ap_enable_reg_pp0_iter78;
reg    ap_enable_reg_pp0_iter79;
reg    ap_enable_reg_pp0_iter80;
reg    ap_enable_reg_pp0_iter81;
reg    ap_enable_reg_pp0_iter82;
reg    ap_enable_reg_pp0_iter83;
reg    ap_enable_reg_pp0_iter84;
reg    ap_enable_reg_pp0_iter85;
reg    ap_enable_reg_pp0_iter86;
reg    ap_enable_reg_pp0_iter87;
reg    ap_enable_reg_pp0_iter88;
reg    ap_enable_reg_pp0_iter89;
reg    ap_enable_reg_pp0_iter90;
reg    ap_enable_reg_pp0_iter91;
reg    ap_enable_reg_pp0_iter92;
reg    ap_enable_reg_pp0_iter93;
reg    ap_enable_reg_pp0_iter94;
reg    ap_enable_reg_pp0_iter95;
reg    ap_enable_reg_pp0_iter96;
reg    ap_enable_reg_pp0_iter97;
reg    ap_enable_reg_pp0_iter98;
reg    ap_enable_reg_pp0_iter99;
reg    ap_enable_reg_pp0_iter100;
reg    ap_enable_reg_pp0_iter101;
reg    ap_enable_reg_pp0_iter102;
reg    ap_enable_reg_pp0_iter103;
reg    ap_enable_reg_pp0_iter104;
reg    ap_enable_reg_pp0_iter105;
reg    ap_enable_reg_pp0_iter106;
reg    ap_enable_reg_pp0_iter107;
reg    ap_enable_reg_pp0_iter108;
reg    ap_enable_reg_pp0_iter109;
reg    ap_enable_reg_pp0_iter110;
reg    ap_enable_reg_pp0_iter111;
reg    ap_enable_reg_pp0_iter112;
reg    ap_enable_reg_pp0_iter113;
reg    ap_enable_reg_pp0_iter114;
reg    ap_enable_reg_pp0_iter115;
reg    ap_enable_reg_pp0_iter116;
reg    ap_enable_reg_pp0_iter117;
reg    ap_enable_reg_pp0_iter118;
reg    ap_enable_reg_pp0_iter119;
reg    ap_enable_reg_pp0_iter120;
reg    ap_enable_reg_pp0_iter121;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln283_fu_302_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln283_fu_314_p1;
reg   [63:0] zext_ln283_reg_1031;
reg   [63:0] zext_ln283_reg_1031_pp0_iter1_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter2_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter3_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter4_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter5_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter6_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter7_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter8_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter9_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter10_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter11_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter12_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter13_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter14_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter15_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter16_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter17_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter18_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter19_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter20_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter21_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter22_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter23_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter24_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter25_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter26_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter27_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter28_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter29_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter30_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter31_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter32_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter33_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter34_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter35_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter36_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter37_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter38_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter39_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter40_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter41_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter42_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter43_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter44_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter45_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter46_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter47_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter48_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter49_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter50_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter51_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter52_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter53_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter54_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter55_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter56_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter57_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter58_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter59_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter60_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter61_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter62_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter63_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter64_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter65_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter66_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter67_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter68_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter69_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter70_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter71_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter72_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter73_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter74_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter75_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter76_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter77_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter78_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter79_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter80_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter81_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter82_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter83_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter84_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter85_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter86_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter87_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter88_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter89_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter90_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter91_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter92_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter93_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter94_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter95_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter96_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter97_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter98_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter99_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter100_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter101_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter102_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter103_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter104_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter105_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter106_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter107_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter108_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter109_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter110_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter111_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter112_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter113_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter114_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter115_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter116_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter117_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter118_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter119_reg;
reg   [63:0] zext_ln283_reg_1031_pp0_iter120_reg;
reg   [10:0] squared_norm_addr_reg_1036;
wire   [0:0] icmp_ln291_fu_437_p2;
reg   [0:0] icmp_ln291_reg_1092;
reg   [0:0] icmp_ln291_reg_1092_pp0_iter2_reg;
wire   [0:0] tmp_fu_443_p3;
reg   [0:0] tmp_reg_1097;
wire   [31:0] select_ln291_fu_457_p3;
reg   [31:0] select_ln291_reg_1102;
wire   [31:0] LD_fu_738_p1;
reg   [31:0] LD_reg_1108;
wire   [31:0] retval_0_i_i_fu_745_p3;
reg   [31:0] retval_0_i_i_reg_1113;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter4_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter5_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter6_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter7_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter8_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter9_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter10_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter11_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter12_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter13_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter14_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter15_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter16_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter17_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter18_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter19_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter20_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter21_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter22_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter23_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter24_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter25_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter26_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter27_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter28_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter29_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter30_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter31_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter32_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter33_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter34_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter35_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter36_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter37_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter38_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter39_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter40_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter41_reg;
reg   [31:0] retval_0_i_i_reg_1113_pp0_iter42_reg;
wire   [31:0] grp_fu_289_p2;
reg   [31:0] tmp_s_reg_1118;
wire   [31:0] ref_tmp_i_i_4_fu_974_p11;
reg  signed [31:0] ref_tmp_i_i_4_reg_1123;
wire    ap_block_pp0_stage0;
wire   [63:0] p_cast25_fu_327_p1;
wire   [63:0] zext_ln288_fu_343_p1;
reg   [10:0] grid_rows_1_fu_152;
wire   [10:0] add_ln283_fu_308_p2;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_grid_rows;
reg    squared_norm_ce1_local;
reg    squared_norm_we0_local;
wire  signed [31:0] add_ln288_7_fu_398_p2;
reg    squared_norm_ce0_local;
reg    squared_input_ce1_local;
reg    squared_input_ce0_local;
reg    squared_input_1_ce1_local;
reg    squared_input_1_ce0_local;
reg    squared_input_2_ce1_local;
reg    squared_input_2_ce0_local;
reg    squared_input_3_ce1_local;
reg    squared_input_3_ce0_local;
reg    scale_we0_local;
wire   [31:0] trunc_ln291_9_fu_1015_p1;
reg    scale_ce0_local;
wire   [11:0] tmp_4_fu_319_p3;
wire   [11:0] or_ln2_fu_335_p3;
wire   [31:0] add_ln288_1_fu_362_p2;
wire   [31:0] add_ln288_fu_356_p2;
wire   [31:0] add_ln288_4_fu_380_p2;
wire   [31:0] add_ln288_5_fu_386_p2;
wire   [31:0] add_ln288_3_fu_374_p2;
wire   [31:0] add_ln288_6_fu_392_p2;
wire   [31:0] add_ln288_2_fu_368_p2;
wire  signed [32:0] sext_ln291_fu_405_p1;
wire  signed [32:0] add_ln291_fu_409_p2;
wire   [47:0] shl_ln1_fu_419_p3;
wire  signed [48:0] grp_fu_431_p0;
wire   [31:0] sub_ln291_fu_451_p2;
wire   [32:0] zext_ln291_fu_465_p1;
reg   [32:0] tmp_1_fu_468_p4;
wire   [33:0] tmp_2_fu_478_p3;
wire  signed [63:0] sext_ln291_3_fu_486_p1;
reg   [63:0] tmp_3_fu_490_p3;
wire   [31:0] trunc_ln291_fu_498_p1;
wire   [31:0] sub_ln291_1_fu_506_p2;
wire   [31:0] add_ln291_1_fu_512_p2;
wire   [30:0] tmp_5_fu_518_p4;
wire   [5:0] trunc_ln291_2_fu_534_p1;
wire   [5:0] sub_ln291_7_fu_538_p2;
wire   [32:0] zext_ln291_8_fu_544_p1;
wire   [32:0] lshr_ln291_2_fu_548_p2;
wire   [31:0] trunc_ln291_3_fu_554_p1;
wire   [31:0] and_ln291_3_fu_558_p2;
wire   [0:0] icmp_ln291_1_fu_528_p2;
wire   [0:0] icmp_ln291_2_fu_563_p2;
wire   [0:0] tmp_6_fu_575_p3;
wire   [0:0] tmp_7_fu_589_p3;
wire   [0:0] xor_ln291_2_fu_583_p2;
wire   [0:0] and_ln291_fu_597_p2;
wire   [0:0] phi_ln291_fu_569_p2;
wire   [0:0] or_ln291_fu_603_p2;
wire   [31:0] add_ln291_2_fu_623_p2;
wire   [32:0] zext_ln291_1_fu_629_p1;
wire   [31:0] sub_ln291_2_fu_639_p2;
wire   [32:0] zext_ln291_2_fu_645_p1;
wire   [0:0] icmp_ln291_3_fu_617_p2;
wire   [32:0] lshr_ln291_fu_633_p2;
wire   [32:0] shl_ln291_fu_649_p2;
wire   [32:0] cond49_i_i_in_fu_655_p3;
wire   [1:0] or_ln_fu_609_p3;
wire   [33:0] zext_ln291_3_fu_663_p1;
wire   [33:0] zext_ln291_4_fu_667_p1;
wire   [33:0] add_ln291_3_fu_671_p2;
wire   [32:0] lshr_ln291_1_fu_677_p4;
wire   [0:0] tmp_9_fu_691_p3;
wire   [7:0] trunc_ln291_1_fu_502_p1;
wire   [7:0] sub_ln291_6_fu_707_p2;
wire   [7:0] select_ln291_1_fu_699_p3;
wire   [7:0] add_ln291_4_fu_713_p2;
wire   [63:0] zext_ln291_6_fu_687_p1;
wire   [8:0] tmp_8_fu_719_p3;
wire   [63:0] pi_assign_fu_726_p5;
wire   [31:0] bitcast_ln758_fu_742_p1;
wire   [63:0] grp_fu_286_p1;
wire   [63:0] bitcast_ln716_fu_752_p1;
wire   [10:0] tmp_11_fu_768_p4;
wire   [51:0] trunc_ln291_5_fu_782_p1;
wire   [52:0] zext_ln291_8_cast_fu_786_p3;
wire   [53:0] zext_ln291_10_fu_794_p1;
wire   [0:0] tmp_10_fu_760_p3;
wire   [53:0] sub_ln291_3_fu_798_p2;
wire   [62:0] trunc_ln291_4_fu_756_p1;
wire   [11:0] zext_ln291_5_fu_778_p1;
wire   [11:0] sub_ln291_4_fu_818_p2;
wire   [10:0] trunc_ln291_6_fu_824_p1;
wire   [0:0] icmp_ln291_5_fu_828_p2;
wire   [10:0] add_ln291_5_fu_834_p2;
wire   [10:0] sub_ln291_5_fu_840_p2;
wire   [10:0] select_ln291_3_fu_846_p3;
wire   [53:0] select_ln291_2_fu_804_p3;
wire   [53:0] zext_ln291_7_fu_874_p1;
wire   [53:0] ashr_ln291_fu_878_p2;
wire   [0:0] icmp_ln291_7_fu_868_p2;
wire   [31:0] trunc_ln291_8_fu_884_p1;
wire   [31:0] select_ln291_6_fu_888_p3;
wire   [5:0] tmp_12_fu_904_p4;
wire   [31:0] trunc_ln291_7_fu_864_p1;
wire   [31:0] zext_ln291_9_fu_854_p1;
wire   [0:0] icmp_ln291_8_fu_914_p2;
wire   [31:0] shl_ln291_1_fu_920_p2;
wire   [0:0] icmp_ln291_4_fu_812_p2;
wire   [0:0] icmp_ln291_6_fu_858_p2;
wire   [0:0] xor_ln291_fu_934_p2;
wire   [0:0] or_ln291_1_fu_946_p2;
wire   [0:0] xor_ln291_1_fu_952_p2;
wire   [0:0] and_ln291_1_fu_940_p2;
wire   [0:0] and_ln291_2_fu_958_p2;
wire   [31:0] ref_tmp_i_i_4_fu_974_p6;
wire   [31:0] ref_tmp_i_i_4_fu_974_p8;
wire   [31:0] ref_tmp_i_i_4_fu_974_p9;
wire   [2:0] ref_tmp_i_i_4_fu_974_p10;
wire   [48:0] grp_fu_431_p2;
wire   [64:0] grp_fu_1009_p0;
wire   [31:0] grp_fu_1009_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg    ap_loop_exit_ready_pp0_iter57_reg;
reg    ap_loop_exit_ready_pp0_iter58_reg;
reg    ap_loop_exit_ready_pp0_iter59_reg;
reg    ap_loop_exit_ready_pp0_iter60_reg;
reg    ap_loop_exit_ready_pp0_iter61_reg;
reg    ap_loop_exit_ready_pp0_iter62_reg;
reg    ap_loop_exit_ready_pp0_iter63_reg;
reg    ap_loop_exit_ready_pp0_iter64_reg;
reg    ap_loop_exit_ready_pp0_iter65_reg;
reg    ap_loop_exit_ready_pp0_iter66_reg;
reg    ap_loop_exit_ready_pp0_iter67_reg;
reg    ap_loop_exit_ready_pp0_iter68_reg;
reg    ap_loop_exit_ready_pp0_iter69_reg;
reg    ap_loop_exit_ready_pp0_iter70_reg;
reg    ap_loop_exit_ready_pp0_iter71_reg;
reg    ap_loop_exit_ready_pp0_iter72_reg;
reg    ap_loop_exit_ready_pp0_iter73_reg;
reg    ap_loop_exit_ready_pp0_iter74_reg;
reg    ap_loop_exit_ready_pp0_iter75_reg;
reg    ap_loop_exit_ready_pp0_iter76_reg;
reg    ap_loop_exit_ready_pp0_iter77_reg;
reg    ap_loop_exit_ready_pp0_iter78_reg;
reg    ap_loop_exit_ready_pp0_iter79_reg;
reg    ap_loop_exit_ready_pp0_iter80_reg;
reg    ap_loop_exit_ready_pp0_iter81_reg;
reg    ap_loop_exit_ready_pp0_iter82_reg;
reg    ap_loop_exit_ready_pp0_iter83_reg;
reg    ap_loop_exit_ready_pp0_iter84_reg;
reg    ap_loop_exit_ready_pp0_iter85_reg;
reg    ap_loop_exit_ready_pp0_iter86_reg;
reg    ap_loop_exit_ready_pp0_iter87_reg;
reg    ap_loop_exit_ready_pp0_iter88_reg;
reg    ap_loop_exit_ready_pp0_iter89_reg;
reg    ap_loop_exit_ready_pp0_iter90_reg;
reg    ap_loop_exit_ready_pp0_iter91_reg;
reg    ap_loop_exit_ready_pp0_iter92_reg;
reg    ap_loop_exit_ready_pp0_iter93_reg;
reg    ap_loop_exit_ready_pp0_iter94_reg;
reg    ap_loop_exit_ready_pp0_iter95_reg;
reg    ap_loop_exit_ready_pp0_iter96_reg;
reg    ap_loop_exit_ready_pp0_iter97_reg;
reg    ap_loop_exit_ready_pp0_iter98_reg;
reg    ap_loop_exit_ready_pp0_iter99_reg;
reg    ap_loop_exit_ready_pp0_iter100_reg;
reg    ap_loop_exit_ready_pp0_iter101_reg;
reg    ap_loop_exit_ready_pp0_iter102_reg;
reg    ap_loop_exit_ready_pp0_iter103_reg;
reg    ap_loop_exit_ready_pp0_iter104_reg;
reg    ap_loop_exit_ready_pp0_iter105_reg;
reg    ap_loop_exit_ready_pp0_iter106_reg;
reg    ap_loop_exit_ready_pp0_iter107_reg;
reg    ap_loop_exit_ready_pp0_iter108_reg;
reg    ap_loop_exit_ready_pp0_iter109_reg;
reg    ap_loop_exit_ready_pp0_iter110_reg;
reg    ap_loop_exit_ready_pp0_iter111_reg;
reg    ap_loop_exit_ready_pp0_iter112_reg;
reg    ap_loop_exit_ready_pp0_iter113_reg;
reg    ap_loop_exit_ready_pp0_iter114_reg;
reg    ap_loop_exit_ready_pp0_iter115_reg;
reg    ap_loop_exit_ready_pp0_iter116_reg;
reg    ap_loop_exit_ready_pp0_iter117_reg;
reg    ap_loop_exit_ready_pp0_iter118_reg;
reg    ap_loop_exit_ready_pp0_iter119_reg;
reg    ap_loop_exit_ready_pp0_iter120_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire  signed [2:0] ref_tmp_i_i_4_fu_974_p1;
wire   [2:0] ref_tmp_i_i_4_fu_974_p3;
wire   [2:0] ref_tmp_i_i_4_fu_974_p5;
wire   [2:0] ref_tmp_i_i_4_fu_974_p7;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 ap_enable_reg_pp0_iter69 = 1'b0;
#0 ap_enable_reg_pp0_iter70 = 1'b0;
#0 ap_enable_reg_pp0_iter71 = 1'b0;
#0 ap_enable_reg_pp0_iter72 = 1'b0;
#0 ap_enable_reg_pp0_iter73 = 1'b0;
#0 ap_enable_reg_pp0_iter74 = 1'b0;
#0 ap_enable_reg_pp0_iter75 = 1'b0;
#0 ap_enable_reg_pp0_iter76 = 1'b0;
#0 ap_enable_reg_pp0_iter77 = 1'b0;
#0 ap_enable_reg_pp0_iter78 = 1'b0;
#0 ap_enable_reg_pp0_iter79 = 1'b0;
#0 ap_enable_reg_pp0_iter80 = 1'b0;
#0 ap_enable_reg_pp0_iter81 = 1'b0;
#0 ap_enable_reg_pp0_iter82 = 1'b0;
#0 ap_enable_reg_pp0_iter83 = 1'b0;
#0 ap_enable_reg_pp0_iter84 = 1'b0;
#0 ap_enable_reg_pp0_iter85 = 1'b0;
#0 ap_enable_reg_pp0_iter86 = 1'b0;
#0 ap_enable_reg_pp0_iter87 = 1'b0;
#0 ap_enable_reg_pp0_iter88 = 1'b0;
#0 ap_enable_reg_pp0_iter89 = 1'b0;
#0 ap_enable_reg_pp0_iter90 = 1'b0;
#0 ap_enable_reg_pp0_iter91 = 1'b0;
#0 ap_enable_reg_pp0_iter92 = 1'b0;
#0 ap_enable_reg_pp0_iter93 = 1'b0;
#0 ap_enable_reg_pp0_iter94 = 1'b0;
#0 ap_enable_reg_pp0_iter95 = 1'b0;
#0 ap_enable_reg_pp0_iter96 = 1'b0;
#0 ap_enable_reg_pp0_iter97 = 1'b0;
#0 ap_enable_reg_pp0_iter98 = 1'b0;
#0 ap_enable_reg_pp0_iter99 = 1'b0;
#0 ap_enable_reg_pp0_iter100 = 1'b0;
#0 ap_enable_reg_pp0_iter101 = 1'b0;
#0 ap_enable_reg_pp0_iter102 = 1'b0;
#0 ap_enable_reg_pp0_iter103 = 1'b0;
#0 ap_enable_reg_pp0_iter104 = 1'b0;
#0 ap_enable_reg_pp0_iter105 = 1'b0;
#0 ap_enable_reg_pp0_iter106 = 1'b0;
#0 ap_enable_reg_pp0_iter107 = 1'b0;
#0 ap_enable_reg_pp0_iter108 = 1'b0;
#0 ap_enable_reg_pp0_iter109 = 1'b0;
#0 ap_enable_reg_pp0_iter110 = 1'b0;
#0 ap_enable_reg_pp0_iter111 = 1'b0;
#0 ap_enable_reg_pp0_iter112 = 1'b0;
#0 ap_enable_reg_pp0_iter113 = 1'b0;
#0 ap_enable_reg_pp0_iter114 = 1'b0;
#0 ap_enable_reg_pp0_iter115 = 1'b0;
#0 ap_enable_reg_pp0_iter116 = 1'b0;
#0 ap_enable_reg_pp0_iter117 = 1'b0;
#0 ap_enable_reg_pp0_iter118 = 1'b0;
#0 ap_enable_reg_pp0_iter119 = 1'b0;
#0 ap_enable_reg_pp0_iter120 = 1'b0;
#0 ap_enable_reg_pp0_iter121 = 1'b0;
#0 grid_rows_1_fu_152 = 11'd0;
#0 ap_done_reg = 1'b0;
end

process_features_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U657(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_reg_1118),
    .ce(1'b1),
    .dout(grp_fu_286_p1)
);

process_features_fsqrt_32ns_32ns_32_8_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsqrt_32ns_32ns_32_8_no_dsp_1_U658(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(retval_0_i_i_reg_1113_pp0_iter42_reg),
    .ce(1'b1),
    .dout(grp_fu_289_p2)
);

process_features_sdiv_49s_33s_49_53_1 #(
    .ID( 1 ),
    .NUM_STAGE( 53 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 49 ))
sdiv_49s_33s_49_53_1_U659(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_431_p0),
    .din1(add_ln291_fu_409_p2),
    .ce(1'b1),
    .dout(grp_fu_431_p2)
);

(* dissolve_hierarchy = "yes" *) process_features_sparsemux_9_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 32 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 32 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 32 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
sparsemux_9_3_32_1_1_U660(
    .din0(32'd0),
    .din1(trunc_ln291_7_fu_864_p1),
    .din2(ref_tmp_i_i_4_fu_974_p6),
    .din3(ref_tmp_i_i_4_fu_974_p8),
    .def(ref_tmp_i_i_4_fu_974_p9),
    .sel(ref_tmp_i_i_4_fu_974_p10),
    .dout(ref_tmp_i_i_4_fu_974_p11)
);

process_features_sdiv_65ns_32s_32_69_1 #(
    .ID( 1 ),
    .NUM_STAGE( 69 ),
    .din0_WIDTH( 65 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sdiv_65ns_32s_32_69_1_U661(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1009_p0),
    .din1(ref_tmp_i_i_4_reg_1123),
    .ce(1'b1),
    .dout(grp_fu_1009_p2)
);

process_features_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter120_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter100 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter100 <= ap_enable_reg_pp0_iter99;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter101 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter101 <= ap_enable_reg_pp0_iter100;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter102 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter102 <= ap_enable_reg_pp0_iter101;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter103 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter103 <= ap_enable_reg_pp0_iter102;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter104 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter104 <= ap_enable_reg_pp0_iter103;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter105 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter105 <= ap_enable_reg_pp0_iter104;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter106 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter106 <= ap_enable_reg_pp0_iter105;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter107 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter107 <= ap_enable_reg_pp0_iter106;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter108 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter108 <= ap_enable_reg_pp0_iter107;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter109 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter109 <= ap_enable_reg_pp0_iter108;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter110 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter110 <= ap_enable_reg_pp0_iter109;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter111 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter111 <= ap_enable_reg_pp0_iter110;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter112 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter112 <= ap_enable_reg_pp0_iter111;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter113 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter113 <= ap_enable_reg_pp0_iter112;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter114 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter114 <= ap_enable_reg_pp0_iter113;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter115 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter115 <= ap_enable_reg_pp0_iter114;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter116 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter116 <= ap_enable_reg_pp0_iter115;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter117 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter117 <= ap_enable_reg_pp0_iter116;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter118 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter118 <= ap_enable_reg_pp0_iter117;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter119 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter119 <= ap_enable_reg_pp0_iter118;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter120 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter120 <= ap_enable_reg_pp0_iter119;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter121 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter121 <= ap_enable_reg_pp0_iter120;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter69 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter70 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter71 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter71 <= ap_enable_reg_pp0_iter70;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter72 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter72 <= ap_enable_reg_pp0_iter71;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter73 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter73 <= ap_enable_reg_pp0_iter72;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter74 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter74 <= ap_enable_reg_pp0_iter73;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter75 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter75 <= ap_enable_reg_pp0_iter74;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter76 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter76 <= ap_enable_reg_pp0_iter75;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter77 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter77 <= ap_enable_reg_pp0_iter76;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter78 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter78 <= ap_enable_reg_pp0_iter77;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter79 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter79 <= ap_enable_reg_pp0_iter78;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter80 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter80 <= ap_enable_reg_pp0_iter79;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter81 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter81 <= ap_enable_reg_pp0_iter80;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter82 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter82 <= ap_enable_reg_pp0_iter81;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter83 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter83 <= ap_enable_reg_pp0_iter82;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter84 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter84 <= ap_enable_reg_pp0_iter83;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter85 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter85 <= ap_enable_reg_pp0_iter84;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter86 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter86 <= ap_enable_reg_pp0_iter85;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter87 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter87 <= ap_enable_reg_pp0_iter86;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter88 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter88 <= ap_enable_reg_pp0_iter87;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter89 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter89 <= ap_enable_reg_pp0_iter88;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter90 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter90 <= ap_enable_reg_pp0_iter89;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter91 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter91 <= ap_enable_reg_pp0_iter90;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter92 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter92 <= ap_enable_reg_pp0_iter91;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter93 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter93 <= ap_enable_reg_pp0_iter92;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter94 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter94 <= ap_enable_reg_pp0_iter93;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter95 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter95 <= ap_enable_reg_pp0_iter94;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter96 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter96 <= ap_enable_reg_pp0_iter95;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter97 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter97 <= ap_enable_reg_pp0_iter96;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter98 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter98 <= ap_enable_reg_pp0_iter97;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter99 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter99 <= ap_enable_reg_pp0_iter98;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln283_fu_302_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            grid_rows_1_fu_152 <= add_ln283_fu_308_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            grid_rows_1_fu_152 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        LD_reg_1108 <= LD_fu_738_p1;
        ap_loop_exit_ready_pp0_iter100_reg <= ap_loop_exit_ready_pp0_iter99_reg;
        ap_loop_exit_ready_pp0_iter101_reg <= ap_loop_exit_ready_pp0_iter100_reg;
        ap_loop_exit_ready_pp0_iter102_reg <= ap_loop_exit_ready_pp0_iter101_reg;
        ap_loop_exit_ready_pp0_iter103_reg <= ap_loop_exit_ready_pp0_iter102_reg;
        ap_loop_exit_ready_pp0_iter104_reg <= ap_loop_exit_ready_pp0_iter103_reg;
        ap_loop_exit_ready_pp0_iter105_reg <= ap_loop_exit_ready_pp0_iter104_reg;
        ap_loop_exit_ready_pp0_iter106_reg <= ap_loop_exit_ready_pp0_iter105_reg;
        ap_loop_exit_ready_pp0_iter107_reg <= ap_loop_exit_ready_pp0_iter106_reg;
        ap_loop_exit_ready_pp0_iter108_reg <= ap_loop_exit_ready_pp0_iter107_reg;
        ap_loop_exit_ready_pp0_iter109_reg <= ap_loop_exit_ready_pp0_iter108_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter110_reg <= ap_loop_exit_ready_pp0_iter109_reg;
        ap_loop_exit_ready_pp0_iter111_reg <= ap_loop_exit_ready_pp0_iter110_reg;
        ap_loop_exit_ready_pp0_iter112_reg <= ap_loop_exit_ready_pp0_iter111_reg;
        ap_loop_exit_ready_pp0_iter113_reg <= ap_loop_exit_ready_pp0_iter112_reg;
        ap_loop_exit_ready_pp0_iter114_reg <= ap_loop_exit_ready_pp0_iter113_reg;
        ap_loop_exit_ready_pp0_iter115_reg <= ap_loop_exit_ready_pp0_iter114_reg;
        ap_loop_exit_ready_pp0_iter116_reg <= ap_loop_exit_ready_pp0_iter115_reg;
        ap_loop_exit_ready_pp0_iter117_reg <= ap_loop_exit_ready_pp0_iter116_reg;
        ap_loop_exit_ready_pp0_iter118_reg <= ap_loop_exit_ready_pp0_iter117_reg;
        ap_loop_exit_ready_pp0_iter119_reg <= ap_loop_exit_ready_pp0_iter118_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter120_reg <= ap_loop_exit_ready_pp0_iter119_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
        ap_loop_exit_ready_pp0_iter57_reg <= ap_loop_exit_ready_pp0_iter56_reg;
        ap_loop_exit_ready_pp0_iter58_reg <= ap_loop_exit_ready_pp0_iter57_reg;
        ap_loop_exit_ready_pp0_iter59_reg <= ap_loop_exit_ready_pp0_iter58_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter60_reg <= ap_loop_exit_ready_pp0_iter59_reg;
        ap_loop_exit_ready_pp0_iter61_reg <= ap_loop_exit_ready_pp0_iter60_reg;
        ap_loop_exit_ready_pp0_iter62_reg <= ap_loop_exit_ready_pp0_iter61_reg;
        ap_loop_exit_ready_pp0_iter63_reg <= ap_loop_exit_ready_pp0_iter62_reg;
        ap_loop_exit_ready_pp0_iter64_reg <= ap_loop_exit_ready_pp0_iter63_reg;
        ap_loop_exit_ready_pp0_iter65_reg <= ap_loop_exit_ready_pp0_iter64_reg;
        ap_loop_exit_ready_pp0_iter66_reg <= ap_loop_exit_ready_pp0_iter65_reg;
        ap_loop_exit_ready_pp0_iter67_reg <= ap_loop_exit_ready_pp0_iter66_reg;
        ap_loop_exit_ready_pp0_iter68_reg <= ap_loop_exit_ready_pp0_iter67_reg;
        ap_loop_exit_ready_pp0_iter69_reg <= ap_loop_exit_ready_pp0_iter68_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter70_reg <= ap_loop_exit_ready_pp0_iter69_reg;
        ap_loop_exit_ready_pp0_iter71_reg <= ap_loop_exit_ready_pp0_iter70_reg;
        ap_loop_exit_ready_pp0_iter72_reg <= ap_loop_exit_ready_pp0_iter71_reg;
        ap_loop_exit_ready_pp0_iter73_reg <= ap_loop_exit_ready_pp0_iter72_reg;
        ap_loop_exit_ready_pp0_iter74_reg <= ap_loop_exit_ready_pp0_iter73_reg;
        ap_loop_exit_ready_pp0_iter75_reg <= ap_loop_exit_ready_pp0_iter74_reg;
        ap_loop_exit_ready_pp0_iter76_reg <= ap_loop_exit_ready_pp0_iter75_reg;
        ap_loop_exit_ready_pp0_iter77_reg <= ap_loop_exit_ready_pp0_iter76_reg;
        ap_loop_exit_ready_pp0_iter78_reg <= ap_loop_exit_ready_pp0_iter77_reg;
        ap_loop_exit_ready_pp0_iter79_reg <= ap_loop_exit_ready_pp0_iter78_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter80_reg <= ap_loop_exit_ready_pp0_iter79_reg;
        ap_loop_exit_ready_pp0_iter81_reg <= ap_loop_exit_ready_pp0_iter80_reg;
        ap_loop_exit_ready_pp0_iter82_reg <= ap_loop_exit_ready_pp0_iter81_reg;
        ap_loop_exit_ready_pp0_iter83_reg <= ap_loop_exit_ready_pp0_iter82_reg;
        ap_loop_exit_ready_pp0_iter84_reg <= ap_loop_exit_ready_pp0_iter83_reg;
        ap_loop_exit_ready_pp0_iter85_reg <= ap_loop_exit_ready_pp0_iter84_reg;
        ap_loop_exit_ready_pp0_iter86_reg <= ap_loop_exit_ready_pp0_iter85_reg;
        ap_loop_exit_ready_pp0_iter87_reg <= ap_loop_exit_ready_pp0_iter86_reg;
        ap_loop_exit_ready_pp0_iter88_reg <= ap_loop_exit_ready_pp0_iter87_reg;
        ap_loop_exit_ready_pp0_iter89_reg <= ap_loop_exit_ready_pp0_iter88_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter90_reg <= ap_loop_exit_ready_pp0_iter89_reg;
        ap_loop_exit_ready_pp0_iter91_reg <= ap_loop_exit_ready_pp0_iter90_reg;
        ap_loop_exit_ready_pp0_iter92_reg <= ap_loop_exit_ready_pp0_iter91_reg;
        ap_loop_exit_ready_pp0_iter93_reg <= ap_loop_exit_ready_pp0_iter92_reg;
        ap_loop_exit_ready_pp0_iter94_reg <= ap_loop_exit_ready_pp0_iter93_reg;
        ap_loop_exit_ready_pp0_iter95_reg <= ap_loop_exit_ready_pp0_iter94_reg;
        ap_loop_exit_ready_pp0_iter96_reg <= ap_loop_exit_ready_pp0_iter95_reg;
        ap_loop_exit_ready_pp0_iter97_reg <= ap_loop_exit_ready_pp0_iter96_reg;
        ap_loop_exit_ready_pp0_iter98_reg <= ap_loop_exit_ready_pp0_iter97_reg;
        ap_loop_exit_ready_pp0_iter99_reg <= ap_loop_exit_ready_pp0_iter98_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln291_reg_1092_pp0_iter2_reg <= icmp_ln291_reg_1092;
        ref_tmp_i_i_4_reg_1123 <= ref_tmp_i_i_4_fu_974_p11;
        retval_0_i_i_reg_1113 <= retval_0_i_i_fu_745_p3;
        retval_0_i_i_reg_1113_pp0_iter10_reg <= retval_0_i_i_reg_1113_pp0_iter9_reg;
        retval_0_i_i_reg_1113_pp0_iter11_reg <= retval_0_i_i_reg_1113_pp0_iter10_reg;
        retval_0_i_i_reg_1113_pp0_iter12_reg <= retval_0_i_i_reg_1113_pp0_iter11_reg;
        retval_0_i_i_reg_1113_pp0_iter13_reg <= retval_0_i_i_reg_1113_pp0_iter12_reg;
        retval_0_i_i_reg_1113_pp0_iter14_reg <= retval_0_i_i_reg_1113_pp0_iter13_reg;
        retval_0_i_i_reg_1113_pp0_iter15_reg <= retval_0_i_i_reg_1113_pp0_iter14_reg;
        retval_0_i_i_reg_1113_pp0_iter16_reg <= retval_0_i_i_reg_1113_pp0_iter15_reg;
        retval_0_i_i_reg_1113_pp0_iter17_reg <= retval_0_i_i_reg_1113_pp0_iter16_reg;
        retval_0_i_i_reg_1113_pp0_iter18_reg <= retval_0_i_i_reg_1113_pp0_iter17_reg;
        retval_0_i_i_reg_1113_pp0_iter19_reg <= retval_0_i_i_reg_1113_pp0_iter18_reg;
        retval_0_i_i_reg_1113_pp0_iter20_reg <= retval_0_i_i_reg_1113_pp0_iter19_reg;
        retval_0_i_i_reg_1113_pp0_iter21_reg <= retval_0_i_i_reg_1113_pp0_iter20_reg;
        retval_0_i_i_reg_1113_pp0_iter22_reg <= retval_0_i_i_reg_1113_pp0_iter21_reg;
        retval_0_i_i_reg_1113_pp0_iter23_reg <= retval_0_i_i_reg_1113_pp0_iter22_reg;
        retval_0_i_i_reg_1113_pp0_iter24_reg <= retval_0_i_i_reg_1113_pp0_iter23_reg;
        retval_0_i_i_reg_1113_pp0_iter25_reg <= retval_0_i_i_reg_1113_pp0_iter24_reg;
        retval_0_i_i_reg_1113_pp0_iter26_reg <= retval_0_i_i_reg_1113_pp0_iter25_reg;
        retval_0_i_i_reg_1113_pp0_iter27_reg <= retval_0_i_i_reg_1113_pp0_iter26_reg;
        retval_0_i_i_reg_1113_pp0_iter28_reg <= retval_0_i_i_reg_1113_pp0_iter27_reg;
        retval_0_i_i_reg_1113_pp0_iter29_reg <= retval_0_i_i_reg_1113_pp0_iter28_reg;
        retval_0_i_i_reg_1113_pp0_iter30_reg <= retval_0_i_i_reg_1113_pp0_iter29_reg;
        retval_0_i_i_reg_1113_pp0_iter31_reg <= retval_0_i_i_reg_1113_pp0_iter30_reg;
        retval_0_i_i_reg_1113_pp0_iter32_reg <= retval_0_i_i_reg_1113_pp0_iter31_reg;
        retval_0_i_i_reg_1113_pp0_iter33_reg <= retval_0_i_i_reg_1113_pp0_iter32_reg;
        retval_0_i_i_reg_1113_pp0_iter34_reg <= retval_0_i_i_reg_1113_pp0_iter33_reg;
        retval_0_i_i_reg_1113_pp0_iter35_reg <= retval_0_i_i_reg_1113_pp0_iter34_reg;
        retval_0_i_i_reg_1113_pp0_iter36_reg <= retval_0_i_i_reg_1113_pp0_iter35_reg;
        retval_0_i_i_reg_1113_pp0_iter37_reg <= retval_0_i_i_reg_1113_pp0_iter36_reg;
        retval_0_i_i_reg_1113_pp0_iter38_reg <= retval_0_i_i_reg_1113_pp0_iter37_reg;
        retval_0_i_i_reg_1113_pp0_iter39_reg <= retval_0_i_i_reg_1113_pp0_iter38_reg;
        retval_0_i_i_reg_1113_pp0_iter40_reg <= retval_0_i_i_reg_1113_pp0_iter39_reg;
        retval_0_i_i_reg_1113_pp0_iter41_reg <= retval_0_i_i_reg_1113_pp0_iter40_reg;
        retval_0_i_i_reg_1113_pp0_iter42_reg <= retval_0_i_i_reg_1113_pp0_iter41_reg;
        retval_0_i_i_reg_1113_pp0_iter4_reg <= retval_0_i_i_reg_1113;
        retval_0_i_i_reg_1113_pp0_iter5_reg <= retval_0_i_i_reg_1113_pp0_iter4_reg;
        retval_0_i_i_reg_1113_pp0_iter6_reg <= retval_0_i_i_reg_1113_pp0_iter5_reg;
        retval_0_i_i_reg_1113_pp0_iter7_reg <= retval_0_i_i_reg_1113_pp0_iter6_reg;
        retval_0_i_i_reg_1113_pp0_iter8_reg <= retval_0_i_i_reg_1113_pp0_iter7_reg;
        retval_0_i_i_reg_1113_pp0_iter9_reg <= retval_0_i_i_reg_1113_pp0_iter8_reg;
        tmp_s_reg_1118 <= grp_fu_289_p2;
        zext_ln283_reg_1031_pp0_iter100_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter99_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter101_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter100_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter102_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter101_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter103_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter102_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter104_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter103_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter105_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter104_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter106_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter105_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter107_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter106_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter108_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter107_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter109_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter108_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter10_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter9_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter110_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter109_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter111_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter110_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter112_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter111_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter113_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter112_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter114_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter113_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter115_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter114_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter116_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter115_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter117_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter116_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter118_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter117_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter119_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter118_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter11_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter10_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter120_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter119_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter12_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter11_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter13_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter12_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter14_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter13_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter15_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter14_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter16_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter15_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter17_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter16_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter18_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter17_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter19_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter18_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter20_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter19_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter21_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter20_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter22_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter21_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter23_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter22_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter24_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter23_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter25_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter24_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter26_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter25_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter27_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter26_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter28_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter27_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter29_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter28_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter2_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter1_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter30_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter29_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter31_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter30_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter32_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter31_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter33_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter32_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter34_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter33_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter35_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter34_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter36_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter35_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter37_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter36_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter38_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter37_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter39_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter38_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter3_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter2_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter40_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter39_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter41_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter40_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter42_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter41_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter43_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter42_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter44_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter43_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter45_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter44_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter46_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter45_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter47_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter46_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter48_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter47_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter49_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter48_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter4_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter3_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter50_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter49_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter51_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter50_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter52_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter51_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter53_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter52_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter54_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter53_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter55_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter54_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter56_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter55_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter57_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter56_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter58_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter57_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter59_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter58_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter5_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter4_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter60_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter59_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter61_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter60_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter62_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter61_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter63_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter62_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter64_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter63_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter65_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter64_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter66_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter65_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter67_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter66_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter68_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter67_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter69_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter68_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter6_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter5_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter70_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter69_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter71_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter70_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter72_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter71_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter73_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter72_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter74_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter73_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter75_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter74_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter76_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter75_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter77_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter76_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter78_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter77_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter79_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter78_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter7_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter6_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter80_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter79_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter81_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter80_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter82_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter81_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter83_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter82_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter84_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter83_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter85_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter84_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter86_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter85_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter87_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter86_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter88_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter87_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter89_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter88_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter8_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter7_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter90_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter89_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter91_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter90_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter92_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter91_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter93_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter92_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter94_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter93_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter95_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter94_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter96_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter95_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter97_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter96_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter98_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter97_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter99_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter98_reg[10 : 0];
        zext_ln283_reg_1031_pp0_iter9_reg[10 : 0] <= zext_ln283_reg_1031_pp0_iter8_reg[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln291_reg_1092 <= icmp_ln291_fu_437_p2;
        select_ln291_reg_1102 <= select_ln291_fu_457_p3;
        squared_norm_addr_reg_1036 <= zext_ln283_fu_314_p1;
        tmp_reg_1097 <= add_ln288_7_fu_398_p2[32'd31];
        zext_ln283_reg_1031[10 : 0] <= zext_ln283_fu_314_p1[10 : 0];
        zext_ln283_reg_1031_pp0_iter1_reg[10 : 0] <= zext_ln283_reg_1031[10 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln283_fu_302_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter120_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter121 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter120 == 1'b0) & (ap_enable_reg_pp0_iter119 == 1'b0) & (ap_enable_reg_pp0_iter118 == 1'b0) & (ap_enable_reg_pp0_iter117 == 1'b0) & (ap_enable_reg_pp0_iter116 == 1'b0) & (ap_enable_reg_pp0_iter115 
    == 1'b0) & (ap_enable_reg_pp0_iter114 == 1'b0) & (ap_enable_reg_pp0_iter113 == 1'b0) & (ap_enable_reg_pp0_iter112 == 1'b0) & (ap_enable_reg_pp0_iter111 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter110 == 1'b0) & (ap_enable_reg_pp0_iter109 == 1'b0) & (ap_enable_reg_pp0_iter108 == 1'b0) & (ap_enable_reg_pp0_iter107 == 1'b0) & (ap_enable_reg_pp0_iter106 == 1'b0) & (ap_enable_reg_pp0_iter105 == 1'b0) & (ap_enable_reg_pp0_iter104 == 1'b0) & (ap_enable_reg_pp0_iter103 == 1'b0) & (ap_enable_reg_pp0_iter102 == 1'b0) & (ap_enable_reg_pp0_iter101 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter100 == 1'b0) & (ap_enable_reg_pp0_iter99 == 1'b0) & (ap_enable_reg_pp0_iter98 == 1'b0) & (ap_enable_reg_pp0_iter97 == 1'b0) & (ap_enable_reg_pp0_iter96 == 1'b0) & (ap_enable_reg_pp0_iter95 == 1'b0) & (ap_enable_reg_pp0_iter94 == 1'b0) & (ap_enable_reg_pp0_iter93 == 1'b0) & (ap_enable_reg_pp0_iter92 == 1'b0) & (ap_enable_reg_pp0_iter91 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter90 
    == 1'b0) & (ap_enable_reg_pp0_iter89 == 1'b0) & (ap_enable_reg_pp0_iter88 == 1'b0) & (ap_enable_reg_pp0_iter87 == 1'b0) & (ap_enable_reg_pp0_iter86 == 1'b0) & (ap_enable_reg_pp0_iter85 == 1'b0) & (ap_enable_reg_pp0_iter84 == 1'b0) & (ap_enable_reg_pp0_iter83 == 1'b0) & (ap_enable_reg_pp0_iter82 == 1'b0) & (ap_enable_reg_pp0_iter81 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter80 == 1'b0) & (ap_enable_reg_pp0_iter79 == 1'b0) & (ap_enable_reg_pp0_iter78 == 1'b0) & (ap_enable_reg_pp0_iter77 == 1'b0) & (ap_enable_reg_pp0_iter76 == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b0) & (ap_enable_reg_pp0_iter74 == 1'b0) & (ap_enable_reg_pp0_iter73 == 1'b0) & (ap_enable_reg_pp0_iter72 == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b0) & (ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 
    == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 
    == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_grid_rows = 11'd0;
    end else begin
        ap_sig_allocacmp_grid_rows = grid_rows_1_fu_152;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter121 == 1'b1))) begin
        scale_ce0_local = 1'b1;
    end else begin
        scale_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter121 == 1'b1))) begin
        scale_we0_local = 1'b1;
    end else begin
        scale_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        squared_input_1_ce0_local = 1'b1;
    end else begin
        squared_input_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        squared_input_1_ce1_local = 1'b1;
    end else begin
        squared_input_1_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        squared_input_2_ce0_local = 1'b1;
    end else begin
        squared_input_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        squared_input_2_ce1_local = 1'b1;
    end else begin
        squared_input_2_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        squared_input_3_ce0_local = 1'b1;
    end else begin
        squared_input_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        squared_input_3_ce1_local = 1'b1;
    end else begin
        squared_input_3_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        squared_input_ce0_local = 1'b1;
    end else begin
        squared_input_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        squared_input_ce1_local = 1'b1;
    end else begin
        squared_input_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        squared_norm_ce0_local = 1'b1;
    end else begin
        squared_norm_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        squared_norm_ce1_local = 1'b1;
    end else begin
        squared_norm_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        squared_norm_we0_local = 1'b1;
    end else begin
        squared_norm_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_fu_738_p1 = pi_assign_fu_726_p5[31:0];

assign add_ln283_fu_308_p2 = (ap_sig_allocacmp_grid_rows + 11'd1);

assign add_ln288_1_fu_362_p2 = (squared_input_q0 + squared_input_3_q1);

assign add_ln288_2_fu_368_p2 = (add_ln288_1_fu_362_p2 + add_ln288_fu_356_p2);

assign add_ln288_3_fu_374_p2 = (squared_norm_q1 + squared_input_q1);

assign add_ln288_4_fu_380_p2 = (squared_input_1_q1 + squared_input_3_q0);

assign add_ln288_5_fu_386_p2 = (add_ln288_4_fu_380_p2 + squared_input_2_q1);

assign add_ln288_6_fu_392_p2 = (add_ln288_5_fu_386_p2 + add_ln288_3_fu_374_p2);

assign add_ln288_7_fu_398_p2 = (add_ln288_6_fu_392_p2 + add_ln288_2_fu_368_p2);

assign add_ln288_fu_356_p2 = (squared_input_1_q0 + squared_input_2_q0);

assign add_ln291_1_fu_512_p2 = ($signed(sub_ln291_1_fu_506_p2) + $signed(32'd4294967272));

assign add_ln291_2_fu_623_p2 = ($signed(sub_ln291_1_fu_506_p2) + $signed(32'd4294967271));

assign add_ln291_3_fu_671_p2 = (zext_ln291_3_fu_663_p1 + zext_ln291_4_fu_667_p1);

assign add_ln291_4_fu_713_p2 = (sub_ln291_6_fu_707_p2 + select_ln291_1_fu_699_p3);

assign add_ln291_5_fu_834_p2 = ($signed(trunc_ln291_6_fu_824_p1) + $signed(11'd2032));

assign add_ln291_fu_409_p2 = ($signed(sext_ln291_fu_405_p1) + $signed(33'd65536));

assign and_ln291_1_fu_940_p2 = (xor_ln291_fu_934_p2 & icmp_ln291_6_fu_858_p2);

assign and_ln291_2_fu_958_p2 = (xor_ln291_1_fu_952_p2 & icmp_ln291_5_fu_828_p2);

assign and_ln291_3_fu_558_p2 = (trunc_ln291_3_fu_554_p1 & select_ln291_reg_1102);

assign and_ln291_fu_597_p2 = (xor_ln291_2_fu_583_p2 & tmp_7_fu_589_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign ashr_ln291_fu_878_p2 = $signed(select_ln291_2_fu_804_p3) >>> zext_ln291_7_fu_874_p1;

assign bitcast_ln716_fu_752_p1 = grp_fu_286_p1;

assign bitcast_ln758_fu_742_p1 = LD_reg_1108;

assign cond49_i_i_in_fu_655_p3 = ((icmp_ln291_3_fu_617_p2[0:0] == 1'b1) ? lshr_ln291_fu_633_p2 : shl_ln291_fu_649_p2);

assign grp_fu_1009_p0 = {{grp_fu_431_p2}, {16'd0}};

assign grp_fu_431_p0 = $signed(shl_ln1_fu_419_p3);

assign icmp_ln283_fu_302_p2 = ((ap_sig_allocacmp_grid_rows == 11'd1152) ? 1'b1 : 1'b0);

assign icmp_ln291_1_fu_528_p2 = (($signed(tmp_5_fu_518_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln291_2_fu_563_p2 = ((and_ln291_3_fu_558_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln291_3_fu_617_p2 = (($signed(add_ln291_1_fu_512_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln291_4_fu_812_p2 = ((trunc_ln291_4_fu_756_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln291_5_fu_828_p2 = (($signed(sub_ln291_4_fu_818_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln291_6_fu_858_p2 = ((sub_ln291_4_fu_818_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln291_7_fu_868_p2 = ((select_ln291_3_fu_846_p3 < 11'd54) ? 1'b1 : 1'b0);

assign icmp_ln291_8_fu_914_p2 = ((tmp_12_fu_904_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln291_fu_437_p2 = ((add_ln288_7_fu_398_p2 == 32'd0) ? 1'b1 : 1'b0);

assign lshr_ln291_1_fu_677_p4 = {{add_ln291_3_fu_671_p2[33:1]}};

assign lshr_ln291_2_fu_548_p2 = 33'd8589934591 >> zext_ln291_8_fu_544_p1;

assign lshr_ln291_fu_633_p2 = zext_ln291_fu_465_p1 >> zext_ln291_1_fu_629_p1;

assign or_ln291_1_fu_946_p2 = (icmp_ln291_6_fu_858_p2 | icmp_ln291_4_fu_812_p2);

assign or_ln291_fu_603_p2 = (phi_ln291_fu_569_p2 | and_ln291_fu_597_p2);

assign or_ln2_fu_335_p3 = {{ap_sig_allocacmp_grid_rows}, {1'd1}};

assign or_ln_fu_609_p3 = {{1'd0}, {or_ln291_fu_603_p2}};

assign p_cast25_fu_327_p1 = tmp_4_fu_319_p3;

assign phi_ln291_fu_569_p2 = (icmp_ln291_2_fu_563_p2 & icmp_ln291_1_fu_528_p2);

assign pi_assign_fu_726_p5 = {{zext_ln291_6_fu_687_p1[63:32]}, {tmp_8_fu_719_p3}, {zext_ln291_6_fu_687_p1[22:0]}};

assign ref_tmp_i_i_4_fu_974_p10 = {{{icmp_ln291_4_fu_812_p2}, {and_ln291_1_fu_940_p2}}, {and_ln291_2_fu_958_p2}};

assign ref_tmp_i_i_4_fu_974_p6 = ((icmp_ln291_7_fu_868_p2[0:0] == 1'b1) ? trunc_ln291_8_fu_884_p1 : select_ln291_6_fu_888_p3);

assign ref_tmp_i_i_4_fu_974_p8 = ((icmp_ln291_8_fu_914_p2[0:0] == 1'b1) ? shl_ln291_1_fu_920_p2 : 32'd0);

assign ref_tmp_i_i_4_fu_974_p9 = 'bx;

assign retval_0_i_i_fu_745_p3 = ((icmp_ln291_reg_1092_pp0_iter2_reg[0:0] == 1'b1) ? 32'd0 : bitcast_ln758_fu_742_p1);

assign scale_address0 = zext_ln283_reg_1031_pp0_iter120_reg;

assign scale_ce0 = scale_ce0_local;

assign scale_d0 = trunc_ln291_9_fu_1015_p1;

assign scale_we0 = scale_we0_local;

assign select_ln291_1_fu_699_p3 = ((tmp_9_fu_691_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln291_2_fu_804_p3 = ((tmp_10_fu_760_p3[0:0] == 1'b1) ? sub_ln291_3_fu_798_p2 : zext_ln291_10_fu_794_p1);

assign select_ln291_3_fu_846_p3 = ((icmp_ln291_5_fu_828_p2[0:0] == 1'b1) ? add_ln291_5_fu_834_p2 : sub_ln291_5_fu_840_p2);

assign select_ln291_6_fu_888_p3 = ((tmp_10_fu_760_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln291_fu_457_p3 = ((tmp_fu_443_p3[0:0] == 1'b1) ? sub_ln291_fu_451_p2 : add_ln288_7_fu_398_p2);

assign sext_ln291_3_fu_486_p1 = $signed(tmp_2_fu_478_p3);

assign sext_ln291_fu_405_p1 = add_ln288_7_fu_398_p2;

assign shl_ln1_fu_419_p3 = {{add_ln288_7_fu_398_p2}, {16'd0}};

assign shl_ln291_1_fu_920_p2 = trunc_ln291_7_fu_864_p1 << zext_ln291_9_fu_854_p1;

assign shl_ln291_fu_649_p2 = zext_ln291_fu_465_p1 << zext_ln291_2_fu_645_p1;

assign squared_input_1_address0 = zext_ln288_fu_343_p1;

assign squared_input_1_address1 = p_cast25_fu_327_p1;

assign squared_input_1_ce0 = squared_input_1_ce0_local;

assign squared_input_1_ce1 = squared_input_1_ce1_local;

assign squared_input_2_address0 = zext_ln288_fu_343_p1;

assign squared_input_2_address1 = p_cast25_fu_327_p1;

assign squared_input_2_ce0 = squared_input_2_ce0_local;

assign squared_input_2_ce1 = squared_input_2_ce1_local;

assign squared_input_3_address0 = zext_ln288_fu_343_p1;

assign squared_input_3_address1 = p_cast25_fu_327_p1;

assign squared_input_3_ce0 = squared_input_3_ce0_local;

assign squared_input_3_ce1 = squared_input_3_ce1_local;

assign squared_input_address0 = zext_ln288_fu_343_p1;

assign squared_input_address1 = p_cast25_fu_327_p1;

assign squared_input_ce0 = squared_input_ce0_local;

assign squared_input_ce1 = squared_input_ce1_local;

assign squared_norm_address0 = squared_norm_addr_reg_1036;

assign squared_norm_address1 = zext_ln283_fu_314_p1;

assign squared_norm_ce0 = squared_norm_ce0_local;

assign squared_norm_ce1 = squared_norm_ce1_local;

assign squared_norm_d0 = add_ln288_7_fu_398_p2;

assign squared_norm_we0 = squared_norm_we0_local;

assign sub_ln291_1_fu_506_p2 = (32'd33 - trunc_ln291_fu_498_p1);

assign sub_ln291_2_fu_639_p2 = (32'd25 - sub_ln291_1_fu_506_p2);

assign sub_ln291_3_fu_798_p2 = (54'd0 - zext_ln291_10_fu_794_p1);

assign sub_ln291_4_fu_818_p2 = (12'd1075 - zext_ln291_5_fu_778_p1);

assign sub_ln291_5_fu_840_p2 = (11'd16 - trunc_ln291_6_fu_824_p1);

assign sub_ln291_6_fu_707_p2 = (8'd17 - trunc_ln291_1_fu_502_p1);

assign sub_ln291_7_fu_538_p2 = ($signed(6'd58) - $signed(trunc_ln291_2_fu_534_p1));

assign sub_ln291_fu_451_p2 = ($signed(32'd0) - $signed(add_ln288_7_fu_398_p2));

assign tmp_10_fu_760_p3 = bitcast_ln716_fu_752_p1[32'd63];

assign tmp_11_fu_768_p4 = {{bitcast_ln716_fu_752_p1[62:52]}};

assign tmp_12_fu_904_p4 = {{select_ln291_3_fu_846_p3[10:5]}};

integer ap_tvar_int_0;

always @ (zext_ln291_fu_465_p1) begin
    for (ap_tvar_int_0 = 33 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 32 - 0) begin
            tmp_1_fu_468_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_1_fu_468_p4[ap_tvar_int_0] = zext_ln291_fu_465_p1[32 - ap_tvar_int_0];
        end
    end
end

assign tmp_2_fu_478_p3 = {{1'd1}, {tmp_1_fu_468_p4}};


always @ (sext_ln291_3_fu_486_p1) begin
    if (sext_ln291_3_fu_486_p1[0] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd0;
    end else if (sext_ln291_3_fu_486_p1[1] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd1;
    end else if (sext_ln291_3_fu_486_p1[2] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd2;
    end else if (sext_ln291_3_fu_486_p1[3] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd3;
    end else if (sext_ln291_3_fu_486_p1[4] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd4;
    end else if (sext_ln291_3_fu_486_p1[5] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd5;
    end else if (sext_ln291_3_fu_486_p1[6] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd6;
    end else if (sext_ln291_3_fu_486_p1[7] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd7;
    end else if (sext_ln291_3_fu_486_p1[8] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd8;
    end else if (sext_ln291_3_fu_486_p1[9] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd9;
    end else if (sext_ln291_3_fu_486_p1[10] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd10;
    end else if (sext_ln291_3_fu_486_p1[11] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd11;
    end else if (sext_ln291_3_fu_486_p1[12] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd12;
    end else if (sext_ln291_3_fu_486_p1[13] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd13;
    end else if (sext_ln291_3_fu_486_p1[14] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd14;
    end else if (sext_ln291_3_fu_486_p1[15] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd15;
    end else if (sext_ln291_3_fu_486_p1[16] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd16;
    end else if (sext_ln291_3_fu_486_p1[17] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd17;
    end else if (sext_ln291_3_fu_486_p1[18] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd18;
    end else if (sext_ln291_3_fu_486_p1[19] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd19;
    end else if (sext_ln291_3_fu_486_p1[20] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd20;
    end else if (sext_ln291_3_fu_486_p1[21] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd21;
    end else if (sext_ln291_3_fu_486_p1[22] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd22;
    end else if (sext_ln291_3_fu_486_p1[23] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd23;
    end else if (sext_ln291_3_fu_486_p1[24] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd24;
    end else if (sext_ln291_3_fu_486_p1[25] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd25;
    end else if (sext_ln291_3_fu_486_p1[26] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd26;
    end else if (sext_ln291_3_fu_486_p1[27] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd27;
    end else if (sext_ln291_3_fu_486_p1[28] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd28;
    end else if (sext_ln291_3_fu_486_p1[29] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd29;
    end else if (sext_ln291_3_fu_486_p1[30] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd30;
    end else if (sext_ln291_3_fu_486_p1[31] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd31;
    end else if (sext_ln291_3_fu_486_p1[32] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd32;
    end else if (sext_ln291_3_fu_486_p1[33] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd33;
    end else if (sext_ln291_3_fu_486_p1[34] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd34;
    end else if (sext_ln291_3_fu_486_p1[35] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd35;
    end else if (sext_ln291_3_fu_486_p1[36] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd36;
    end else if (sext_ln291_3_fu_486_p1[37] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd37;
    end else if (sext_ln291_3_fu_486_p1[38] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd38;
    end else if (sext_ln291_3_fu_486_p1[39] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd39;
    end else if (sext_ln291_3_fu_486_p1[40] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd40;
    end else if (sext_ln291_3_fu_486_p1[41] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd41;
    end else if (sext_ln291_3_fu_486_p1[42] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd42;
    end else if (sext_ln291_3_fu_486_p1[43] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd43;
    end else if (sext_ln291_3_fu_486_p1[44] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd44;
    end else if (sext_ln291_3_fu_486_p1[45] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd45;
    end else if (sext_ln291_3_fu_486_p1[46] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd46;
    end else if (sext_ln291_3_fu_486_p1[47] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd47;
    end else if (sext_ln291_3_fu_486_p1[48] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd48;
    end else if (sext_ln291_3_fu_486_p1[49] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd49;
    end else if (sext_ln291_3_fu_486_p1[50] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd50;
    end else if (sext_ln291_3_fu_486_p1[51] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd51;
    end else if (sext_ln291_3_fu_486_p1[52] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd52;
    end else if (sext_ln291_3_fu_486_p1[53] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd53;
    end else if (sext_ln291_3_fu_486_p1[54] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd54;
    end else if (sext_ln291_3_fu_486_p1[55] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd55;
    end else if (sext_ln291_3_fu_486_p1[56] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd56;
    end else if (sext_ln291_3_fu_486_p1[57] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd57;
    end else if (sext_ln291_3_fu_486_p1[58] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd58;
    end else if (sext_ln291_3_fu_486_p1[59] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd59;
    end else if (sext_ln291_3_fu_486_p1[60] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd60;
    end else if (sext_ln291_3_fu_486_p1[61] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd61;
    end else if (sext_ln291_3_fu_486_p1[62] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd62;
    end else if (sext_ln291_3_fu_486_p1[63] == 1'b1) begin
        tmp_3_fu_490_p3 = 64'd63;
    end else begin
        tmp_3_fu_490_p3 = 64'd64;
    end
end

assign tmp_4_fu_319_p3 = {{ap_sig_allocacmp_grid_rows}, {1'd0}};

assign tmp_5_fu_518_p4 = {{add_ln291_1_fu_512_p2[31:1]}};

assign tmp_6_fu_575_p3 = add_ln291_1_fu_512_p2[32'd31];

assign tmp_7_fu_589_p3 = zext_ln291_fu_465_p1[add_ln291_1_fu_512_p2];

assign tmp_8_fu_719_p3 = {{tmp_reg_1097}, {add_ln291_4_fu_713_p2}};

assign tmp_9_fu_691_p3 = add_ln291_3_fu_671_p2[32'd25];

assign tmp_fu_443_p3 = add_ln288_7_fu_398_p2[32'd31];

assign trunc_ln291_1_fu_502_p1 = tmp_3_fu_490_p3[7:0];

assign trunc_ln291_2_fu_534_p1 = sub_ln291_1_fu_506_p2[5:0];

assign trunc_ln291_3_fu_554_p1 = lshr_ln291_2_fu_548_p2[31:0];

assign trunc_ln291_4_fu_756_p1 = bitcast_ln716_fu_752_p1[62:0];

assign trunc_ln291_5_fu_782_p1 = bitcast_ln716_fu_752_p1[51:0];

assign trunc_ln291_6_fu_824_p1 = sub_ln291_4_fu_818_p2[10:0];

assign trunc_ln291_7_fu_864_p1 = select_ln291_2_fu_804_p3[31:0];

assign trunc_ln291_8_fu_884_p1 = ashr_ln291_fu_878_p2[31:0];

assign trunc_ln291_9_fu_1015_p1 = grp_fu_1009_p2[31:0];

assign trunc_ln291_fu_498_p1 = tmp_3_fu_490_p3[31:0];

assign xor_ln291_1_fu_952_p2 = (or_ln291_1_fu_946_p2 ^ 1'd1);

assign xor_ln291_2_fu_583_p2 = (tmp_6_fu_575_p3 ^ 1'd1);

assign xor_ln291_fu_934_p2 = (icmp_ln291_4_fu_812_p2 ^ 1'd1);

assign zext_ln283_fu_314_p1 = ap_sig_allocacmp_grid_rows;

assign zext_ln288_fu_343_p1 = or_ln2_fu_335_p3;

assign zext_ln291_10_fu_794_p1 = zext_ln291_8_cast_fu_786_p3;

assign zext_ln291_1_fu_629_p1 = add_ln291_2_fu_623_p2;

assign zext_ln291_2_fu_645_p1 = sub_ln291_2_fu_639_p2;

assign zext_ln291_3_fu_663_p1 = cond49_i_i_in_fu_655_p3;

assign zext_ln291_4_fu_667_p1 = or_ln_fu_609_p3;

assign zext_ln291_5_fu_778_p1 = tmp_11_fu_768_p4;

assign zext_ln291_6_fu_687_p1 = lshr_ln291_1_fu_677_p4;

assign zext_ln291_7_fu_874_p1 = select_ln291_3_fu_846_p3;

assign zext_ln291_8_cast_fu_786_p3 = {{1'd1}, {trunc_ln291_5_fu_782_p1}};

assign zext_ln291_8_fu_544_p1 = sub_ln291_7_fu_538_p2;

assign zext_ln291_9_fu_854_p1 = select_ln291_3_fu_846_p3;

assign zext_ln291_fu_465_p1 = select_ln291_reg_1102;

always @ (posedge ap_clk) begin
    zext_ln283_reg_1031[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter1_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter2_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter3_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter4_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter5_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter6_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter7_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter8_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter9_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter10_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter11_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter12_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter13_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter14_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter15_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter16_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter17_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter18_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter19_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter20_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter21_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter22_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter23_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter24_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter25_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter26_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter27_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter28_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter29_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter30_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter31_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter32_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter33_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter34_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter35_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter36_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter37_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter38_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter39_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter40_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter41_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter42_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter43_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter44_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter45_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter46_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter47_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter48_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter49_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter50_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter51_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter52_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter53_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter54_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter55_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter56_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter57_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter58_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter59_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter60_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter61_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter62_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter63_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter64_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter65_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter66_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter67_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter68_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter69_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter70_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter71_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter72_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter73_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter74_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter75_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter76_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter77_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter78_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter79_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter80_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter81_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter82_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter83_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter84_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter85_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter86_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter87_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter88_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter89_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter90_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter91_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter92_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter93_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter94_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter95_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter96_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter97_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter98_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter99_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter100_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter101_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter102_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter103_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter104_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter105_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter106_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter107_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter108_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter109_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter110_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter111_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter112_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter113_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter114_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter115_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter116_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter117_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter118_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter119_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1031_pp0_iter120_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //process_features_squash_Pipeline_VITIS_LOOP_283_3
