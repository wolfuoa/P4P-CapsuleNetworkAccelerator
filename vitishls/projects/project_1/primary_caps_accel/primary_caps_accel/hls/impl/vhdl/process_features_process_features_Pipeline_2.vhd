-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity process_features_process_features_Pipeline_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_buffer_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_ce0 : OUT STD_LOGIC;
    input_buffer_we0 : OUT STD_LOGIC;
    input_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_4_ce0 : OUT STD_LOGIC;
    input_buffer_4_we0 : OUT STD_LOGIC;
    input_buffer_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_5_ce0 : OUT STD_LOGIC;
    input_buffer_5_we0 : OUT STD_LOGIC;
    input_buffer_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_6_ce0 : OUT STD_LOGIC;
    input_buffer_6_we0 : OUT STD_LOGIC;
    input_buffer_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_7_ce0 : OUT STD_LOGIC;
    input_buffer_7_we0 : OUT STD_LOGIC;
    input_buffer_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_8_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_8_ce0 : OUT STD_LOGIC;
    input_buffer_8_we0 : OUT STD_LOGIC;
    input_buffer_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_9_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_9_ce0 : OUT STD_LOGIC;
    input_buffer_9_we0 : OUT STD_LOGIC;
    input_buffer_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_10_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_10_ce0 : OUT STD_LOGIC;
    input_buffer_10_we0 : OUT STD_LOGIC;
    input_buffer_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_11_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_11_ce0 : OUT STD_LOGIC;
    input_buffer_11_we0 : OUT STD_LOGIC;
    input_buffer_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_12_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_12_ce0 : OUT STD_LOGIC;
    input_buffer_12_we0 : OUT STD_LOGIC;
    input_buffer_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_13_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_13_ce0 : OUT STD_LOGIC;
    input_buffer_13_we0 : OUT STD_LOGIC;
    input_buffer_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_14_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_14_ce0 : OUT STD_LOGIC;
    input_buffer_14_we0 : OUT STD_LOGIC;
    input_buffer_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_15_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_15_ce0 : OUT STD_LOGIC;
    input_buffer_15_we0 : OUT STD_LOGIC;
    input_buffer_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_16_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_16_ce0 : OUT STD_LOGIC;
    input_buffer_16_we0 : OUT STD_LOGIC;
    input_buffer_16_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_17_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_17_ce0 : OUT STD_LOGIC;
    input_buffer_17_we0 : OUT STD_LOGIC;
    input_buffer_17_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_18_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_18_ce0 : OUT STD_LOGIC;
    input_buffer_18_we0 : OUT STD_LOGIC;
    input_buffer_18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_19_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_19_ce0 : OUT STD_LOGIC;
    input_buffer_19_we0 : OUT STD_LOGIC;
    input_buffer_19_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_20_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_20_ce0 : OUT STD_LOGIC;
    input_buffer_20_we0 : OUT STD_LOGIC;
    input_buffer_20_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_21_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_21_ce0 : OUT STD_LOGIC;
    input_buffer_21_we0 : OUT STD_LOGIC;
    input_buffer_21_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_22_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_22_ce0 : OUT STD_LOGIC;
    input_buffer_22_we0 : OUT STD_LOGIC;
    input_buffer_22_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_23_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_23_ce0 : OUT STD_LOGIC;
    input_buffer_23_we0 : OUT STD_LOGIC;
    input_buffer_23_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_24_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_24_ce0 : OUT STD_LOGIC;
    input_buffer_24_we0 : OUT STD_LOGIC;
    input_buffer_24_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_25_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_25_ce0 : OUT STD_LOGIC;
    input_buffer_25_we0 : OUT STD_LOGIC;
    input_buffer_25_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_26_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_26_ce0 : OUT STD_LOGIC;
    input_buffer_26_we0 : OUT STD_LOGIC;
    input_buffer_26_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_27_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_27_ce0 : OUT STD_LOGIC;
    input_buffer_27_we0 : OUT STD_LOGIC;
    input_buffer_27_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_28_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_28_ce0 : OUT STD_LOGIC;
    input_buffer_28_we0 : OUT STD_LOGIC;
    input_buffer_28_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_29_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_29_ce0 : OUT STD_LOGIC;
    input_buffer_29_we0 : OUT STD_LOGIC;
    input_buffer_29_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_30_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_30_ce0 : OUT STD_LOGIC;
    input_buffer_30_we0 : OUT STD_LOGIC;
    input_buffer_30_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_31_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_31_ce0 : OUT STD_LOGIC;
    input_buffer_31_we0 : OUT STD_LOGIC;
    input_buffer_31_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_32_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_32_ce0 : OUT STD_LOGIC;
    input_buffer_32_we0 : OUT STD_LOGIC;
    input_buffer_32_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_33_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_33_ce0 : OUT STD_LOGIC;
    input_buffer_33_we0 : OUT STD_LOGIC;
    input_buffer_33_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_buffer_34_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_34_ce0 : OUT STD_LOGIC;
    input_buffer_34_we0 : OUT STD_LOGIC;
    input_buffer_34_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    sext_ln85 : IN STD_LOGIC_VECTOR (57 downto 0) );
end;


architecture behav of process_features_process_features_Pipeline_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv480_lc_1 : STD_LOGIC_VECTOR (479 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv17_19000 : STD_LOGIC_VECTOR (16 downto 0) := "11001000000000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal exitcond23_i15_reg_817 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_79_reg_830 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op58_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal exitcond23_i15_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem0_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond23_i15_reg_817_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_78_fu_673_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_78_reg_821 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_reg_825 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_reg_825_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_79_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_79_reg_830_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_addr_read_reg_834 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_mux_empty_75_phi_fu_634_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_75_reg_631 : STD_LOGIC_VECTOR (511 downto 0);
    signal shiftreg46_cast_fu_707_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast11_fu_712_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shiftreg46_fu_196 : STD_LOGIC_VECTOR (479 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal ap_loop_init : STD_LOGIC;
    signal loop_index19_i_fu_200 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    signal empty_fu_663_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_sig_allocacmp_loop_index19_i_load : STD_LOGIC_VECTOR (16 downto 0);
    signal input_buffer_33_we0_local : STD_LOGIC;
    signal ap_predicate_pred936_state3 : BOOLEAN;
    signal empty_76_fu_747_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_33_ce0_local : STD_LOGIC;
    signal input_buffer_32_we0_local : STD_LOGIC;
    signal ap_predicate_pred946_state3 : BOOLEAN;
    signal input_buffer_32_ce0_local : STD_LOGIC;
    signal input_buffer_31_we0_local : STD_LOGIC;
    signal ap_predicate_pred955_state3 : BOOLEAN;
    signal input_buffer_31_ce0_local : STD_LOGIC;
    signal input_buffer_30_we0_local : STD_LOGIC;
    signal ap_predicate_pred964_state3 : BOOLEAN;
    signal input_buffer_30_ce0_local : STD_LOGIC;
    signal input_buffer_29_we0_local : STD_LOGIC;
    signal ap_predicate_pred973_state3 : BOOLEAN;
    signal input_buffer_29_ce0_local : STD_LOGIC;
    signal input_buffer_28_we0_local : STD_LOGIC;
    signal ap_predicate_pred982_state3 : BOOLEAN;
    signal input_buffer_28_ce0_local : STD_LOGIC;
    signal input_buffer_27_we0_local : STD_LOGIC;
    signal ap_predicate_pred991_state3 : BOOLEAN;
    signal input_buffer_27_ce0_local : STD_LOGIC;
    signal input_buffer_26_we0_local : STD_LOGIC;
    signal ap_predicate_pred1000_state3 : BOOLEAN;
    signal input_buffer_26_ce0_local : STD_LOGIC;
    signal input_buffer_25_we0_local : STD_LOGIC;
    signal ap_predicate_pred1009_state3 : BOOLEAN;
    signal input_buffer_25_ce0_local : STD_LOGIC;
    signal input_buffer_24_we0_local : STD_LOGIC;
    signal ap_predicate_pred1018_state3 : BOOLEAN;
    signal input_buffer_24_ce0_local : STD_LOGIC;
    signal input_buffer_23_we0_local : STD_LOGIC;
    signal ap_predicate_pred1027_state3 : BOOLEAN;
    signal input_buffer_23_ce0_local : STD_LOGIC;
    signal input_buffer_22_we0_local : STD_LOGIC;
    signal ap_predicate_pred1036_state3 : BOOLEAN;
    signal input_buffer_22_ce0_local : STD_LOGIC;
    signal input_buffer_21_we0_local : STD_LOGIC;
    signal ap_predicate_pred1045_state3 : BOOLEAN;
    signal input_buffer_21_ce0_local : STD_LOGIC;
    signal input_buffer_20_we0_local : STD_LOGIC;
    signal ap_predicate_pred1054_state3 : BOOLEAN;
    signal input_buffer_20_ce0_local : STD_LOGIC;
    signal input_buffer_19_we0_local : STD_LOGIC;
    signal ap_predicate_pred1063_state3 : BOOLEAN;
    signal input_buffer_19_ce0_local : STD_LOGIC;
    signal input_buffer_18_we0_local : STD_LOGIC;
    signal ap_predicate_pred1072_state3 : BOOLEAN;
    signal input_buffer_18_ce0_local : STD_LOGIC;
    signal input_buffer_17_we0_local : STD_LOGIC;
    signal ap_predicate_pred1081_state3 : BOOLEAN;
    signal input_buffer_17_ce0_local : STD_LOGIC;
    signal input_buffer_16_we0_local : STD_LOGIC;
    signal ap_predicate_pred1090_state3 : BOOLEAN;
    signal input_buffer_16_ce0_local : STD_LOGIC;
    signal input_buffer_15_we0_local : STD_LOGIC;
    signal ap_predicate_pred1099_state3 : BOOLEAN;
    signal input_buffer_15_ce0_local : STD_LOGIC;
    signal input_buffer_14_we0_local : STD_LOGIC;
    signal ap_predicate_pred1108_state3 : BOOLEAN;
    signal input_buffer_14_ce0_local : STD_LOGIC;
    signal input_buffer_13_we0_local : STD_LOGIC;
    signal ap_predicate_pred1117_state3 : BOOLEAN;
    signal input_buffer_13_ce0_local : STD_LOGIC;
    signal input_buffer_12_we0_local : STD_LOGIC;
    signal ap_predicate_pred1126_state3 : BOOLEAN;
    signal input_buffer_12_ce0_local : STD_LOGIC;
    signal input_buffer_11_we0_local : STD_LOGIC;
    signal ap_predicate_pred1135_state3 : BOOLEAN;
    signal input_buffer_11_ce0_local : STD_LOGIC;
    signal input_buffer_10_we0_local : STD_LOGIC;
    signal ap_predicate_pred1144_state3 : BOOLEAN;
    signal input_buffer_10_ce0_local : STD_LOGIC;
    signal input_buffer_9_we0_local : STD_LOGIC;
    signal ap_predicate_pred1153_state3 : BOOLEAN;
    signal input_buffer_9_ce0_local : STD_LOGIC;
    signal input_buffer_8_we0_local : STD_LOGIC;
    signal ap_predicate_pred1162_state3 : BOOLEAN;
    signal input_buffer_8_ce0_local : STD_LOGIC;
    signal input_buffer_7_we0_local : STD_LOGIC;
    signal ap_predicate_pred1171_state3 : BOOLEAN;
    signal input_buffer_7_ce0_local : STD_LOGIC;
    signal input_buffer_6_we0_local : STD_LOGIC;
    signal ap_predicate_pred1180_state3 : BOOLEAN;
    signal input_buffer_6_ce0_local : STD_LOGIC;
    signal input_buffer_5_we0_local : STD_LOGIC;
    signal ap_predicate_pred1189_state3 : BOOLEAN;
    signal input_buffer_5_ce0_local : STD_LOGIC;
    signal input_buffer_4_we0_local : STD_LOGIC;
    signal ap_predicate_pred1198_state3 : BOOLEAN;
    signal input_buffer_4_ce0_local : STD_LOGIC;
    signal input_buffer_we0_local : STD_LOGIC;
    signal ap_predicate_pred1207_state3 : BOOLEAN;
    signal input_buffer_ce0_local : STD_LOGIC;
    signal input_buffer_34_we0_local : STD_LOGIC;
    signal ap_predicate_pred1216_state3 : BOOLEAN;
    signal input_buffer_34_ce0_local : STD_LOGIC;
    signal empty_77_fu_669_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component process_features_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component process_features_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    loop_index19_i_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond23_i15_fu_657_p2 = ap_const_lv1_0))) then 
                    loop_index19_i_fu_200 <= empty_fu_663_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    loop_index19_i_fu_200 <= ap_const_lv17_0;
                end if;
            end if; 
        end if;
    end process;

    shiftreg46_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    shiftreg46_fu_196 <= ap_const_lv480_lc_1;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    shiftreg46_fu_196 <= ap_phi_mux_empty_75_phi_fu_634_p4(511 downto 32);
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                    ap_predicate_pred1000_state3 <= (empty_78_reg_821 = ap_const_lv5_17);
                    ap_predicate_pred1009_state3 <= (empty_78_reg_821 = ap_const_lv5_16);
                    ap_predicate_pred1018_state3 <= (empty_78_reg_821 = ap_const_lv5_15);
                    ap_predicate_pred1027_state3 <= (empty_78_reg_821 = ap_const_lv5_14);
                    ap_predicate_pred1036_state3 <= (empty_78_reg_821 = ap_const_lv5_13);
                    ap_predicate_pred1045_state3 <= (empty_78_reg_821 = ap_const_lv5_12);
                    ap_predicate_pred1054_state3 <= (empty_78_reg_821 = ap_const_lv5_11);
                    ap_predicate_pred1063_state3 <= (empty_78_reg_821 = ap_const_lv5_10);
                    ap_predicate_pred1072_state3 <= (empty_78_reg_821 = ap_const_lv5_F);
                    ap_predicate_pred1081_state3 <= (empty_78_reg_821 = ap_const_lv5_E);
                    ap_predicate_pred1090_state3 <= (empty_78_reg_821 = ap_const_lv5_D);
                    ap_predicate_pred1099_state3 <= (empty_78_reg_821 = ap_const_lv5_C);
                    ap_predicate_pred1108_state3 <= (empty_78_reg_821 = ap_const_lv5_B);
                    ap_predicate_pred1117_state3 <= (empty_78_reg_821 = ap_const_lv5_A);
                    ap_predicate_pred1126_state3 <= (empty_78_reg_821 = ap_const_lv5_9);
                    ap_predicate_pred1135_state3 <= (empty_78_reg_821 = ap_const_lv5_8);
                    ap_predicate_pred1144_state3 <= (empty_78_reg_821 = ap_const_lv5_7);
                    ap_predicate_pred1153_state3 <= (empty_78_reg_821 = ap_const_lv5_6);
                    ap_predicate_pred1162_state3 <= (empty_78_reg_821 = ap_const_lv5_5);
                    ap_predicate_pred1171_state3 <= (empty_78_reg_821 = ap_const_lv5_4);
                    ap_predicate_pred1180_state3 <= (empty_78_reg_821 = ap_const_lv5_3);
                    ap_predicate_pred1189_state3 <= (empty_78_reg_821 = ap_const_lv5_2);
                    ap_predicate_pred1198_state3 <= (empty_78_reg_821 = ap_const_lv5_1);
                    ap_predicate_pred1207_state3 <= (empty_78_reg_821 = ap_const_lv5_0);
                    ap_predicate_pred1216_state3 <= (empty_78_reg_821 = ap_const_lv5_1F);
                    ap_predicate_pred936_state3 <= (empty_78_reg_821 = ap_const_lv5_1E);
                    ap_predicate_pred946_state3 <= (empty_78_reg_821 = ap_const_lv5_1D);
                    ap_predicate_pred955_state3 <= (empty_78_reg_821 = ap_const_lv5_1C);
                    ap_predicate_pred964_state3 <= (empty_78_reg_821 = ap_const_lv5_1B);
                    ap_predicate_pred973_state3 <= (empty_78_reg_821 = ap_const_lv5_1A);
                    ap_predicate_pred982_state3 <= (empty_78_reg_821 = ap_const_lv5_19);
                    ap_predicate_pred991_state3 <= (empty_78_reg_821 = ap_const_lv5_18);
                empty_78_reg_821 <= empty_78_fu_673_p1;
                empty_79_reg_830 <= empty_79_fu_687_p2;
                empty_79_reg_830_pp0_iter1_reg <= empty_79_reg_830;
                exitcond23_i15_reg_817 <= exitcond23_i15_fu_657_p2;
                exitcond23_i15_reg_817_pp0_iter1_reg <= exitcond23_i15_reg_817;
                gmem0_addr_read_reg_834 <= m_axi_gmem0_RDATA;
                tmp_s_reg_825 <= ap_sig_allocacmp_loop_index19_i_load(16 downto 5);
                tmp_s_reg_825_pp0_iter1_reg <= tmp_s_reg_825;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state2_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state2_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(m_axi_gmem0_RVALID, ap_predicate_op58_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op58_read_state2 = ap_const_boolean_1) and (m_axi_gmem0_RVALID = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, exitcond23_i15_fu_657_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond23_i15_fu_657_p2 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_empty_75_phi_fu_634_p4_assign_proc : process(exitcond23_i15_reg_817_pp0_iter1_reg, empty_79_reg_830_pp0_iter1_reg, gmem0_addr_read_reg_834, ap_phi_reg_pp0_iter2_empty_75_reg_631, shiftreg46_cast_fu_707_p1)
    begin
        if ((exitcond23_i15_reg_817_pp0_iter1_reg = ap_const_lv1_0)) then
            if ((empty_79_reg_830_pp0_iter1_reg = ap_const_lv1_0)) then 
                ap_phi_mux_empty_75_phi_fu_634_p4 <= shiftreg46_cast_fu_707_p1;
            elsif ((empty_79_reg_830_pp0_iter1_reg = ap_const_lv1_1)) then 
                ap_phi_mux_empty_75_phi_fu_634_p4 <= gmem0_addr_read_reg_834;
            else 
                ap_phi_mux_empty_75_phi_fu_634_p4 <= ap_phi_reg_pp0_iter2_empty_75_reg_631;
            end if;
        else 
            ap_phi_mux_empty_75_phi_fu_634_p4 <= ap_phi_reg_pp0_iter2_empty_75_reg_631;
        end if; 
    end process;

    ap_phi_reg_pp0_iter2_empty_75_reg_631 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op58_read_state2_assign_proc : process(exitcond23_i15_reg_817, empty_79_reg_830)
    begin
                ap_predicate_op58_read_state2 <= ((empty_79_reg_830 = ap_const_lv1_1) and (exitcond23_i15_reg_817 = ap_const_lv1_0));
    end process;

    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_loop_index19_i_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, loop_index19_i_fu_200)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_loop_index19_i_load <= ap_const_lv17_0;
        else 
            ap_sig_allocacmp_loop_index19_i_load <= loop_index19_i_fu_200;
        end if; 
    end process;

    empty_76_fu_747_p1 <= ap_phi_mux_empty_75_phi_fu_634_p4(32 - 1 downto 0);
    empty_77_fu_669_p1 <= ap_sig_allocacmp_loop_index19_i_load(4 - 1 downto 0);
    empty_78_fu_673_p1 <= ap_sig_allocacmp_loop_index19_i_load(5 - 1 downto 0);
    empty_79_fu_687_p2 <= "1" when (empty_77_fu_669_p1 = ap_const_lv4_0) else "0";
    empty_fu_663_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_loop_index19_i_load) + unsigned(ap_const_lv17_1));
    exitcond23_i15_fu_657_p2 <= "1" when (ap_sig_allocacmp_loop_index19_i_load = ap_const_lv17_19000) else "0";

    gmem0_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, m_axi_gmem0_RVALID, ap_predicate_op58_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op58_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gmem0_blk_n_R <= m_axi_gmem0_RVALID;
        else 
            gmem0_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    input_buffer_10_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_10_ce0 <= input_buffer_10_ce0_local;

    input_buffer_10_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_10_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_10_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_10_d0 <= empty_76_fu_747_p1;
    input_buffer_10_we0 <= input_buffer_10_we0_local;

    input_buffer_10_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1144_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1144_state3 = ap_const_boolean_1))) then 
            input_buffer_10_we0_local <= ap_const_logic_1;
        else 
            input_buffer_10_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_11_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_11_ce0 <= input_buffer_11_ce0_local;

    input_buffer_11_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_11_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_11_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_11_d0 <= empty_76_fu_747_p1;
    input_buffer_11_we0 <= input_buffer_11_we0_local;

    input_buffer_11_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1135_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1135_state3 = ap_const_boolean_1))) then 
            input_buffer_11_we0_local <= ap_const_logic_1;
        else 
            input_buffer_11_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_12_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_12_ce0 <= input_buffer_12_ce0_local;

    input_buffer_12_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_12_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_12_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_12_d0 <= empty_76_fu_747_p1;
    input_buffer_12_we0 <= input_buffer_12_we0_local;

    input_buffer_12_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1126_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1126_state3 = ap_const_boolean_1))) then 
            input_buffer_12_we0_local <= ap_const_logic_1;
        else 
            input_buffer_12_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_13_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_13_ce0 <= input_buffer_13_ce0_local;

    input_buffer_13_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_13_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_13_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_13_d0 <= empty_76_fu_747_p1;
    input_buffer_13_we0 <= input_buffer_13_we0_local;

    input_buffer_13_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1117_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1117_state3 = ap_const_boolean_1))) then 
            input_buffer_13_we0_local <= ap_const_logic_1;
        else 
            input_buffer_13_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_14_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_14_ce0 <= input_buffer_14_ce0_local;

    input_buffer_14_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_14_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_14_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_14_d0 <= empty_76_fu_747_p1;
    input_buffer_14_we0 <= input_buffer_14_we0_local;

    input_buffer_14_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1108_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1108_state3 = ap_const_boolean_1))) then 
            input_buffer_14_we0_local <= ap_const_logic_1;
        else 
            input_buffer_14_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_15_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_15_ce0 <= input_buffer_15_ce0_local;

    input_buffer_15_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_15_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_15_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_15_d0 <= empty_76_fu_747_p1;
    input_buffer_15_we0 <= input_buffer_15_we0_local;

    input_buffer_15_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1099_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1099_state3 = ap_const_boolean_1))) then 
            input_buffer_15_we0_local <= ap_const_logic_1;
        else 
            input_buffer_15_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_16_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_16_ce0 <= input_buffer_16_ce0_local;

    input_buffer_16_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_16_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_16_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_16_d0 <= empty_76_fu_747_p1;
    input_buffer_16_we0 <= input_buffer_16_we0_local;

    input_buffer_16_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1090_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1090_state3 = ap_const_boolean_1))) then 
            input_buffer_16_we0_local <= ap_const_logic_1;
        else 
            input_buffer_16_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_17_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_17_ce0 <= input_buffer_17_ce0_local;

    input_buffer_17_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_17_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_17_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_17_d0 <= empty_76_fu_747_p1;
    input_buffer_17_we0 <= input_buffer_17_we0_local;

    input_buffer_17_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1081_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1081_state3 = ap_const_boolean_1))) then 
            input_buffer_17_we0_local <= ap_const_logic_1;
        else 
            input_buffer_17_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_18_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_18_ce0 <= input_buffer_18_ce0_local;

    input_buffer_18_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_18_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_18_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_18_d0 <= empty_76_fu_747_p1;
    input_buffer_18_we0 <= input_buffer_18_we0_local;

    input_buffer_18_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1072_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1072_state3 = ap_const_boolean_1))) then 
            input_buffer_18_we0_local <= ap_const_logic_1;
        else 
            input_buffer_18_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_19_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_19_ce0 <= input_buffer_19_ce0_local;

    input_buffer_19_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_19_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_19_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_19_d0 <= empty_76_fu_747_p1;
    input_buffer_19_we0 <= input_buffer_19_we0_local;

    input_buffer_19_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1063_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1063_state3 = ap_const_boolean_1))) then 
            input_buffer_19_we0_local <= ap_const_logic_1;
        else 
            input_buffer_19_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_20_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_20_ce0 <= input_buffer_20_ce0_local;

    input_buffer_20_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_20_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_20_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_20_d0 <= empty_76_fu_747_p1;
    input_buffer_20_we0 <= input_buffer_20_we0_local;

    input_buffer_20_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1054_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1054_state3 = ap_const_boolean_1))) then 
            input_buffer_20_we0_local <= ap_const_logic_1;
        else 
            input_buffer_20_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_21_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_21_ce0 <= input_buffer_21_ce0_local;

    input_buffer_21_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_21_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_21_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_21_d0 <= empty_76_fu_747_p1;
    input_buffer_21_we0 <= input_buffer_21_we0_local;

    input_buffer_21_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1045_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1045_state3 = ap_const_boolean_1))) then 
            input_buffer_21_we0_local <= ap_const_logic_1;
        else 
            input_buffer_21_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_22_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_22_ce0 <= input_buffer_22_ce0_local;

    input_buffer_22_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_22_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_22_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_22_d0 <= empty_76_fu_747_p1;
    input_buffer_22_we0 <= input_buffer_22_we0_local;

    input_buffer_22_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1036_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1036_state3 = ap_const_boolean_1))) then 
            input_buffer_22_we0_local <= ap_const_logic_1;
        else 
            input_buffer_22_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_23_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_23_ce0 <= input_buffer_23_ce0_local;

    input_buffer_23_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_23_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_23_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_23_d0 <= empty_76_fu_747_p1;
    input_buffer_23_we0 <= input_buffer_23_we0_local;

    input_buffer_23_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1027_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1027_state3 = ap_const_boolean_1))) then 
            input_buffer_23_we0_local <= ap_const_logic_1;
        else 
            input_buffer_23_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_24_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_24_ce0 <= input_buffer_24_ce0_local;

    input_buffer_24_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_24_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_24_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_24_d0 <= empty_76_fu_747_p1;
    input_buffer_24_we0 <= input_buffer_24_we0_local;

    input_buffer_24_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1018_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1018_state3 = ap_const_boolean_1))) then 
            input_buffer_24_we0_local <= ap_const_logic_1;
        else 
            input_buffer_24_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_25_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_25_ce0 <= input_buffer_25_ce0_local;

    input_buffer_25_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_25_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_25_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_25_d0 <= empty_76_fu_747_p1;
    input_buffer_25_we0 <= input_buffer_25_we0_local;

    input_buffer_25_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1009_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1009_state3 = ap_const_boolean_1))) then 
            input_buffer_25_we0_local <= ap_const_logic_1;
        else 
            input_buffer_25_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_26_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_26_ce0 <= input_buffer_26_ce0_local;

    input_buffer_26_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_26_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_26_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_26_d0 <= empty_76_fu_747_p1;
    input_buffer_26_we0 <= input_buffer_26_we0_local;

    input_buffer_26_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1000_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1000_state3 = ap_const_boolean_1))) then 
            input_buffer_26_we0_local <= ap_const_logic_1;
        else 
            input_buffer_26_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_27_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_27_ce0 <= input_buffer_27_ce0_local;

    input_buffer_27_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_27_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_27_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_27_d0 <= empty_76_fu_747_p1;
    input_buffer_27_we0 <= input_buffer_27_we0_local;

    input_buffer_27_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred991_state3)
    begin
        if (((ap_predicate_pred991_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_27_we0_local <= ap_const_logic_1;
        else 
            input_buffer_27_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_28_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_28_ce0 <= input_buffer_28_ce0_local;

    input_buffer_28_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_28_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_28_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_28_d0 <= empty_76_fu_747_p1;
    input_buffer_28_we0 <= input_buffer_28_we0_local;

    input_buffer_28_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred982_state3)
    begin
        if (((ap_predicate_pred982_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_28_we0_local <= ap_const_logic_1;
        else 
            input_buffer_28_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_29_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_29_ce0 <= input_buffer_29_ce0_local;

    input_buffer_29_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_29_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_29_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_29_d0 <= empty_76_fu_747_p1;
    input_buffer_29_we0 <= input_buffer_29_we0_local;

    input_buffer_29_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred973_state3)
    begin
        if (((ap_predicate_pred973_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_29_we0_local <= ap_const_logic_1;
        else 
            input_buffer_29_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_30_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_30_ce0 <= input_buffer_30_ce0_local;

    input_buffer_30_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_30_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_30_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_30_d0 <= empty_76_fu_747_p1;
    input_buffer_30_we0 <= input_buffer_30_we0_local;

    input_buffer_30_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred964_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred964_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_30_we0_local <= ap_const_logic_1;
        else 
            input_buffer_30_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_31_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_31_ce0 <= input_buffer_31_ce0_local;

    input_buffer_31_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_31_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_31_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_31_d0 <= empty_76_fu_747_p1;
    input_buffer_31_we0 <= input_buffer_31_we0_local;

    input_buffer_31_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred955_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred955_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_31_we0_local <= ap_const_logic_1;
        else 
            input_buffer_31_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_32_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_32_ce0 <= input_buffer_32_ce0_local;

    input_buffer_32_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_32_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_32_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_32_d0 <= empty_76_fu_747_p1;
    input_buffer_32_we0 <= input_buffer_32_we0_local;

    input_buffer_32_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred946_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred946_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_32_we0_local <= ap_const_logic_1;
        else 
            input_buffer_32_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_33_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_33_ce0 <= input_buffer_33_ce0_local;

    input_buffer_33_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_33_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_33_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_33_d0 <= empty_76_fu_747_p1;
    input_buffer_33_we0 <= input_buffer_33_we0_local;

    input_buffer_33_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred936_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred936_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_33_we0_local <= ap_const_logic_1;
        else 
            input_buffer_33_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_34_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_34_ce0 <= input_buffer_34_ce0_local;

    input_buffer_34_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_34_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_34_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_34_d0 <= empty_76_fu_747_p1;
    input_buffer_34_we0 <= input_buffer_34_we0_local;

    input_buffer_34_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1216_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1216_state3 = ap_const_boolean_1))) then 
            input_buffer_34_we0_local <= ap_const_logic_1;
        else 
            input_buffer_34_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_4_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_4_ce0 <= input_buffer_4_ce0_local;

    input_buffer_4_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_4_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_4_d0 <= empty_76_fu_747_p1;
    input_buffer_4_we0 <= input_buffer_4_we0_local;

    input_buffer_4_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1198_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1198_state3 = ap_const_boolean_1))) then 
            input_buffer_4_we0_local <= ap_const_logic_1;
        else 
            input_buffer_4_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_5_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_5_ce0 <= input_buffer_5_ce0_local;

    input_buffer_5_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_5_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_5_d0 <= empty_76_fu_747_p1;
    input_buffer_5_we0 <= input_buffer_5_we0_local;

    input_buffer_5_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1189_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1189_state3 = ap_const_boolean_1))) then 
            input_buffer_5_we0_local <= ap_const_logic_1;
        else 
            input_buffer_5_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_6_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_6_ce0 <= input_buffer_6_ce0_local;

    input_buffer_6_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_6_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_6_d0 <= empty_76_fu_747_p1;
    input_buffer_6_we0 <= input_buffer_6_we0_local;

    input_buffer_6_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1180_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1180_state3 = ap_const_boolean_1))) then 
            input_buffer_6_we0_local <= ap_const_logic_1;
        else 
            input_buffer_6_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_7_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_7_ce0 <= input_buffer_7_ce0_local;

    input_buffer_7_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_7_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_7_d0 <= empty_76_fu_747_p1;
    input_buffer_7_we0 <= input_buffer_7_we0_local;

    input_buffer_7_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1171_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1171_state3 = ap_const_boolean_1))) then 
            input_buffer_7_we0_local <= ap_const_logic_1;
        else 
            input_buffer_7_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_8_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_8_ce0 <= input_buffer_8_ce0_local;

    input_buffer_8_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_8_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_8_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_8_d0 <= empty_76_fu_747_p1;
    input_buffer_8_we0 <= input_buffer_8_we0_local;

    input_buffer_8_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1162_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1162_state3 = ap_const_boolean_1))) then 
            input_buffer_8_we0_local <= ap_const_logic_1;
        else 
            input_buffer_8_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_9_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_9_ce0 <= input_buffer_9_ce0_local;

    input_buffer_9_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_9_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_9_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_9_d0 <= empty_76_fu_747_p1;
    input_buffer_9_we0 <= input_buffer_9_we0_local;

    input_buffer_9_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1153_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1153_state3 = ap_const_boolean_1))) then 
            input_buffer_9_we0_local <= ap_const_logic_1;
        else 
            input_buffer_9_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_address0 <= p_cast11_fu_712_p1(12 - 1 downto 0);
    input_buffer_ce0 <= input_buffer_ce0_local;

    input_buffer_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffer_ce0_local <= ap_const_logic_1;
        else 
            input_buffer_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    input_buffer_d0 <= empty_76_fu_747_p1;
    input_buffer_we0 <= input_buffer_we0_local;

    input_buffer_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1207_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1207_state3 = ap_const_boolean_1))) then 
            input_buffer_we0_local <= ap_const_logic_1;
        else 
            input_buffer_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_ARADDR <= ap_const_lv64_0;
    m_axi_gmem0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem0_ARID <= ap_const_lv1_0;
    m_axi_gmem0_ARLEN <= ap_const_lv32_0;
    m_axi_gmem0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem0_ARUSER <= ap_const_lv1_0;
    m_axi_gmem0_ARVALID <= ap_const_logic_0;
    m_axi_gmem0_AWADDR <= ap_const_lv64_0;
    m_axi_gmem0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem0_AWID <= ap_const_lv1_0;
    m_axi_gmem0_AWLEN <= ap_const_lv32_0;
    m_axi_gmem0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem0_AWUSER <= ap_const_lv1_0;
    m_axi_gmem0_AWVALID <= ap_const_logic_0;
    m_axi_gmem0_BREADY <= ap_const_logic_0;

    m_axi_gmem0_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op58_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op58_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axi_gmem0_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_WDATA <= ap_const_lv512_lc_1;
    m_axi_gmem0_WID <= ap_const_lv1_0;
    m_axi_gmem0_WLAST <= ap_const_logic_0;
    m_axi_gmem0_WSTRB <= ap_const_lv64_0;
    m_axi_gmem0_WUSER <= ap_const_lv1_0;
    m_axi_gmem0_WVALID <= ap_const_logic_0;
    p_cast11_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_reg_825_pp0_iter1_reg),64));
    shiftreg46_cast_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shiftreg46_fu_196),512));
end behav;
