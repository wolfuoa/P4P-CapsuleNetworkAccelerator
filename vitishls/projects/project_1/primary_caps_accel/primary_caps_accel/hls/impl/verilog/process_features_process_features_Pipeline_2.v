// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module process_features_process_features_Pipeline_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        input_buffer_address0,
        input_buffer_ce0,
        input_buffer_we0,
        input_buffer_d0,
        input_buffer_4_address0,
        input_buffer_4_ce0,
        input_buffer_4_we0,
        input_buffer_4_d0,
        input_buffer_5_address0,
        input_buffer_5_ce0,
        input_buffer_5_we0,
        input_buffer_5_d0,
        input_buffer_6_address0,
        input_buffer_6_ce0,
        input_buffer_6_we0,
        input_buffer_6_d0,
        input_buffer_7_address0,
        input_buffer_7_ce0,
        input_buffer_7_we0,
        input_buffer_7_d0,
        input_buffer_8_address0,
        input_buffer_8_ce0,
        input_buffer_8_we0,
        input_buffer_8_d0,
        input_buffer_9_address0,
        input_buffer_9_ce0,
        input_buffer_9_we0,
        input_buffer_9_d0,
        input_buffer_10_address0,
        input_buffer_10_ce0,
        input_buffer_10_we0,
        input_buffer_10_d0,
        input_buffer_11_address0,
        input_buffer_11_ce0,
        input_buffer_11_we0,
        input_buffer_11_d0,
        input_buffer_12_address0,
        input_buffer_12_ce0,
        input_buffer_12_we0,
        input_buffer_12_d0,
        input_buffer_13_address0,
        input_buffer_13_ce0,
        input_buffer_13_we0,
        input_buffer_13_d0,
        input_buffer_14_address0,
        input_buffer_14_ce0,
        input_buffer_14_we0,
        input_buffer_14_d0,
        input_buffer_15_address0,
        input_buffer_15_ce0,
        input_buffer_15_we0,
        input_buffer_15_d0,
        input_buffer_16_address0,
        input_buffer_16_ce0,
        input_buffer_16_we0,
        input_buffer_16_d0,
        input_buffer_17_address0,
        input_buffer_17_ce0,
        input_buffer_17_we0,
        input_buffer_17_d0,
        input_buffer_18_address0,
        input_buffer_18_ce0,
        input_buffer_18_we0,
        input_buffer_18_d0,
        input_buffer_19_address0,
        input_buffer_19_ce0,
        input_buffer_19_we0,
        input_buffer_19_d0,
        input_buffer_20_address0,
        input_buffer_20_ce0,
        input_buffer_20_we0,
        input_buffer_20_d0,
        input_buffer_21_address0,
        input_buffer_21_ce0,
        input_buffer_21_we0,
        input_buffer_21_d0,
        input_buffer_22_address0,
        input_buffer_22_ce0,
        input_buffer_22_we0,
        input_buffer_22_d0,
        input_buffer_23_address0,
        input_buffer_23_ce0,
        input_buffer_23_we0,
        input_buffer_23_d0,
        input_buffer_24_address0,
        input_buffer_24_ce0,
        input_buffer_24_we0,
        input_buffer_24_d0,
        input_buffer_25_address0,
        input_buffer_25_ce0,
        input_buffer_25_we0,
        input_buffer_25_d0,
        input_buffer_26_address0,
        input_buffer_26_ce0,
        input_buffer_26_we0,
        input_buffer_26_d0,
        input_buffer_27_address0,
        input_buffer_27_ce0,
        input_buffer_27_we0,
        input_buffer_27_d0,
        input_buffer_28_address0,
        input_buffer_28_ce0,
        input_buffer_28_we0,
        input_buffer_28_d0,
        input_buffer_29_address0,
        input_buffer_29_ce0,
        input_buffer_29_we0,
        input_buffer_29_d0,
        input_buffer_30_address0,
        input_buffer_30_ce0,
        input_buffer_30_we0,
        input_buffer_30_d0,
        input_buffer_31_address0,
        input_buffer_31_ce0,
        input_buffer_31_we0,
        input_buffer_31_d0,
        input_buffer_32_address0,
        input_buffer_32_ce0,
        input_buffer_32_we0,
        input_buffer_32_d0,
        input_buffer_33_address0,
        input_buffer_33_ce0,
        input_buffer_33_we0,
        input_buffer_33_d0,
        input_buffer_34_address0,
        input_buffer_34_ce0,
        input_buffer_34_we0,
        input_buffer_34_d0,
        sext_ln85
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [511:0] m_axi_gmem0_WDATA;
output  [63:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [511:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [12:0] m_axi_gmem0_RFIFONUM;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
output  [11:0] input_buffer_address0;
output   input_buffer_ce0;
output   input_buffer_we0;
output  [31:0] input_buffer_d0;
output  [11:0] input_buffer_4_address0;
output   input_buffer_4_ce0;
output   input_buffer_4_we0;
output  [31:0] input_buffer_4_d0;
output  [11:0] input_buffer_5_address0;
output   input_buffer_5_ce0;
output   input_buffer_5_we0;
output  [31:0] input_buffer_5_d0;
output  [11:0] input_buffer_6_address0;
output   input_buffer_6_ce0;
output   input_buffer_6_we0;
output  [31:0] input_buffer_6_d0;
output  [11:0] input_buffer_7_address0;
output   input_buffer_7_ce0;
output   input_buffer_7_we0;
output  [31:0] input_buffer_7_d0;
output  [11:0] input_buffer_8_address0;
output   input_buffer_8_ce0;
output   input_buffer_8_we0;
output  [31:0] input_buffer_8_d0;
output  [11:0] input_buffer_9_address0;
output   input_buffer_9_ce0;
output   input_buffer_9_we0;
output  [31:0] input_buffer_9_d0;
output  [11:0] input_buffer_10_address0;
output   input_buffer_10_ce0;
output   input_buffer_10_we0;
output  [31:0] input_buffer_10_d0;
output  [11:0] input_buffer_11_address0;
output   input_buffer_11_ce0;
output   input_buffer_11_we0;
output  [31:0] input_buffer_11_d0;
output  [11:0] input_buffer_12_address0;
output   input_buffer_12_ce0;
output   input_buffer_12_we0;
output  [31:0] input_buffer_12_d0;
output  [11:0] input_buffer_13_address0;
output   input_buffer_13_ce0;
output   input_buffer_13_we0;
output  [31:0] input_buffer_13_d0;
output  [11:0] input_buffer_14_address0;
output   input_buffer_14_ce0;
output   input_buffer_14_we0;
output  [31:0] input_buffer_14_d0;
output  [11:0] input_buffer_15_address0;
output   input_buffer_15_ce0;
output   input_buffer_15_we0;
output  [31:0] input_buffer_15_d0;
output  [11:0] input_buffer_16_address0;
output   input_buffer_16_ce0;
output   input_buffer_16_we0;
output  [31:0] input_buffer_16_d0;
output  [11:0] input_buffer_17_address0;
output   input_buffer_17_ce0;
output   input_buffer_17_we0;
output  [31:0] input_buffer_17_d0;
output  [11:0] input_buffer_18_address0;
output   input_buffer_18_ce0;
output   input_buffer_18_we0;
output  [31:0] input_buffer_18_d0;
output  [11:0] input_buffer_19_address0;
output   input_buffer_19_ce0;
output   input_buffer_19_we0;
output  [31:0] input_buffer_19_d0;
output  [11:0] input_buffer_20_address0;
output   input_buffer_20_ce0;
output   input_buffer_20_we0;
output  [31:0] input_buffer_20_d0;
output  [11:0] input_buffer_21_address0;
output   input_buffer_21_ce0;
output   input_buffer_21_we0;
output  [31:0] input_buffer_21_d0;
output  [11:0] input_buffer_22_address0;
output   input_buffer_22_ce0;
output   input_buffer_22_we0;
output  [31:0] input_buffer_22_d0;
output  [11:0] input_buffer_23_address0;
output   input_buffer_23_ce0;
output   input_buffer_23_we0;
output  [31:0] input_buffer_23_d0;
output  [11:0] input_buffer_24_address0;
output   input_buffer_24_ce0;
output   input_buffer_24_we0;
output  [31:0] input_buffer_24_d0;
output  [11:0] input_buffer_25_address0;
output   input_buffer_25_ce0;
output   input_buffer_25_we0;
output  [31:0] input_buffer_25_d0;
output  [11:0] input_buffer_26_address0;
output   input_buffer_26_ce0;
output   input_buffer_26_we0;
output  [31:0] input_buffer_26_d0;
output  [11:0] input_buffer_27_address0;
output   input_buffer_27_ce0;
output   input_buffer_27_we0;
output  [31:0] input_buffer_27_d0;
output  [11:0] input_buffer_28_address0;
output   input_buffer_28_ce0;
output   input_buffer_28_we0;
output  [31:0] input_buffer_28_d0;
output  [11:0] input_buffer_29_address0;
output   input_buffer_29_ce0;
output   input_buffer_29_we0;
output  [31:0] input_buffer_29_d0;
output  [11:0] input_buffer_30_address0;
output   input_buffer_30_ce0;
output   input_buffer_30_we0;
output  [31:0] input_buffer_30_d0;
output  [11:0] input_buffer_31_address0;
output   input_buffer_31_ce0;
output   input_buffer_31_we0;
output  [31:0] input_buffer_31_d0;
output  [11:0] input_buffer_32_address0;
output   input_buffer_32_ce0;
output   input_buffer_32_we0;
output  [31:0] input_buffer_32_d0;
output  [11:0] input_buffer_33_address0;
output   input_buffer_33_ce0;
output   input_buffer_33_we0;
output  [31:0] input_buffer_33_d0;
output  [11:0] input_buffer_34_address0;
output   input_buffer_34_ce0;
output   input_buffer_34_we0;
output  [31:0] input_buffer_34_d0;
input  [57:0] sext_ln85;

reg ap_idle;
reg m_axi_gmem0_RREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg   [0:0] exitcond23_i15_reg_817;
reg   [0:0] empty_79_reg_830;
reg    ap_predicate_op58_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] exitcond23_i15_fu_657_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem0_blk_n_R;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond23_i15_reg_817_pp0_iter1_reg;
wire   [4:0] empty_78_fu_673_p1;
reg   [4:0] empty_78_reg_821;
reg   [11:0] tmp_s_reg_825;
reg   [11:0] tmp_s_reg_825_pp0_iter1_reg;
wire   [0:0] empty_79_fu_687_p2;
reg   [0:0] empty_79_reg_830_pp0_iter1_reg;
reg   [511:0] gmem0_addr_read_reg_834;
reg   [511:0] ap_phi_mux_empty_75_phi_fu_634_p4;
wire   [511:0] ap_phi_reg_pp0_iter2_empty_75_reg_631;
wire   [511:0] shiftreg46_cast_fu_707_p1;
wire   [63:0] p_cast11_fu_712_p1;
reg   [479:0] shiftreg46_fu_196;
wire    ap_loop_init;
reg   [16:0] loop_index19_i_fu_200;
wire   [16:0] empty_fu_663_p2;
reg   [16:0] ap_sig_allocacmp_loop_index19_i_load;
reg    input_buffer_33_we0_local;
reg    ap_predicate_pred936_state3;
wire   [31:0] empty_76_fu_747_p1;
reg    input_buffer_33_ce0_local;
reg    input_buffer_32_we0_local;
reg    ap_predicate_pred946_state3;
reg    input_buffer_32_ce0_local;
reg    input_buffer_31_we0_local;
reg    ap_predicate_pred955_state3;
reg    input_buffer_31_ce0_local;
reg    input_buffer_30_we0_local;
reg    ap_predicate_pred964_state3;
reg    input_buffer_30_ce0_local;
reg    input_buffer_29_we0_local;
reg    ap_predicate_pred973_state3;
reg    input_buffer_29_ce0_local;
reg    input_buffer_28_we0_local;
reg    ap_predicate_pred982_state3;
reg    input_buffer_28_ce0_local;
reg    input_buffer_27_we0_local;
reg    ap_predicate_pred991_state3;
reg    input_buffer_27_ce0_local;
reg    input_buffer_26_we0_local;
reg    ap_predicate_pred1000_state3;
reg    input_buffer_26_ce0_local;
reg    input_buffer_25_we0_local;
reg    ap_predicate_pred1009_state3;
reg    input_buffer_25_ce0_local;
reg    input_buffer_24_we0_local;
reg    ap_predicate_pred1018_state3;
reg    input_buffer_24_ce0_local;
reg    input_buffer_23_we0_local;
reg    ap_predicate_pred1027_state3;
reg    input_buffer_23_ce0_local;
reg    input_buffer_22_we0_local;
reg    ap_predicate_pred1036_state3;
reg    input_buffer_22_ce0_local;
reg    input_buffer_21_we0_local;
reg    ap_predicate_pred1045_state3;
reg    input_buffer_21_ce0_local;
reg    input_buffer_20_we0_local;
reg    ap_predicate_pred1054_state3;
reg    input_buffer_20_ce0_local;
reg    input_buffer_19_we0_local;
reg    ap_predicate_pred1063_state3;
reg    input_buffer_19_ce0_local;
reg    input_buffer_18_we0_local;
reg    ap_predicate_pred1072_state3;
reg    input_buffer_18_ce0_local;
reg    input_buffer_17_we0_local;
reg    ap_predicate_pred1081_state3;
reg    input_buffer_17_ce0_local;
reg    input_buffer_16_we0_local;
reg    ap_predicate_pred1090_state3;
reg    input_buffer_16_ce0_local;
reg    input_buffer_15_we0_local;
reg    ap_predicate_pred1099_state3;
reg    input_buffer_15_ce0_local;
reg    input_buffer_14_we0_local;
reg    ap_predicate_pred1108_state3;
reg    input_buffer_14_ce0_local;
reg    input_buffer_13_we0_local;
reg    ap_predicate_pred1117_state3;
reg    input_buffer_13_ce0_local;
reg    input_buffer_12_we0_local;
reg    ap_predicate_pred1126_state3;
reg    input_buffer_12_ce0_local;
reg    input_buffer_11_we0_local;
reg    ap_predicate_pred1135_state3;
reg    input_buffer_11_ce0_local;
reg    input_buffer_10_we0_local;
reg    ap_predicate_pred1144_state3;
reg    input_buffer_10_ce0_local;
reg    input_buffer_9_we0_local;
reg    ap_predicate_pred1153_state3;
reg    input_buffer_9_ce0_local;
reg    input_buffer_8_we0_local;
reg    ap_predicate_pred1162_state3;
reg    input_buffer_8_ce0_local;
reg    input_buffer_7_we0_local;
reg    ap_predicate_pred1171_state3;
reg    input_buffer_7_ce0_local;
reg    input_buffer_6_we0_local;
reg    ap_predicate_pred1180_state3;
reg    input_buffer_6_ce0_local;
reg    input_buffer_5_we0_local;
reg    ap_predicate_pred1189_state3;
reg    input_buffer_5_ce0_local;
reg    input_buffer_4_we0_local;
reg    ap_predicate_pred1198_state3;
reg    input_buffer_4_ce0_local;
reg    input_buffer_we0_local;
reg    ap_predicate_pred1207_state3;
reg    input_buffer_ce0_local;
reg    input_buffer_34_we0_local;
reg    ap_predicate_pred1216_state3;
reg    input_buffer_34_ce0_local;
wire   [3:0] empty_77_fu_669_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 shiftreg46_fu_196 = 480'd0;
#0 loop_index19_i_fu_200 = 17'd0;
#0 ap_done_reg = 1'b0;
end

process_features_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond23_i15_fu_657_p2 == 1'd0))) begin
            loop_index19_i_fu_200 <= empty_fu_663_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            loop_index19_i_fu_200 <= 17'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shiftreg46_fu_196 <= 480'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            shiftreg46_fu_196 <= {{ap_phi_mux_empty_75_phi_fu_634_p4[511:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_predicate_pred1000_state3 <= (empty_78_reg_821 == 5'd23);
        ap_predicate_pred1009_state3 <= (empty_78_reg_821 == 5'd22);
        ap_predicate_pred1018_state3 <= (empty_78_reg_821 == 5'd21);
        ap_predicate_pred1027_state3 <= (empty_78_reg_821 == 5'd20);
        ap_predicate_pred1036_state3 <= (empty_78_reg_821 == 5'd19);
        ap_predicate_pred1045_state3 <= (empty_78_reg_821 == 5'd18);
        ap_predicate_pred1054_state3 <= (empty_78_reg_821 == 5'd17);
        ap_predicate_pred1063_state3 <= (empty_78_reg_821 == 5'd16);
        ap_predicate_pred1072_state3 <= (empty_78_reg_821 == 5'd15);
        ap_predicate_pred1081_state3 <= (empty_78_reg_821 == 5'd14);
        ap_predicate_pred1090_state3 <= (empty_78_reg_821 == 5'd13);
        ap_predicate_pred1099_state3 <= (empty_78_reg_821 == 5'd12);
        ap_predicate_pred1108_state3 <= (empty_78_reg_821 == 5'd11);
        ap_predicate_pred1117_state3 <= (empty_78_reg_821 == 5'd10);
        ap_predicate_pred1126_state3 <= (empty_78_reg_821 == 5'd9);
        ap_predicate_pred1135_state3 <= (empty_78_reg_821 == 5'd8);
        ap_predicate_pred1144_state3 <= (empty_78_reg_821 == 5'd7);
        ap_predicate_pred1153_state3 <= (empty_78_reg_821 == 5'd6);
        ap_predicate_pred1162_state3 <= (empty_78_reg_821 == 5'd5);
        ap_predicate_pred1171_state3 <= (empty_78_reg_821 == 5'd4);
        ap_predicate_pred1180_state3 <= (empty_78_reg_821 == 5'd3);
        ap_predicate_pred1189_state3 <= (empty_78_reg_821 == 5'd2);
        ap_predicate_pred1198_state3 <= (empty_78_reg_821 == 5'd1);
        ap_predicate_pred1207_state3 <= (empty_78_reg_821 == 5'd0);
        ap_predicate_pred1216_state3 <= (empty_78_reg_821 == 5'd31);
        ap_predicate_pred936_state3 <= (empty_78_reg_821 == 5'd30);
        ap_predicate_pred946_state3 <= (empty_78_reg_821 == 5'd29);
        ap_predicate_pred955_state3 <= (empty_78_reg_821 == 5'd28);
        ap_predicate_pred964_state3 <= (empty_78_reg_821 == 5'd27);
        ap_predicate_pred973_state3 <= (empty_78_reg_821 == 5'd26);
        ap_predicate_pred982_state3 <= (empty_78_reg_821 == 5'd25);
        ap_predicate_pred991_state3 <= (empty_78_reg_821 == 5'd24);
        empty_78_reg_821 <= empty_78_fu_673_p1;
        empty_79_reg_830 <= empty_79_fu_687_p2;
        empty_79_reg_830_pp0_iter1_reg <= empty_79_reg_830;
        exitcond23_i15_reg_817 <= exitcond23_i15_fu_657_p2;
        exitcond23_i15_reg_817_pp0_iter1_reg <= exitcond23_i15_reg_817;
        gmem0_addr_read_reg_834 <= m_axi_gmem0_RDATA;
        tmp_s_reg_825 <= {{ap_sig_allocacmp_loop_index19_i_load[16:5]}};
        tmp_s_reg_825_pp0_iter1_reg <= tmp_s_reg_825;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond23_i15_fu_657_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond23_i15_reg_817_pp0_iter1_reg == 1'd0)) begin
        if ((empty_79_reg_830_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_empty_75_phi_fu_634_p4 = shiftreg46_cast_fu_707_p1;
        end else if ((empty_79_reg_830_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_empty_75_phi_fu_634_p4 = gmem0_addr_read_reg_834;
        end else begin
            ap_phi_mux_empty_75_phi_fu_634_p4 = ap_phi_reg_pp0_iter2_empty_75_reg_631;
        end
    end else begin
        ap_phi_mux_empty_75_phi_fu_634_p4 = ap_phi_reg_pp0_iter2_empty_75_reg_631;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_loop_index19_i_load = 17'd0;
    end else begin
        ap_sig_allocacmp_loop_index19_i_load = loop_index19_i_fu_200;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op58_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_10_ce0_local = 1'b1;
    end else begin
        input_buffer_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1144_state3 == 1'b1))) begin
        input_buffer_10_we0_local = 1'b1;
    end else begin
        input_buffer_10_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_11_ce0_local = 1'b1;
    end else begin
        input_buffer_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1135_state3 == 1'b1))) begin
        input_buffer_11_we0_local = 1'b1;
    end else begin
        input_buffer_11_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_12_ce0_local = 1'b1;
    end else begin
        input_buffer_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1126_state3 == 1'b1))) begin
        input_buffer_12_we0_local = 1'b1;
    end else begin
        input_buffer_12_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_13_ce0_local = 1'b1;
    end else begin
        input_buffer_13_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1117_state3 == 1'b1))) begin
        input_buffer_13_we0_local = 1'b1;
    end else begin
        input_buffer_13_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_14_ce0_local = 1'b1;
    end else begin
        input_buffer_14_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1108_state3 == 1'b1))) begin
        input_buffer_14_we0_local = 1'b1;
    end else begin
        input_buffer_14_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_15_ce0_local = 1'b1;
    end else begin
        input_buffer_15_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1099_state3 == 1'b1))) begin
        input_buffer_15_we0_local = 1'b1;
    end else begin
        input_buffer_15_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_16_ce0_local = 1'b1;
    end else begin
        input_buffer_16_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1090_state3 == 1'b1))) begin
        input_buffer_16_we0_local = 1'b1;
    end else begin
        input_buffer_16_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_17_ce0_local = 1'b1;
    end else begin
        input_buffer_17_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1081_state3 == 1'b1))) begin
        input_buffer_17_we0_local = 1'b1;
    end else begin
        input_buffer_17_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_18_ce0_local = 1'b1;
    end else begin
        input_buffer_18_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1072_state3 == 1'b1))) begin
        input_buffer_18_we0_local = 1'b1;
    end else begin
        input_buffer_18_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_19_ce0_local = 1'b1;
    end else begin
        input_buffer_19_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1063_state3 == 1'b1))) begin
        input_buffer_19_we0_local = 1'b1;
    end else begin
        input_buffer_19_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_20_ce0_local = 1'b1;
    end else begin
        input_buffer_20_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1054_state3 == 1'b1))) begin
        input_buffer_20_we0_local = 1'b1;
    end else begin
        input_buffer_20_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_21_ce0_local = 1'b1;
    end else begin
        input_buffer_21_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1045_state3 == 1'b1))) begin
        input_buffer_21_we0_local = 1'b1;
    end else begin
        input_buffer_21_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_22_ce0_local = 1'b1;
    end else begin
        input_buffer_22_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1036_state3 == 1'b1))) begin
        input_buffer_22_we0_local = 1'b1;
    end else begin
        input_buffer_22_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_23_ce0_local = 1'b1;
    end else begin
        input_buffer_23_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1027_state3 == 1'b1))) begin
        input_buffer_23_we0_local = 1'b1;
    end else begin
        input_buffer_23_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_24_ce0_local = 1'b1;
    end else begin
        input_buffer_24_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1018_state3 == 1'b1))) begin
        input_buffer_24_we0_local = 1'b1;
    end else begin
        input_buffer_24_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_25_ce0_local = 1'b1;
    end else begin
        input_buffer_25_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1009_state3 == 1'b1))) begin
        input_buffer_25_we0_local = 1'b1;
    end else begin
        input_buffer_25_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_26_ce0_local = 1'b1;
    end else begin
        input_buffer_26_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1000_state3 == 1'b1))) begin
        input_buffer_26_we0_local = 1'b1;
    end else begin
        input_buffer_26_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_27_ce0_local = 1'b1;
    end else begin
        input_buffer_27_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_pred991_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_27_we0_local = 1'b1;
    end else begin
        input_buffer_27_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_28_ce0_local = 1'b1;
    end else begin
        input_buffer_28_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_pred982_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_28_we0_local = 1'b1;
    end else begin
        input_buffer_28_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_29_ce0_local = 1'b1;
    end else begin
        input_buffer_29_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_pred973_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_29_we0_local = 1'b1;
    end else begin
        input_buffer_29_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_30_ce0_local = 1'b1;
    end else begin
        input_buffer_30_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_pred964_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_30_we0_local = 1'b1;
    end else begin
        input_buffer_30_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_31_ce0_local = 1'b1;
    end else begin
        input_buffer_31_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_pred955_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_31_we0_local = 1'b1;
    end else begin
        input_buffer_31_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_32_ce0_local = 1'b1;
    end else begin
        input_buffer_32_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_pred946_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_32_we0_local = 1'b1;
    end else begin
        input_buffer_32_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_33_ce0_local = 1'b1;
    end else begin
        input_buffer_33_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_pred936_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_33_we0_local = 1'b1;
    end else begin
        input_buffer_33_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_34_ce0_local = 1'b1;
    end else begin
        input_buffer_34_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1216_state3 == 1'b1))) begin
        input_buffer_34_we0_local = 1'b1;
    end else begin
        input_buffer_34_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_4_ce0_local = 1'b1;
    end else begin
        input_buffer_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1198_state3 == 1'b1))) begin
        input_buffer_4_we0_local = 1'b1;
    end else begin
        input_buffer_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_5_ce0_local = 1'b1;
    end else begin
        input_buffer_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1189_state3 == 1'b1))) begin
        input_buffer_5_we0_local = 1'b1;
    end else begin
        input_buffer_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_6_ce0_local = 1'b1;
    end else begin
        input_buffer_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1180_state3 == 1'b1))) begin
        input_buffer_6_we0_local = 1'b1;
    end else begin
        input_buffer_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_7_ce0_local = 1'b1;
    end else begin
        input_buffer_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1171_state3 == 1'b1))) begin
        input_buffer_7_we0_local = 1'b1;
    end else begin
        input_buffer_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_8_ce0_local = 1'b1;
    end else begin
        input_buffer_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1162_state3 == 1'b1))) begin
        input_buffer_8_we0_local = 1'b1;
    end else begin
        input_buffer_8_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_9_ce0_local = 1'b1;
    end else begin
        input_buffer_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1153_state3 == 1'b1))) begin
        input_buffer_9_we0_local = 1'b1;
    end else begin
        input_buffer_9_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffer_ce0_local = 1'b1;
    end else begin
        input_buffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred1207_state3 == 1'b1))) begin
        input_buffer_we0_local = 1'b1;
    end else begin
        input_buffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op58_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem0_RREADY = 1'b1;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op58_read_state2 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter2_empty_75_reg_631 = 'bx;

always @ (*) begin
    ap_predicate_op58_read_state2 = ((empty_79_reg_830 == 1'd1) & (exitcond23_i15_reg_817 == 1'd0));
end

assign ap_ready = ap_ready_sig;

assign empty_76_fu_747_p1 = ap_phi_mux_empty_75_phi_fu_634_p4[31:0];

assign empty_77_fu_669_p1 = ap_sig_allocacmp_loop_index19_i_load[3:0];

assign empty_78_fu_673_p1 = ap_sig_allocacmp_loop_index19_i_load[4:0];

assign empty_79_fu_687_p2 = ((empty_77_fu_669_p1 == 4'd0) ? 1'b1 : 1'b0);

assign empty_fu_663_p2 = (ap_sig_allocacmp_loop_index19_i_load + 17'd1);

assign exitcond23_i15_fu_657_p2 = ((ap_sig_allocacmp_loop_index19_i_load == 17'd102400) ? 1'b1 : 1'b0);

assign input_buffer_10_address0 = p_cast11_fu_712_p1;

assign input_buffer_10_ce0 = input_buffer_10_ce0_local;

assign input_buffer_10_d0 = empty_76_fu_747_p1;

assign input_buffer_10_we0 = input_buffer_10_we0_local;

assign input_buffer_11_address0 = p_cast11_fu_712_p1;

assign input_buffer_11_ce0 = input_buffer_11_ce0_local;

assign input_buffer_11_d0 = empty_76_fu_747_p1;

assign input_buffer_11_we0 = input_buffer_11_we0_local;

assign input_buffer_12_address0 = p_cast11_fu_712_p1;

assign input_buffer_12_ce0 = input_buffer_12_ce0_local;

assign input_buffer_12_d0 = empty_76_fu_747_p1;

assign input_buffer_12_we0 = input_buffer_12_we0_local;

assign input_buffer_13_address0 = p_cast11_fu_712_p1;

assign input_buffer_13_ce0 = input_buffer_13_ce0_local;

assign input_buffer_13_d0 = empty_76_fu_747_p1;

assign input_buffer_13_we0 = input_buffer_13_we0_local;

assign input_buffer_14_address0 = p_cast11_fu_712_p1;

assign input_buffer_14_ce0 = input_buffer_14_ce0_local;

assign input_buffer_14_d0 = empty_76_fu_747_p1;

assign input_buffer_14_we0 = input_buffer_14_we0_local;

assign input_buffer_15_address0 = p_cast11_fu_712_p1;

assign input_buffer_15_ce0 = input_buffer_15_ce0_local;

assign input_buffer_15_d0 = empty_76_fu_747_p1;

assign input_buffer_15_we0 = input_buffer_15_we0_local;

assign input_buffer_16_address0 = p_cast11_fu_712_p1;

assign input_buffer_16_ce0 = input_buffer_16_ce0_local;

assign input_buffer_16_d0 = empty_76_fu_747_p1;

assign input_buffer_16_we0 = input_buffer_16_we0_local;

assign input_buffer_17_address0 = p_cast11_fu_712_p1;

assign input_buffer_17_ce0 = input_buffer_17_ce0_local;

assign input_buffer_17_d0 = empty_76_fu_747_p1;

assign input_buffer_17_we0 = input_buffer_17_we0_local;

assign input_buffer_18_address0 = p_cast11_fu_712_p1;

assign input_buffer_18_ce0 = input_buffer_18_ce0_local;

assign input_buffer_18_d0 = empty_76_fu_747_p1;

assign input_buffer_18_we0 = input_buffer_18_we0_local;

assign input_buffer_19_address0 = p_cast11_fu_712_p1;

assign input_buffer_19_ce0 = input_buffer_19_ce0_local;

assign input_buffer_19_d0 = empty_76_fu_747_p1;

assign input_buffer_19_we0 = input_buffer_19_we0_local;

assign input_buffer_20_address0 = p_cast11_fu_712_p1;

assign input_buffer_20_ce0 = input_buffer_20_ce0_local;

assign input_buffer_20_d0 = empty_76_fu_747_p1;

assign input_buffer_20_we0 = input_buffer_20_we0_local;

assign input_buffer_21_address0 = p_cast11_fu_712_p1;

assign input_buffer_21_ce0 = input_buffer_21_ce0_local;

assign input_buffer_21_d0 = empty_76_fu_747_p1;

assign input_buffer_21_we0 = input_buffer_21_we0_local;

assign input_buffer_22_address0 = p_cast11_fu_712_p1;

assign input_buffer_22_ce0 = input_buffer_22_ce0_local;

assign input_buffer_22_d0 = empty_76_fu_747_p1;

assign input_buffer_22_we0 = input_buffer_22_we0_local;

assign input_buffer_23_address0 = p_cast11_fu_712_p1;

assign input_buffer_23_ce0 = input_buffer_23_ce0_local;

assign input_buffer_23_d0 = empty_76_fu_747_p1;

assign input_buffer_23_we0 = input_buffer_23_we0_local;

assign input_buffer_24_address0 = p_cast11_fu_712_p1;

assign input_buffer_24_ce0 = input_buffer_24_ce0_local;

assign input_buffer_24_d0 = empty_76_fu_747_p1;

assign input_buffer_24_we0 = input_buffer_24_we0_local;

assign input_buffer_25_address0 = p_cast11_fu_712_p1;

assign input_buffer_25_ce0 = input_buffer_25_ce0_local;

assign input_buffer_25_d0 = empty_76_fu_747_p1;

assign input_buffer_25_we0 = input_buffer_25_we0_local;

assign input_buffer_26_address0 = p_cast11_fu_712_p1;

assign input_buffer_26_ce0 = input_buffer_26_ce0_local;

assign input_buffer_26_d0 = empty_76_fu_747_p1;

assign input_buffer_26_we0 = input_buffer_26_we0_local;

assign input_buffer_27_address0 = p_cast11_fu_712_p1;

assign input_buffer_27_ce0 = input_buffer_27_ce0_local;

assign input_buffer_27_d0 = empty_76_fu_747_p1;

assign input_buffer_27_we0 = input_buffer_27_we0_local;

assign input_buffer_28_address0 = p_cast11_fu_712_p1;

assign input_buffer_28_ce0 = input_buffer_28_ce0_local;

assign input_buffer_28_d0 = empty_76_fu_747_p1;

assign input_buffer_28_we0 = input_buffer_28_we0_local;

assign input_buffer_29_address0 = p_cast11_fu_712_p1;

assign input_buffer_29_ce0 = input_buffer_29_ce0_local;

assign input_buffer_29_d0 = empty_76_fu_747_p1;

assign input_buffer_29_we0 = input_buffer_29_we0_local;

assign input_buffer_30_address0 = p_cast11_fu_712_p1;

assign input_buffer_30_ce0 = input_buffer_30_ce0_local;

assign input_buffer_30_d0 = empty_76_fu_747_p1;

assign input_buffer_30_we0 = input_buffer_30_we0_local;

assign input_buffer_31_address0 = p_cast11_fu_712_p1;

assign input_buffer_31_ce0 = input_buffer_31_ce0_local;

assign input_buffer_31_d0 = empty_76_fu_747_p1;

assign input_buffer_31_we0 = input_buffer_31_we0_local;

assign input_buffer_32_address0 = p_cast11_fu_712_p1;

assign input_buffer_32_ce0 = input_buffer_32_ce0_local;

assign input_buffer_32_d0 = empty_76_fu_747_p1;

assign input_buffer_32_we0 = input_buffer_32_we0_local;

assign input_buffer_33_address0 = p_cast11_fu_712_p1;

assign input_buffer_33_ce0 = input_buffer_33_ce0_local;

assign input_buffer_33_d0 = empty_76_fu_747_p1;

assign input_buffer_33_we0 = input_buffer_33_we0_local;

assign input_buffer_34_address0 = p_cast11_fu_712_p1;

assign input_buffer_34_ce0 = input_buffer_34_ce0_local;

assign input_buffer_34_d0 = empty_76_fu_747_p1;

assign input_buffer_34_we0 = input_buffer_34_we0_local;

assign input_buffer_4_address0 = p_cast11_fu_712_p1;

assign input_buffer_4_ce0 = input_buffer_4_ce0_local;

assign input_buffer_4_d0 = empty_76_fu_747_p1;

assign input_buffer_4_we0 = input_buffer_4_we0_local;

assign input_buffer_5_address0 = p_cast11_fu_712_p1;

assign input_buffer_5_ce0 = input_buffer_5_ce0_local;

assign input_buffer_5_d0 = empty_76_fu_747_p1;

assign input_buffer_5_we0 = input_buffer_5_we0_local;

assign input_buffer_6_address0 = p_cast11_fu_712_p1;

assign input_buffer_6_ce0 = input_buffer_6_ce0_local;

assign input_buffer_6_d0 = empty_76_fu_747_p1;

assign input_buffer_6_we0 = input_buffer_6_we0_local;

assign input_buffer_7_address0 = p_cast11_fu_712_p1;

assign input_buffer_7_ce0 = input_buffer_7_ce0_local;

assign input_buffer_7_d0 = empty_76_fu_747_p1;

assign input_buffer_7_we0 = input_buffer_7_we0_local;

assign input_buffer_8_address0 = p_cast11_fu_712_p1;

assign input_buffer_8_ce0 = input_buffer_8_ce0_local;

assign input_buffer_8_d0 = empty_76_fu_747_p1;

assign input_buffer_8_we0 = input_buffer_8_we0_local;

assign input_buffer_9_address0 = p_cast11_fu_712_p1;

assign input_buffer_9_ce0 = input_buffer_9_ce0_local;

assign input_buffer_9_d0 = empty_76_fu_747_p1;

assign input_buffer_9_we0 = input_buffer_9_we0_local;

assign input_buffer_address0 = p_cast11_fu_712_p1;

assign input_buffer_ce0 = input_buffer_ce0_local;

assign input_buffer_d0 = empty_76_fu_747_p1;

assign input_buffer_we0 = input_buffer_we0_local;

assign m_axi_gmem0_ARADDR = 64'd0;

assign m_axi_gmem0_ARBURST = 2'd0;

assign m_axi_gmem0_ARCACHE = 4'd0;

assign m_axi_gmem0_ARID = 1'd0;

assign m_axi_gmem0_ARLEN = 32'd0;

assign m_axi_gmem0_ARLOCK = 2'd0;

assign m_axi_gmem0_ARPROT = 3'd0;

assign m_axi_gmem0_ARQOS = 4'd0;

assign m_axi_gmem0_ARREGION = 4'd0;

assign m_axi_gmem0_ARSIZE = 3'd0;

assign m_axi_gmem0_ARUSER = 1'd0;

assign m_axi_gmem0_ARVALID = 1'b0;

assign m_axi_gmem0_AWADDR = 64'd0;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd0;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_AWVALID = 1'b0;

assign m_axi_gmem0_BREADY = 1'b0;

assign m_axi_gmem0_WDATA = 512'd0;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 64'd0;

assign m_axi_gmem0_WUSER = 1'd0;

assign m_axi_gmem0_WVALID = 1'b0;

assign p_cast11_fu_712_p1 = tmp_s_reg_825_pp0_iter1_reg;

assign shiftreg46_cast_fu_707_p1 = shiftreg46_fu_196;

endmodule //process_features_process_features_Pipeline_2
