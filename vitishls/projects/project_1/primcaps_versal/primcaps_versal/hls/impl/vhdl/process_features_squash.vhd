-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity process_features_squash is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_AWVALID : OUT STD_LOGIC;
    m_axi_gmem3_AWREADY : IN STD_LOGIC;
    m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_WVALID : OUT STD_LOGIC;
    m_axi_gmem3_WREADY : IN STD_LOGIC;
    m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem3_WLAST : OUT STD_LOGIC;
    m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_ARVALID : OUT STD_LOGIC;
    m_axi_gmem3_ARREADY : IN STD_LOGIC;
    m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_RVALID : IN STD_LOGIC;
    m_axi_gmem3_RREADY : OUT STD_LOGIC;
    m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem3_RLAST : IN STD_LOGIC;
    m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BVALID : IN STD_LOGIC;
    m_axi_gmem3_BREADY : OUT STD_LOGIC;
    m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    output_r : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of process_features_squash is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (78 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (78 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (78 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (78 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (78 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (78 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (78 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (78 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (78 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (78 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv64_240 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001001000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gmem3_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal gmem3_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal trunc_ln2_fu_220_p4 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln2_reg_241 : STD_LOGIC_VECTOR (57 downto 0);
    signal input_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_ce0 : STD_LOGIC;
    signal input_buffer_we0 : STD_LOGIC;
    signal input_buffer_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_ce1 : STD_LOGIC;
    signal input_buffer_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_1_ce0 : STD_LOGIC;
    signal input_buffer_1_we0 : STD_LOGIC;
    signal input_buffer_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_1_ce1 : STD_LOGIC;
    signal input_buffer_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_2_ce0 : STD_LOGIC;
    signal input_buffer_2_we0 : STD_LOGIC;
    signal input_buffer_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_2_ce1 : STD_LOGIC;
    signal input_buffer_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_3_ce0 : STD_LOGIC;
    signal input_buffer_3_we0 : STD_LOGIC;
    signal input_buffer_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_3_ce1 : STD_LOGIC;
    signal input_buffer_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_buffer_ce0 : STD_LOGIC;
    signal output_buffer_we0 : STD_LOGIC;
    signal output_buffer_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_buffer_ce1 : STD_LOGIC;
    signal output_buffer_we1 : STD_LOGIC;
    signal output_buffer_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_buffer_1_ce0 : STD_LOGIC;
    signal output_buffer_1_we0 : STD_LOGIC;
    signal output_buffer_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_buffer_1_ce1 : STD_LOGIC;
    signal output_buffer_1_we1 : STD_LOGIC;
    signal output_buffer_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_buffer_2_ce0 : STD_LOGIC;
    signal output_buffer_2_we0 : STD_LOGIC;
    signal output_buffer_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_buffer_2_ce1 : STD_LOGIC;
    signal output_buffer_2_we1 : STD_LOGIC;
    signal output_buffer_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_buffer_3_ce0 : STD_LOGIC;
    signal output_buffer_3_we0 : STD_LOGIC;
    signal output_buffer_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_buffer_3_ce1 : STD_LOGIC;
    signal output_buffer_3_we1 : STD_LOGIC;
    signal squared_input_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal squared_input_ce0 : STD_LOGIC;
    signal squared_input_we0 : STD_LOGIC;
    signal squared_input_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal squared_input_ce1 : STD_LOGIC;
    signal squared_input_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal squared_input_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal squared_input_1_ce0 : STD_LOGIC;
    signal squared_input_1_we0 : STD_LOGIC;
    signal squared_input_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal squared_input_1_ce1 : STD_LOGIC;
    signal squared_input_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal squared_input_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal squared_input_2_ce0 : STD_LOGIC;
    signal squared_input_2_we0 : STD_LOGIC;
    signal squared_input_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal squared_input_2_ce1 : STD_LOGIC;
    signal squared_input_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal squared_input_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal squared_input_3_ce0 : STD_LOGIC;
    signal squared_input_3_we0 : STD_LOGIC;
    signal squared_input_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal squared_input_3_ce1 : STD_LOGIC;
    signal squared_input_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal squared_norm_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal squared_norm_ce0 : STD_LOGIC;
    signal squared_norm_we0 : STD_LOGIC;
    signal squared_norm_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal squared_norm_ce1 : STD_LOGIC;
    signal squared_norm_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal scale_ce0 : STD_LOGIC;
    signal scale_we0 : STD_LOGIC;
    signal scale_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_1_fu_149_ap_start : STD_LOGIC;
    signal grp_squash_Pipeline_1_fu_149_ap_done : STD_LOGIC;
    signal grp_squash_Pipeline_1_fu_149_ap_idle : STD_LOGIC;
    signal grp_squash_Pipeline_1_fu_149_ap_ready : STD_LOGIC;
    signal grp_squash_Pipeline_1_fu_149_squared_norm_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_squash_Pipeline_1_fu_149_squared_norm_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_1_fu_149_squared_norm_we0 : STD_LOGIC;
    signal grp_squash_Pipeline_1_fu_149_squared_norm_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_2_fu_154_ap_start : STD_LOGIC;
    signal grp_squash_Pipeline_2_fu_154_ap_done : STD_LOGIC;
    signal grp_squash_Pipeline_2_fu_154_ap_idle : STD_LOGIC;
    signal grp_squash_Pipeline_2_fu_154_ap_ready : STD_LOGIC;
    signal grp_squash_Pipeline_2_fu_154_input_buffer_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_2_fu_154_input_buffer_3_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_2_fu_154_input_buffer_3_we0 : STD_LOGIC;
    signal grp_squash_Pipeline_2_fu_154_input_buffer_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_2_fu_154_input_buffer_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_2_fu_154_input_buffer_2_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_2_fu_154_input_buffer_2_we0 : STD_LOGIC;
    signal grp_squash_Pipeline_2_fu_154_input_buffer_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_2_fu_154_input_buffer_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_2_fu_154_input_buffer_1_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_2_fu_154_input_buffer_1_we0 : STD_LOGIC;
    signal grp_squash_Pipeline_2_fu_154_input_buffer_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_2_fu_154_input_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_2_fu_154_input_buffer_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_2_fu_154_input_buffer_we0 : STD_LOGIC;
    signal grp_squash_Pipeline_2_fu_154_input_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_2_fu_154_input_r_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_squash_Pipeline_2_fu_154_input_r_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_start : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_done : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_idle : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_ready : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_3_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_3_we0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_2_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_2_we0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_1_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_1_we0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_we0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_1_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_2_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_3_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_start : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_done : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_idle : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_ready : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_we0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_ce1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_ce1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_1_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_1_ce1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_2_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_2_ce1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_3_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_3_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_3_ce1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_scale_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_scale_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_scale_we0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_scale_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_start : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_done : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_idle : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_ready : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_we0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_ce1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_we1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_we0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_ce1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_we1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_we0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_ce1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_we1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_we0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_ce1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_we1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_scale_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_scale_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_ce1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_1_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_1_ce1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_2_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_2_ce1 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_3_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_3_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_3_ce1 : STD_LOGIC;
    signal grp_squash_Pipeline_6_fu_199_ap_start : STD_LOGIC;
    signal grp_squash_Pipeline_6_fu_199_ap_done : STD_LOGIC;
    signal grp_squash_Pipeline_6_fu_199_ap_idle : STD_LOGIC;
    signal grp_squash_Pipeline_6_fu_199_ap_ready : STD_LOGIC;
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWVALID : STD_LOGIC;
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WVALID : STD_LOGIC;
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WLAST : STD_LOGIC;
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARVALID : STD_LOGIC;
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_RREADY : STD_LOGIC;
    signal grp_squash_Pipeline_6_fu_199_m_axi_gmem3_BREADY : STD_LOGIC;
    signal grp_squash_Pipeline_6_fu_199_output_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_6_fu_199_output_buffer_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_6_fu_199_output_buffer_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_6_fu_199_output_buffer_1_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_6_fu_199_output_buffer_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_6_fu_199_output_buffer_2_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_6_fu_199_output_buffer_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_squash_Pipeline_6_fu_199_output_buffer_3_ce0 : STD_LOGIC;
    signal grp_squash_Pipeline_1_fu_149_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_squash_Pipeline_2_fu_154_ap_start_reg : STD_LOGIC := '0';
    signal grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_squash_Pipeline_6_fu_199_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal sext_ln303_fu_230_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal squared_norm_we0_local : STD_LOGIC;
    signal squared_norm_ce0_local : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (78 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component process_features_squash_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        squared_norm_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        squared_norm_ce0 : OUT STD_LOGIC;
        squared_norm_we0 : OUT STD_LOGIC;
        squared_norm_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_squash_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_buffer_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_3_ce0 : OUT STD_LOGIC;
        input_buffer_3_we0 : OUT STD_LOGIC;
        input_buffer_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_2_ce0 : OUT STD_LOGIC;
        input_buffer_2_we0 : OUT STD_LOGIC;
        input_buffer_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_1_ce0 : OUT STD_LOGIC;
        input_buffer_1_we0 : OUT STD_LOGIC;
        input_buffer_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_ce0 : OUT STD_LOGIC;
        input_buffer_we0 : OUT STD_LOGIC;
        input_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        squared_input_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        squared_input_3_ce0 : OUT STD_LOGIC;
        squared_input_3_we0 : OUT STD_LOGIC;
        squared_input_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        squared_input_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        squared_input_2_ce0 : OUT STD_LOGIC;
        squared_input_2_we0 : OUT STD_LOGIC;
        squared_input_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        squared_input_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        squared_input_1_ce0 : OUT STD_LOGIC;
        squared_input_1_we0 : OUT STD_LOGIC;
        squared_input_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        squared_input_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        squared_input_ce0 : OUT STD_LOGIC;
        squared_input_we0 : OUT STD_LOGIC;
        squared_input_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_ce0 : OUT STD_LOGIC;
        input_buffer_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_1_ce0 : OUT STD_LOGIC;
        input_buffer_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_2_ce0 : OUT STD_LOGIC;
        input_buffer_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_3_ce0 : OUT STD_LOGIC;
        input_buffer_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_squash_Pipeline_VITIS_LOOP_282_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        squared_norm_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        squared_norm_ce0 : OUT STD_LOGIC;
        squared_norm_we0 : OUT STD_LOGIC;
        squared_norm_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        squared_norm_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        squared_norm_ce1 : OUT STD_LOGIC;
        squared_norm_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        squared_input_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        squared_input_ce0 : OUT STD_LOGIC;
        squared_input_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        squared_input_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        squared_input_ce1 : OUT STD_LOGIC;
        squared_input_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        squared_input_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        squared_input_1_ce0 : OUT STD_LOGIC;
        squared_input_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        squared_input_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        squared_input_1_ce1 : OUT STD_LOGIC;
        squared_input_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        squared_input_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        squared_input_2_ce0 : OUT STD_LOGIC;
        squared_input_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        squared_input_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        squared_input_2_ce1 : OUT STD_LOGIC;
        squared_input_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        squared_input_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        squared_input_3_ce0 : OUT STD_LOGIC;
        squared_input_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        squared_input_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        squared_input_3_ce1 : OUT STD_LOGIC;
        squared_input_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        scale_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        scale_ce0 : OUT STD_LOGIC;
        scale_we0 : OUT STD_LOGIC;
        scale_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_squash_Pipeline_VITIS_LOOP_294_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_buffer_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_buffer_3_ce0 : OUT STD_LOGIC;
        output_buffer_3_we0 : OUT STD_LOGIC;
        output_buffer_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_buffer_3_ce1 : OUT STD_LOGIC;
        output_buffer_3_we1 : OUT STD_LOGIC;
        output_buffer_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_buffer_2_ce0 : OUT STD_LOGIC;
        output_buffer_2_we0 : OUT STD_LOGIC;
        output_buffer_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_buffer_2_ce1 : OUT STD_LOGIC;
        output_buffer_2_we1 : OUT STD_LOGIC;
        output_buffer_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_buffer_1_ce0 : OUT STD_LOGIC;
        output_buffer_1_we0 : OUT STD_LOGIC;
        output_buffer_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_buffer_1_ce1 : OUT STD_LOGIC;
        output_buffer_1_we1 : OUT STD_LOGIC;
        output_buffer_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_buffer_ce0 : OUT STD_LOGIC;
        output_buffer_we0 : OUT STD_LOGIC;
        output_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_buffer_ce1 : OUT STD_LOGIC;
        output_buffer_we1 : OUT STD_LOGIC;
        output_buffer_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        scale_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        scale_ce0 : OUT STD_LOGIC;
        scale_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_ce0 : OUT STD_LOGIC;
        input_buffer_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_ce1 : OUT STD_LOGIC;
        input_buffer_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_1_ce0 : OUT STD_LOGIC;
        input_buffer_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_1_ce1 : OUT STD_LOGIC;
        input_buffer_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_2_ce0 : OUT STD_LOGIC;
        input_buffer_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_2_ce1 : OUT STD_LOGIC;
        input_buffer_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_3_ce0 : OUT STD_LOGIC;
        input_buffer_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_3_ce1 : OUT STD_LOGIC;
        input_buffer_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_squash_Pipeline_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem3_AWVALID : OUT STD_LOGIC;
        m_axi_gmem3_AWREADY : IN STD_LOGIC;
        m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WVALID : OUT STD_LOGIC;
        m_axi_gmem3_WREADY : IN STD_LOGIC;
        m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_WLAST : OUT STD_LOGIC;
        m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARVALID : OUT STD_LOGIC;
        m_axi_gmem3_ARREADY : IN STD_LOGIC;
        m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RVALID : IN STD_LOGIC;
        m_axi_gmem3_RREADY : OUT STD_LOGIC;
        m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem3_RLAST : IN STD_LOGIC;
        m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BVALID : IN STD_LOGIC;
        m_axi_gmem3_BREADY : OUT STD_LOGIC;
        m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln303 : IN STD_LOGIC_VECTOR (57 downto 0);
        output_buffer_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_buffer_ce0 : OUT STD_LOGIC;
        output_buffer_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_buffer_1_ce0 : OUT STD_LOGIC;
        output_buffer_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_buffer_2_ce0 : OUT STD_LOGIC;
        output_buffer_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_buffer_3_ce0 : OUT STD_LOGIC;
        output_buffer_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_squash_input_buffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_squash_output_buffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_squash_squared_norm_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_squash_scale_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    input_buffer_U : component process_features_squash_input_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buffer_address0,
        ce0 => input_buffer_ce0,
        we0 => input_buffer_we0,
        d0 => grp_squash_Pipeline_2_fu_154_input_buffer_d0,
        q0 => input_buffer_q0,
        address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_address1,
        ce1 => input_buffer_ce1,
        q1 => input_buffer_q1);

    input_buffer_1_U : component process_features_squash_input_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buffer_1_address0,
        ce0 => input_buffer_1_ce0,
        we0 => input_buffer_1_we0,
        d0 => grp_squash_Pipeline_2_fu_154_input_buffer_1_d0,
        q0 => input_buffer_1_q0,
        address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_1_address1,
        ce1 => input_buffer_1_ce1,
        q1 => input_buffer_1_q1);

    input_buffer_2_U : component process_features_squash_input_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buffer_2_address0,
        ce0 => input_buffer_2_ce0,
        we0 => input_buffer_2_we0,
        d0 => grp_squash_Pipeline_2_fu_154_input_buffer_2_d0,
        q0 => input_buffer_2_q0,
        address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_2_address1,
        ce1 => input_buffer_2_ce1,
        q1 => input_buffer_2_q1);

    input_buffer_3_U : component process_features_squash_input_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buffer_3_address0,
        ce0 => input_buffer_3_ce0,
        we0 => input_buffer_3_we0,
        d0 => grp_squash_Pipeline_2_fu_154_input_buffer_3_d0,
        q0 => input_buffer_3_q0,
        address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_3_address1,
        ce1 => input_buffer_3_ce1,
        q1 => input_buffer_3_q1);

    output_buffer_U : component process_features_squash_output_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_buffer_address0,
        ce0 => output_buffer_ce0,
        we0 => output_buffer_we0,
        d0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_d0,
        q0 => output_buffer_q0,
        address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_address1,
        ce1 => output_buffer_ce1,
        we1 => output_buffer_we1,
        d1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_d1);

    output_buffer_1_U : component process_features_squash_output_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_buffer_1_address0,
        ce0 => output_buffer_1_ce0,
        we0 => output_buffer_1_we0,
        d0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_d0,
        q0 => output_buffer_1_q0,
        address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_address1,
        ce1 => output_buffer_1_ce1,
        we1 => output_buffer_1_we1,
        d1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_d1);

    output_buffer_2_U : component process_features_squash_output_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_buffer_2_address0,
        ce0 => output_buffer_2_ce0,
        we0 => output_buffer_2_we0,
        d0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_d0,
        q0 => output_buffer_2_q0,
        address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_address1,
        ce1 => output_buffer_2_ce1,
        we1 => output_buffer_2_we1,
        d1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_d1);

    output_buffer_3_U : component process_features_squash_output_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_buffer_3_address0,
        ce0 => output_buffer_3_ce0,
        we0 => output_buffer_3_we0,
        d0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_d0,
        q0 => output_buffer_3_q0,
        address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_address1,
        ce1 => output_buffer_3_ce1,
        we1 => output_buffer_3_we1,
        d1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_d1);

    squared_input_U : component process_features_squash_input_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => squared_input_address0,
        ce0 => squared_input_ce0,
        we0 => squared_input_we0,
        d0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_d0,
        q0 => squared_input_q0,
        address1 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_address1,
        ce1 => squared_input_ce1,
        q1 => squared_input_q1);

    squared_input_1_U : component process_features_squash_input_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => squared_input_1_address0,
        ce0 => squared_input_1_ce0,
        we0 => squared_input_1_we0,
        d0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_1_d0,
        q0 => squared_input_1_q0,
        address1 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_1_address1,
        ce1 => squared_input_1_ce1,
        q1 => squared_input_1_q1);

    squared_input_2_U : component process_features_squash_input_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => squared_input_2_address0,
        ce0 => squared_input_2_ce0,
        we0 => squared_input_2_we0,
        d0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_2_d0,
        q0 => squared_input_2_q0,
        address1 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_2_address1,
        ce1 => squared_input_2_ce1,
        q1 => squared_input_2_q1);

    squared_input_3_U : component process_features_squash_input_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => squared_input_3_address0,
        ce0 => squared_input_3_ce0,
        we0 => squared_input_3_we0,
        d0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_3_d0,
        q0 => squared_input_3_q0,
        address1 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_3_address1,
        ce1 => squared_input_3_ce1,
        q1 => squared_input_3_q1);

    squared_norm_U : component process_features_squash_squared_norm_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1152,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => squared_norm_address0,
        ce0 => squared_norm_ce0,
        we0 => squared_norm_we0,
        d0 => squared_norm_d0,
        address1 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_address1,
        ce1 => squared_norm_ce1,
        q1 => squared_norm_q1);

    scale_U : component process_features_squash_scale_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1152,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => scale_address0,
        ce0 => scale_ce0,
        we0 => scale_we0,
        d0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_scale_d0,
        q0 => scale_q0);

    grp_squash_Pipeline_1_fu_149 : component process_features_squash_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_squash_Pipeline_1_fu_149_ap_start,
        ap_done => grp_squash_Pipeline_1_fu_149_ap_done,
        ap_idle => grp_squash_Pipeline_1_fu_149_ap_idle,
        ap_ready => grp_squash_Pipeline_1_fu_149_ap_ready,
        squared_norm_address0 => grp_squash_Pipeline_1_fu_149_squared_norm_address0,
        squared_norm_ce0 => grp_squash_Pipeline_1_fu_149_squared_norm_ce0,
        squared_norm_we0 => grp_squash_Pipeline_1_fu_149_squared_norm_we0,
        squared_norm_d0 => grp_squash_Pipeline_1_fu_149_squared_norm_d0);

    grp_squash_Pipeline_2_fu_154 : component process_features_squash_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_squash_Pipeline_2_fu_154_ap_start,
        ap_done => grp_squash_Pipeline_2_fu_154_ap_done,
        ap_idle => grp_squash_Pipeline_2_fu_154_ap_idle,
        ap_ready => grp_squash_Pipeline_2_fu_154_ap_ready,
        input_buffer_3_address0 => grp_squash_Pipeline_2_fu_154_input_buffer_3_address0,
        input_buffer_3_ce0 => grp_squash_Pipeline_2_fu_154_input_buffer_3_ce0,
        input_buffer_3_we0 => grp_squash_Pipeline_2_fu_154_input_buffer_3_we0,
        input_buffer_3_d0 => grp_squash_Pipeline_2_fu_154_input_buffer_3_d0,
        input_buffer_2_address0 => grp_squash_Pipeline_2_fu_154_input_buffer_2_address0,
        input_buffer_2_ce0 => grp_squash_Pipeline_2_fu_154_input_buffer_2_ce0,
        input_buffer_2_we0 => grp_squash_Pipeline_2_fu_154_input_buffer_2_we0,
        input_buffer_2_d0 => grp_squash_Pipeline_2_fu_154_input_buffer_2_d0,
        input_buffer_1_address0 => grp_squash_Pipeline_2_fu_154_input_buffer_1_address0,
        input_buffer_1_ce0 => grp_squash_Pipeline_2_fu_154_input_buffer_1_ce0,
        input_buffer_1_we0 => grp_squash_Pipeline_2_fu_154_input_buffer_1_we0,
        input_buffer_1_d0 => grp_squash_Pipeline_2_fu_154_input_buffer_1_d0,
        input_buffer_address0 => grp_squash_Pipeline_2_fu_154_input_buffer_address0,
        input_buffer_ce0 => grp_squash_Pipeline_2_fu_154_input_buffer_ce0,
        input_buffer_we0 => grp_squash_Pipeline_2_fu_154_input_buffer_we0,
        input_buffer_d0 => grp_squash_Pipeline_2_fu_154_input_buffer_d0,
        input_r_address0 => grp_squash_Pipeline_2_fu_154_input_r_address0,
        input_r_ce0 => grp_squash_Pipeline_2_fu_154_input_r_ce0,
        input_r_q0 => input_r_q0);

    grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164 : component process_features_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_start,
        ap_done => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_done,
        ap_idle => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_idle,
        ap_ready => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_ready,
        squared_input_3_address0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_3_address0,
        squared_input_3_ce0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_3_ce0,
        squared_input_3_we0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_3_we0,
        squared_input_3_d0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_3_d0,
        squared_input_2_address0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_2_address0,
        squared_input_2_ce0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_2_ce0,
        squared_input_2_we0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_2_we0,
        squared_input_2_d0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_2_d0,
        squared_input_1_address0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_1_address0,
        squared_input_1_ce0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_1_ce0,
        squared_input_1_we0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_1_we0,
        squared_input_1_d0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_1_d0,
        squared_input_address0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_address0,
        squared_input_ce0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_ce0,
        squared_input_we0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_we0,
        squared_input_d0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_d0,
        input_buffer_address0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_address0,
        input_buffer_ce0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_ce0,
        input_buffer_q0 => input_buffer_q0,
        input_buffer_1_address0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_1_address0,
        input_buffer_1_ce0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_1_ce0,
        input_buffer_1_q0 => input_buffer_1_q0,
        input_buffer_2_address0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_2_address0,
        input_buffer_2_ce0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_2_ce0,
        input_buffer_2_q0 => input_buffer_2_q0,
        input_buffer_3_address0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_3_address0,
        input_buffer_3_ce0 => grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_3_ce0,
        input_buffer_3_q0 => input_buffer_3_q0);

    grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176 : component process_features_squash_Pipeline_VITIS_LOOP_282_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_start,
        ap_done => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_done,
        ap_idle => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_idle,
        ap_ready => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_ready,
        squared_norm_address0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_address0,
        squared_norm_ce0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_ce0,
        squared_norm_we0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_we0,
        squared_norm_d0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_d0,
        squared_norm_address1 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_address1,
        squared_norm_ce1 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_ce1,
        squared_norm_q1 => squared_norm_q1,
        squared_input_address0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_address0,
        squared_input_ce0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_ce0,
        squared_input_q0 => squared_input_q0,
        squared_input_address1 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_address1,
        squared_input_ce1 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_ce1,
        squared_input_q1 => squared_input_q1,
        squared_input_1_address0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_1_address0,
        squared_input_1_ce0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_1_ce0,
        squared_input_1_q0 => squared_input_1_q0,
        squared_input_1_address1 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_1_address1,
        squared_input_1_ce1 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_1_ce1,
        squared_input_1_q1 => squared_input_1_q1,
        squared_input_2_address0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_2_address0,
        squared_input_2_ce0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_2_ce0,
        squared_input_2_q0 => squared_input_2_q0,
        squared_input_2_address1 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_2_address1,
        squared_input_2_ce1 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_2_ce1,
        squared_input_2_q1 => squared_input_2_q1,
        squared_input_3_address0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_3_address0,
        squared_input_3_ce0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_3_ce0,
        squared_input_3_q0 => squared_input_3_q0,
        squared_input_3_address1 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_3_address1,
        squared_input_3_ce1 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_3_ce1,
        squared_input_3_q1 => squared_input_3_q1,
        scale_address0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_scale_address0,
        scale_ce0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_scale_ce0,
        scale_we0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_scale_we0,
        scale_d0 => grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_scale_d0);

    grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186 : component process_features_squash_Pipeline_VITIS_LOOP_294_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_start,
        ap_done => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_done,
        ap_idle => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_idle,
        ap_ready => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_ready,
        output_buffer_3_address0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_address0,
        output_buffer_3_ce0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_ce0,
        output_buffer_3_we0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_we0,
        output_buffer_3_d0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_d0,
        output_buffer_3_address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_address1,
        output_buffer_3_ce1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_ce1,
        output_buffer_3_we1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_we1,
        output_buffer_3_d1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_d1,
        output_buffer_2_address0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_address0,
        output_buffer_2_ce0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_ce0,
        output_buffer_2_we0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_we0,
        output_buffer_2_d0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_d0,
        output_buffer_2_address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_address1,
        output_buffer_2_ce1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_ce1,
        output_buffer_2_we1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_we1,
        output_buffer_2_d1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_d1,
        output_buffer_1_address0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_address0,
        output_buffer_1_ce0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_ce0,
        output_buffer_1_we0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_we0,
        output_buffer_1_d0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_d0,
        output_buffer_1_address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_address1,
        output_buffer_1_ce1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_ce1,
        output_buffer_1_we1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_we1,
        output_buffer_1_d1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_d1,
        output_buffer_address0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_address0,
        output_buffer_ce0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_ce0,
        output_buffer_we0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_we0,
        output_buffer_d0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_d0,
        output_buffer_address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_address1,
        output_buffer_ce1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_ce1,
        output_buffer_we1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_we1,
        output_buffer_d1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_d1,
        scale_address0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_scale_address0,
        scale_ce0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_scale_ce0,
        scale_q0 => scale_q0,
        input_buffer_address0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_address0,
        input_buffer_ce0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_ce0,
        input_buffer_q0 => input_buffer_q0,
        input_buffer_address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_address1,
        input_buffer_ce1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_ce1,
        input_buffer_q1 => input_buffer_q1,
        input_buffer_1_address0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_1_address0,
        input_buffer_1_ce0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_1_ce0,
        input_buffer_1_q0 => input_buffer_1_q0,
        input_buffer_1_address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_1_address1,
        input_buffer_1_ce1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_1_ce1,
        input_buffer_1_q1 => input_buffer_1_q1,
        input_buffer_2_address0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_2_address0,
        input_buffer_2_ce0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_2_ce0,
        input_buffer_2_q0 => input_buffer_2_q0,
        input_buffer_2_address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_2_address1,
        input_buffer_2_ce1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_2_ce1,
        input_buffer_2_q1 => input_buffer_2_q1,
        input_buffer_3_address0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_3_address0,
        input_buffer_3_ce0 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_3_ce0,
        input_buffer_3_q0 => input_buffer_3_q0,
        input_buffer_3_address1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_3_address1,
        input_buffer_3_ce1 => grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_3_ce1,
        input_buffer_3_q1 => input_buffer_3_q1);

    grp_squash_Pipeline_6_fu_199 : component process_features_squash_Pipeline_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_squash_Pipeline_6_fu_199_ap_start,
        ap_done => grp_squash_Pipeline_6_fu_199_ap_done,
        ap_idle => grp_squash_Pipeline_6_fu_199_ap_idle,
        ap_ready => grp_squash_Pipeline_6_fu_199_ap_ready,
        m_axi_gmem3_AWVALID => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY => m_axi_gmem3_AWREADY,
        m_axi_gmem3_AWADDR => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY => m_axi_gmem3_WREADY,
        m_axi_gmem3_WDATA => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WLAST,
        m_axi_gmem3_WID => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WID,
        m_axi_gmem3_WUSER => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY => ap_const_logic_0,
        m_axi_gmem3_ARADDR => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID => ap_const_logic_0,
        m_axi_gmem3_RREADY => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA => ap_const_lv512_lc_1,
        m_axi_gmem3_RLAST => ap_const_logic_0,
        m_axi_gmem3_RID => ap_const_lv1_0,
        m_axi_gmem3_RFIFONUM => ap_const_lv13_0,
        m_axi_gmem3_RUSER => ap_const_lv1_0,
        m_axi_gmem3_RRESP => ap_const_lv2_0,
        m_axi_gmem3_BVALID => m_axi_gmem3_BVALID,
        m_axi_gmem3_BREADY => grp_squash_Pipeline_6_fu_199_m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP => m_axi_gmem3_BRESP,
        m_axi_gmem3_BID => m_axi_gmem3_BID,
        m_axi_gmem3_BUSER => m_axi_gmem3_BUSER,
        sext_ln303 => trunc_ln2_reg_241,
        output_buffer_address0 => grp_squash_Pipeline_6_fu_199_output_buffer_address0,
        output_buffer_ce0 => grp_squash_Pipeline_6_fu_199_output_buffer_ce0,
        output_buffer_q0 => output_buffer_q0,
        output_buffer_1_address0 => grp_squash_Pipeline_6_fu_199_output_buffer_1_address0,
        output_buffer_1_ce0 => grp_squash_Pipeline_6_fu_199_output_buffer_1_ce0,
        output_buffer_1_q0 => output_buffer_1_q0,
        output_buffer_2_address0 => grp_squash_Pipeline_6_fu_199_output_buffer_2_address0,
        output_buffer_2_ce0 => grp_squash_Pipeline_6_fu_199_output_buffer_2_ce0,
        output_buffer_2_q0 => output_buffer_2_q0,
        output_buffer_3_address0 => grp_squash_Pipeline_6_fu_199_output_buffer_3_address0,
        output_buffer_3_ce0 => grp_squash_Pipeline_6_fu_199_output_buffer_3_ce0,
        output_buffer_3_q0 => output_buffer_3_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_squash_Pipeline_1_fu_149_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_squash_Pipeline_1_fu_149_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_squash_Pipeline_1_fu_149_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_squash_Pipeline_1_fu_149_ap_ready = ap_const_logic_1)) then 
                    grp_squash_Pipeline_1_fu_149_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_squash_Pipeline_2_fu_154_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_squash_Pipeline_2_fu_154_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_squash_Pipeline_2_fu_154_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_squash_Pipeline_2_fu_154_ap_ready = ap_const_logic_1)) then 
                    grp_squash_Pipeline_2_fu_154_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_squash_Pipeline_6_fu_199_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_squash_Pipeline_6_fu_199_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_squash_Pipeline_6_fu_199_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_squash_Pipeline_6_fu_199_ap_ready = ap_const_logic_1)) then 
                    grp_squash_Pipeline_6_fu_199_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_ready = ap_const_logic_1)) then 
                    grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_ready = ap_const_logic_1)) then 
                    grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_ready = ap_const_logic_1)) then 
                    grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                trunc_ln2_reg_241 <= output_r(63 downto 6);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_gmem3_AWREADY, m_axi_gmem3_BVALID, ap_CS_fsm_state9, ap_CS_fsm_state79, grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_done, grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_done, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_done, grp_squash_Pipeline_6_fu_199_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_block_state3_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if ((not(((grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_done = ap_const_logic_0) or (m_axi_gmem3_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((grp_squash_Pipeline_6_fu_199_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state79) and (m_axi_gmem3_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_squash_Pipeline_6_fu_199_ap_done)
    begin
        if ((grp_squash_Pipeline_6_fu_199_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state3_on_subcall_done)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_done)
    begin
        if ((grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;

    ap_ST_fsm_state79_blk_assign_proc : process(m_axi_gmem3_BVALID)
    begin
        if ((m_axi_gmem3_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state79_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state79_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_done)
    begin
        if ((grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(m_axi_gmem3_AWREADY, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_done)
    begin
        if (((grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_done = ap_const_logic_0) or (m_axi_gmem3_AWREADY = ap_const_logic_0))) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state3_on_subcall_done_assign_proc : process(grp_squash_Pipeline_1_fu_149_ap_done, grp_squash_Pipeline_2_fu_154_ap_done)
    begin
                ap_block_state3_on_subcall_done <= ((grp_squash_Pipeline_2_fu_154_ap_done = ap_const_logic_0) or (grp_squash_Pipeline_1_fu_149_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, m_axi_gmem3_BVALID, ap_CS_fsm_state79)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state79) and (m_axi_gmem3_BVALID = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(m_axi_gmem3_BVALID, ap_CS_fsm_state79)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state79) and (m_axi_gmem3_BVALID = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    gmem3_blk_n_AW_assign_proc : process(m_axi_gmem3_AWREADY, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            gmem3_blk_n_AW <= m_axi_gmem3_AWREADY;
        else 
            gmem3_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem3_blk_n_B_assign_proc : process(m_axi_gmem3_BVALID, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            gmem3_blk_n_B <= m_axi_gmem3_BVALID;
        else 
            gmem3_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;

    grp_squash_Pipeline_1_fu_149_ap_start <= grp_squash_Pipeline_1_fu_149_ap_start_reg;
    grp_squash_Pipeline_2_fu_154_ap_start <= grp_squash_Pipeline_2_fu_154_ap_start_reg;
    grp_squash_Pipeline_6_fu_199_ap_start <= grp_squash_Pipeline_6_fu_199_ap_start_reg;
    grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_start <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_ap_start_reg;
    grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_start <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_ap_start_reg;
    grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_start <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_start_reg;

    input_buffer_1_address0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_2_fu_154_input_buffer_1_address0, grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_1_address0, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_buffer_1_address0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_buffer_1_address0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buffer_1_address0 <= grp_squash_Pipeline_2_fu_154_input_buffer_1_address0;
        else 
            input_buffer_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_1_ce0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_2_fu_154_input_buffer_1_ce0, grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_1_ce0, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_buffer_1_ce0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_buffer_1_ce0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buffer_1_ce0 <= grp_squash_Pipeline_2_fu_154_input_buffer_1_ce0;
        else 
            input_buffer_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_1_ce1_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_buffer_1_ce1 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_1_ce1;
        else 
            input_buffer_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_1_we0_assign_proc : process(grp_squash_Pipeline_2_fu_154_input_buffer_1_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buffer_1_we0 <= grp_squash_Pipeline_2_fu_154_input_buffer_1_we0;
        else 
            input_buffer_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_2_address0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_2_fu_154_input_buffer_2_address0, grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_2_address0, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_buffer_2_address0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_buffer_2_address0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buffer_2_address0 <= grp_squash_Pipeline_2_fu_154_input_buffer_2_address0;
        else 
            input_buffer_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_2_ce0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_2_fu_154_input_buffer_2_ce0, grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_2_ce0, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_buffer_2_ce0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_buffer_2_ce0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buffer_2_ce0 <= grp_squash_Pipeline_2_fu_154_input_buffer_2_ce0;
        else 
            input_buffer_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_2_ce1_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_buffer_2_ce1 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_2_ce1;
        else 
            input_buffer_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_2_we0_assign_proc : process(grp_squash_Pipeline_2_fu_154_input_buffer_2_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buffer_2_we0 <= grp_squash_Pipeline_2_fu_154_input_buffer_2_we0;
        else 
            input_buffer_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_3_address0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_2_fu_154_input_buffer_3_address0, grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_3_address0, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_buffer_3_address0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_buffer_3_address0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buffer_3_address0 <= grp_squash_Pipeline_2_fu_154_input_buffer_3_address0;
        else 
            input_buffer_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_3_ce0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_2_fu_154_input_buffer_3_ce0, grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_3_ce0, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_buffer_3_ce0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_buffer_3_ce0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buffer_3_ce0 <= grp_squash_Pipeline_2_fu_154_input_buffer_3_ce0;
        else 
            input_buffer_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_3_ce1_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_buffer_3_ce1 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_3_ce1;
        else 
            input_buffer_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_3_we0_assign_proc : process(grp_squash_Pipeline_2_fu_154_input_buffer_3_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buffer_3_we0 <= grp_squash_Pipeline_2_fu_154_input_buffer_3_we0;
        else 
            input_buffer_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_address0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_2_fu_154_input_buffer_address0, grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_address0, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_address0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_buffer_address0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_buffer_address0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buffer_address0 <= grp_squash_Pipeline_2_fu_154_input_buffer_address0;
        else 
            input_buffer_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_ce0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_2_fu_154_input_buffer_ce0, grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_ce0, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_buffer_ce0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_buffer_ce0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_input_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buffer_ce0 <= grp_squash_Pipeline_2_fu_154_input_buffer_ce0;
        else 
            input_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_ce1_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_buffer_ce1 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_input_buffer_ce1;
        else 
            input_buffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_we0_assign_proc : process(grp_squash_Pipeline_2_fu_154_input_buffer_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buffer_we0 <= grp_squash_Pipeline_2_fu_154_input_buffer_we0;
        else 
            input_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    input_r_address0 <= grp_squash_Pipeline_2_fu_154_input_r_address0;
    input_r_ce0 <= grp_squash_Pipeline_2_fu_154_input_r_ce0;
    m_axi_gmem3_ARADDR <= ap_const_lv64_0;
    m_axi_gmem3_ARBURST <= ap_const_lv2_0;
    m_axi_gmem3_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem3_ARID <= ap_const_lv1_0;
    m_axi_gmem3_ARLEN <= ap_const_lv32_0;
    m_axi_gmem3_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem3_ARPROT <= ap_const_lv3_0;
    m_axi_gmem3_ARQOS <= ap_const_lv4_0;
    m_axi_gmem3_ARREGION <= ap_const_lv4_0;
    m_axi_gmem3_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem3_ARUSER <= ap_const_lv1_0;
    m_axi_gmem3_ARVALID <= ap_const_logic_0;

    m_axi_gmem3_AWADDR_assign_proc : process(m_axi_gmem3_AWREADY, ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_done, grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWADDR, ap_CS_fsm_state10, ap_CS_fsm_state11, sext_ln303_fu_230_p1)
    begin
        if ((not(((grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_done = ap_const_logic_0) or (m_axi_gmem3_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_gmem3_AWADDR <= sext_ln303_fu_230_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_gmem3_AWADDR <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWADDR;
        else 
            m_axi_gmem3_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem3_AWBURST_assign_proc : process(grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWBURST, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_gmem3_AWBURST <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWBURST;
        else 
            m_axi_gmem3_AWBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem3_AWCACHE_assign_proc : process(grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWCACHE, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_gmem3_AWCACHE <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWCACHE;
        else 
            m_axi_gmem3_AWCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem3_AWID_assign_proc : process(grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWID, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_gmem3_AWID <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWID;
        else 
            m_axi_gmem3_AWID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem3_AWLEN_assign_proc : process(m_axi_gmem3_AWREADY, ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_done, grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWLEN, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((not(((grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_done = ap_const_logic_0) or (m_axi_gmem3_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_gmem3_AWLEN <= ap_const_lv64_240(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_gmem3_AWLEN <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWLEN;
        else 
            m_axi_gmem3_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem3_AWLOCK_assign_proc : process(grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWLOCK, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_gmem3_AWLOCK <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWLOCK;
        else 
            m_axi_gmem3_AWLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem3_AWPROT_assign_proc : process(grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWPROT, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_gmem3_AWPROT <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWPROT;
        else 
            m_axi_gmem3_AWPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem3_AWQOS_assign_proc : process(grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWQOS, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_gmem3_AWQOS <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWQOS;
        else 
            m_axi_gmem3_AWQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem3_AWREGION_assign_proc : process(grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWREGION, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_gmem3_AWREGION <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWREGION;
        else 
            m_axi_gmem3_AWREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem3_AWSIZE_assign_proc : process(grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWSIZE, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_gmem3_AWSIZE <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWSIZE;
        else 
            m_axi_gmem3_AWSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem3_AWUSER_assign_proc : process(grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWUSER, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_gmem3_AWUSER <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWUSER;
        else 
            m_axi_gmem3_AWUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem3_AWVALID_assign_proc : process(m_axi_gmem3_AWREADY, ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_done, grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWVALID, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((not(((grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_ap_done = ap_const_logic_0) or (m_axi_gmem3_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_gmem3_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_gmem3_AWVALID <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_AWVALID;
        else 
            m_axi_gmem3_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem3_BREADY_assign_proc : process(m_axi_gmem3_BVALID, ap_CS_fsm_state79, grp_squash_Pipeline_6_fu_199_m_axi_gmem3_BREADY, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state79) and (m_axi_gmem3_BVALID = ap_const_logic_1))) then 
            m_axi_gmem3_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_gmem3_BREADY <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_BREADY;
        else 
            m_axi_gmem3_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem3_RREADY <= ap_const_logic_0;
    m_axi_gmem3_WDATA <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WDATA;
    m_axi_gmem3_WID <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WID;
    m_axi_gmem3_WLAST <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WLAST;
    m_axi_gmem3_WSTRB <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WSTRB;
    m_axi_gmem3_WUSER <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WUSER;

    m_axi_gmem3_WVALID_assign_proc : process(grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WVALID, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_gmem3_WVALID <= grp_squash_Pipeline_6_fu_199_m_axi_gmem3_WVALID;
        else 
            m_axi_gmem3_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_1_address0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_address0, grp_squash_Pipeline_6_fu_199_output_buffer_1_address0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_buffer_1_address0 <= grp_squash_Pipeline_6_fu_199_output_buffer_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_1_address0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_address0;
        else 
            output_buffer_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    output_buffer_1_ce0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_ce0, grp_squash_Pipeline_6_fu_199_output_buffer_1_ce0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_buffer_1_ce0 <= grp_squash_Pipeline_6_fu_199_output_buffer_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_1_ce0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_ce0;
        else 
            output_buffer_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_1_ce1_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_1_ce1 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_ce1;
        else 
            output_buffer_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_1_we0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_1_we0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_we0;
        else 
            output_buffer_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_1_we1_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_1_we1 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_1_we1;
        else 
            output_buffer_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_2_address0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_address0, grp_squash_Pipeline_6_fu_199_output_buffer_2_address0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_buffer_2_address0 <= grp_squash_Pipeline_6_fu_199_output_buffer_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_2_address0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_address0;
        else 
            output_buffer_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    output_buffer_2_ce0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_ce0, grp_squash_Pipeline_6_fu_199_output_buffer_2_ce0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_buffer_2_ce0 <= grp_squash_Pipeline_6_fu_199_output_buffer_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_2_ce0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_ce0;
        else 
            output_buffer_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_2_ce1_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_2_ce1 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_ce1;
        else 
            output_buffer_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_2_we0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_2_we0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_we0;
        else 
            output_buffer_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_2_we1_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_2_we1 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_2_we1;
        else 
            output_buffer_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_3_address0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_address0, grp_squash_Pipeline_6_fu_199_output_buffer_3_address0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_buffer_3_address0 <= grp_squash_Pipeline_6_fu_199_output_buffer_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_3_address0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_address0;
        else 
            output_buffer_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    output_buffer_3_ce0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_ce0, grp_squash_Pipeline_6_fu_199_output_buffer_3_ce0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_buffer_3_ce0 <= grp_squash_Pipeline_6_fu_199_output_buffer_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_3_ce0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_ce0;
        else 
            output_buffer_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_3_ce1_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_3_ce1 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_ce1;
        else 
            output_buffer_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_3_we0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_3_we0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_we0;
        else 
            output_buffer_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_3_we1_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_3_we1 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_3_we1;
        else 
            output_buffer_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_address0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_address0, grp_squash_Pipeline_6_fu_199_output_buffer_address0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_buffer_address0 <= grp_squash_Pipeline_6_fu_199_output_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_address0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_address0;
        else 
            output_buffer_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    output_buffer_ce0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_ce0, grp_squash_Pipeline_6_fu_199_output_buffer_ce0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_buffer_ce0 <= grp_squash_Pipeline_6_fu_199_output_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_ce0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_ce0;
        else 
            output_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_ce1_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_ce1 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_ce1;
        else 
            output_buffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_we0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_we0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_we0;
        else 
            output_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_we1_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_buffer_we1 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_output_buffer_we1;
        else 
            output_buffer_we1 <= ap_const_logic_0;
        end if; 
    end process;


    scale_address0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_scale_address0, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_scale_address0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            scale_address0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_scale_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            scale_address0 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_scale_address0;
        else 
            scale_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    scale_ce0_assign_proc : process(ap_CS_fsm_state9, grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_scale_ce0, grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_scale_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            scale_ce0 <= grp_squash_Pipeline_VITIS_LOOP_294_5_fu_186_scale_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            scale_ce0 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_scale_ce0;
        else 
            scale_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    scale_we0_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_scale_we0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            scale_we0 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_scale_we0;
        else 
            scale_we0 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln303_fu_230_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_fu_220_p4),64));


    squared_input_1_address0_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_1_address0, grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_1_address0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_input_1_address0 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            squared_input_1_address0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_1_address0;
        else 
            squared_input_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    squared_input_1_ce0_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_1_ce0, grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_1_ce0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_input_1_ce0 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            squared_input_1_ce0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_1_ce0;
        else 
            squared_input_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    squared_input_1_ce1_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_1_ce1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_input_1_ce1 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_1_ce1;
        else 
            squared_input_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    squared_input_1_we0_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_1_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            squared_input_1_we0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_1_we0;
        else 
            squared_input_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    squared_input_2_address0_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_2_address0, grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_2_address0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_input_2_address0 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            squared_input_2_address0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_2_address0;
        else 
            squared_input_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    squared_input_2_ce0_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_2_ce0, grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_2_ce0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_input_2_ce0 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            squared_input_2_ce0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_2_ce0;
        else 
            squared_input_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    squared_input_2_ce1_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_2_ce1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_input_2_ce1 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_2_ce1;
        else 
            squared_input_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    squared_input_2_we0_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_2_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            squared_input_2_we0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_2_we0;
        else 
            squared_input_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    squared_input_3_address0_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_3_address0, grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_3_address0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_input_3_address0 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            squared_input_3_address0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_3_address0;
        else 
            squared_input_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    squared_input_3_ce0_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_3_ce0, grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_3_ce0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_input_3_ce0 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            squared_input_3_ce0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_3_ce0;
        else 
            squared_input_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    squared_input_3_ce1_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_3_ce1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_input_3_ce1 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_3_ce1;
        else 
            squared_input_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    squared_input_3_we0_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_3_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            squared_input_3_we0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_3_we0;
        else 
            squared_input_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    squared_input_address0_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_address0, grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_address0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_input_address0 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            squared_input_address0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_address0;
        else 
            squared_input_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    squared_input_ce0_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_ce0, grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_ce0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_input_ce0 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            squared_input_ce0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_ce0;
        else 
            squared_input_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    squared_input_ce1_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_ce1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_input_ce1 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_input_ce1;
        else 
            squared_input_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    squared_input_we0_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            squared_input_we0 <= grp_squash_Pipeline_VITIS_LOOP_272_1_VITIS_LOOP_274_2_fu_164_squared_input_we0;
        else 
            squared_input_we0 <= ap_const_logic_0;
        end if; 
    end process;


    squared_norm_address0_assign_proc : process(grp_squash_Pipeline_1_fu_149_squared_norm_address0, grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_address0, ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_norm_address0 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            squared_norm_address0 <= grp_squash_Pipeline_1_fu_149_squared_norm_address0;
        else 
            squared_norm_address0 <= ap_const_lv64_0(11 - 1 downto 0);
        end if; 
    end process;


    squared_norm_ce0_assign_proc : process(grp_squash_Pipeline_1_fu_149_squared_norm_ce0, grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_ce0, ap_CS_fsm_state3, ap_CS_fsm_state7, squared_norm_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_norm_ce0 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            squared_norm_ce0 <= grp_squash_Pipeline_1_fu_149_squared_norm_ce0;
        else 
            squared_norm_ce0 <= squared_norm_ce0_local;
        end if; 
    end process;


    squared_norm_ce0_local_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            squared_norm_ce0_local <= ap_const_logic_1;
        else 
            squared_norm_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    squared_norm_ce1_assign_proc : process(grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_ce1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_norm_ce1 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_ce1;
        else 
            squared_norm_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    squared_norm_d0_assign_proc : process(grp_squash_Pipeline_1_fu_149_squared_norm_d0, grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_d0, ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_norm_d0 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            squared_norm_d0 <= grp_squash_Pipeline_1_fu_149_squared_norm_d0;
        else 
            squared_norm_d0 <= ap_const_lv32_0;
        end if; 
    end process;


    squared_norm_we0_assign_proc : process(grp_squash_Pipeline_1_fu_149_squared_norm_we0, grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_we0, ap_CS_fsm_state3, ap_CS_fsm_state7, squared_norm_we0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            squared_norm_we0 <= grp_squash_Pipeline_VITIS_LOOP_282_3_fu_176_squared_norm_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            squared_norm_we0 <= grp_squash_Pipeline_1_fu_149_squared_norm_we0;
        else 
            squared_norm_we0 <= squared_norm_we0_local;
        end if; 
    end process;


    squared_norm_we0_local_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            squared_norm_we0_local <= ap_const_logic_1;
        else 
            squared_norm_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln2_fu_220_p4 <= output_r(63 downto 6);
end behav;
