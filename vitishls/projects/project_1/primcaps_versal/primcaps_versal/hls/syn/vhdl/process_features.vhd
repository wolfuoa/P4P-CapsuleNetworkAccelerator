-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity process_features is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM2_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM2_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM3_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM3_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM2_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM3_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM3_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM3_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_WUSER_WIDTH-1 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_RUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_BUSER_WIDTH-1 downto 0);
    m_axi_gmem3_AWVALID : OUT STD_LOGIC;
    m_axi_gmem3_AWREADY : IN STD_LOGIC;
    m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem3_WVALID : OUT STD_LOGIC;
    m_axi_gmem3_WREADY : IN STD_LOGIC;
    m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_DATA_WIDTH-1 downto 0);
    m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem3_WLAST : OUT STD_LOGIC;
    m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_WUSER_WIDTH-1 downto 0);
    m_axi_gmem3_ARVALID : OUT STD_LOGIC;
    m_axi_gmem3_ARREADY : IN STD_LOGIC;
    m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem3_RVALID : IN STD_LOGIC;
    m_axi_gmem3_RREADY : OUT STD_LOGIC;
    m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_DATA_WIDTH-1 downto 0);
    m_axi_gmem3_RLAST : IN STD_LOGIC;
    m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_RUSER_WIDTH-1 downto 0);
    m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BVALID : IN STD_LOGIC;
    m_axi_gmem3_BREADY : OUT STD_LOGIC;
    m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of process_features is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "process_features_process_features,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcve1752-nsvg1369-2LP-e-L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=14781270,HLS_SYN_TPT=none,HLS_SYN_MEM=1273,HLS_SYN_DSP=0,HLS_SYN_FF=37296,HLS_SYN_LUT=101654,HLS_VERSION=2024_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state119 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state120 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state121 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state122 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state123 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state124 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state125 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state126 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state127 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state128 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state129 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state130 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state131 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state132 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state133 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state134 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state135 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state136 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state137 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state138 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state139 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state140 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state141 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state142 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state143 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state144 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state145 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state146 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state147 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state148 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state149 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state150 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state151 : STD_LOGIC_VECTOR (159 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state152 : STD_LOGIC_VECTOR (159 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state153 : STD_LOGIC_VECTOR (159 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state154 : STD_LOGIC_VECTOR (159 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state155 : STD_LOGIC_VECTOR (159 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state156 : STD_LOGIC_VECTOR (159 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state157 : STD_LOGIC_VECTOR (159 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state158 : STD_LOGIC_VECTOR (159 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state159 : STD_LOGIC_VECTOR (159 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state160 : STD_LOGIC_VECTOR (159 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_92 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010010";
    constant ap_const_lv32_93 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010011";
    constant ap_const_lv32_94 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010100";
    constant ap_const_lv32_95 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010101";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant C_M_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_96 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010110";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_91 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010001";
    constant ap_const_lv32_97 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010111";
    constant ap_const_lv32_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011000";
    constant ap_const_lv32_99 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011001";
    constant ap_const_lv32_9A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011010";
    constant ap_const_lv32_9B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011011";
    constant ap_const_lv32_9C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011100";
    constant ap_const_lv32_9D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011101";
    constant ap_const_lv32_9E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011110";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv64_51000 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000001010001000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv64_1900 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000001100100000000";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";

attribute shreg_extract : string;
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_continue : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal input_r : STD_LOGIC_VECTOR (63 downto 0);
    signal weights : STD_LOGIC_VECTOR (63 downto 0);
    signal biases : STD_LOGIC_VECTOR (63 downto 0);
    signal output_r : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal gmem1_blk_n_AR : STD_LOGIC;
    signal gmem2_blk_n_AR : STD_LOGIC;
    signal output_r_read_reg_799 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_AWREADY : STD_LOGIC;
    signal gmem1_WREADY : STD_LOGIC;
    signal gmem1_ARVALID : STD_LOGIC;
    signal gmem1_ARREADY : STD_LOGIC;
    signal gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_RVALID : STD_LOGIC;
    signal gmem1_RREADY : STD_LOGIC;
    signal gmem1_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem1_RFIFONUM : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem1_BVALID : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal trunc_ln_fu_576_p4 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln_reg_810 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln4_reg_820 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln6_reg_826 : STD_LOGIC_VECTOR (57 downto 0);
    signal gmem0_AWREADY : STD_LOGIC;
    signal gmem0_WREADY : STD_LOGIC;
    signal gmem0_ARVALID : STD_LOGIC;
    signal gmem0_ARREADY : STD_LOGIC;
    signal gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_RVALID : STD_LOGIC;
    signal gmem0_RREADY : STD_LOGIC;
    signal gmem0_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem0_RFIFONUM : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem0_BVALID : STD_LOGIC;
    signal gmem2_AWREADY : STD_LOGIC;
    signal gmem2_WREADY : STD_LOGIC;
    signal gmem2_ARVALID : STD_LOGIC;
    signal gmem2_ARREADY : STD_LOGIC;
    signal gmem2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem2_RVALID : STD_LOGIC;
    signal gmem2_RREADY : STD_LOGIC;
    signal gmem2_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem2_RFIFONUM : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem2_BVALID : STD_LOGIC;
    signal ap_block_state74_io : BOOLEAN;
    signal add_ln99_fu_652_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln99_reg_845 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state147 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state147 : signal is "none";
    signal biases_buffer_load_reg_859 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state148 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state148 : signal is "none";
    signal grp_process_features_Pipeline_conv_weights_fu_486_ap_done : STD_LOGIC;
    signal add_ln110_1_fu_691_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln110_1_reg_864 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln110_fu_697_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln110_reg_869 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state149 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state149 : signal is "none";
    signal p_cast6_fu_735_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_cast6_reg_877 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln112_fu_746_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln112_reg_882 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state150 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state150 : signal is "none";
    signal add_ln116_1_fu_767_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln116_1_reg_890 : STD_LOGIC_VECTOR (13 downto 0);
    signal feature_collection_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal feature_collection_ce0 : STD_LOGIC;
    signal feature_collection_we0 : STD_LOGIC;
    signal feature_collection_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_buffer_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal output_buffer_ce0 : STD_LOGIC;
    signal output_buffer_we0 : STD_LOGIC;
    signal output_buffer_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_ce0 : STD_LOGIC;
    signal input_buffer_we0 : STD_LOGIC;
    signal input_buffer_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_ce1 : STD_LOGIC;
    signal input_buffer_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_ce2 : STD_LOGIC;
    signal input_buffer_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_ce3 : STD_LOGIC;
    signal input_buffer_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_4_ce0 : STD_LOGIC;
    signal input_buffer_4_we0 : STD_LOGIC;
    signal input_buffer_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_4_ce1 : STD_LOGIC;
    signal input_buffer_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_4_ce2 : STD_LOGIC;
    signal input_buffer_4_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_5_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_5_ce0 : STD_LOGIC;
    signal input_buffer_5_we0 : STD_LOGIC;
    signal input_buffer_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_5_ce1 : STD_LOGIC;
    signal input_buffer_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_5_ce2 : STD_LOGIC;
    signal input_buffer_5_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_5_ce3 : STD_LOGIC;
    signal input_buffer_5_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_6_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_6_ce0 : STD_LOGIC;
    signal input_buffer_6_we0 : STD_LOGIC;
    signal input_buffer_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_6_ce1 : STD_LOGIC;
    signal input_buffer_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_6_ce2 : STD_LOGIC;
    signal input_buffer_6_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_7_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_7_ce0 : STD_LOGIC;
    signal input_buffer_7_we0 : STD_LOGIC;
    signal input_buffer_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_7_ce1 : STD_LOGIC;
    signal input_buffer_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_7_ce2 : STD_LOGIC;
    signal input_buffer_7_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_7_ce3 : STD_LOGIC;
    signal input_buffer_7_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_8_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_8_ce0 : STD_LOGIC;
    signal input_buffer_8_we0 : STD_LOGIC;
    signal input_buffer_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_8_ce1 : STD_LOGIC;
    signal input_buffer_8_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_8_ce2 : STD_LOGIC;
    signal input_buffer_8_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_9_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_9_ce0 : STD_LOGIC;
    signal input_buffer_9_we0 : STD_LOGIC;
    signal input_buffer_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_9_ce1 : STD_LOGIC;
    signal input_buffer_9_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_9_ce2 : STD_LOGIC;
    signal input_buffer_9_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_9_ce3 : STD_LOGIC;
    signal input_buffer_9_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_10_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_10_ce0 : STD_LOGIC;
    signal input_buffer_10_we0 : STD_LOGIC;
    signal input_buffer_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_10_ce1 : STD_LOGIC;
    signal input_buffer_10_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_10_ce2 : STD_LOGIC;
    signal input_buffer_10_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_11_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_11_ce0 : STD_LOGIC;
    signal input_buffer_11_we0 : STD_LOGIC;
    signal input_buffer_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_11_ce1 : STD_LOGIC;
    signal input_buffer_11_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_11_ce2 : STD_LOGIC;
    signal input_buffer_11_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_11_ce3 : STD_LOGIC;
    signal input_buffer_11_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_12_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_12_ce0 : STD_LOGIC;
    signal input_buffer_12_we0 : STD_LOGIC;
    signal input_buffer_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_12_ce1 : STD_LOGIC;
    signal input_buffer_12_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_12_ce2 : STD_LOGIC;
    signal input_buffer_12_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_13_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_13_ce0 : STD_LOGIC;
    signal input_buffer_13_we0 : STD_LOGIC;
    signal input_buffer_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_13_ce1 : STD_LOGIC;
    signal input_buffer_13_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_13_ce2 : STD_LOGIC;
    signal input_buffer_13_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_13_ce3 : STD_LOGIC;
    signal input_buffer_13_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_14_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_14_ce0 : STD_LOGIC;
    signal input_buffer_14_we0 : STD_LOGIC;
    signal input_buffer_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_14_ce1 : STD_LOGIC;
    signal input_buffer_14_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_14_ce2 : STD_LOGIC;
    signal input_buffer_14_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_15_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_15_ce0 : STD_LOGIC;
    signal input_buffer_15_we0 : STD_LOGIC;
    signal input_buffer_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_15_ce1 : STD_LOGIC;
    signal input_buffer_15_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_15_ce2 : STD_LOGIC;
    signal input_buffer_15_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_15_ce3 : STD_LOGIC;
    signal input_buffer_15_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_16_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_16_ce0 : STD_LOGIC;
    signal input_buffer_16_we0 : STD_LOGIC;
    signal input_buffer_16_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_16_ce1 : STD_LOGIC;
    signal input_buffer_16_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_16_ce2 : STD_LOGIC;
    signal input_buffer_16_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_17_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_17_ce0 : STD_LOGIC;
    signal input_buffer_17_we0 : STD_LOGIC;
    signal input_buffer_17_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_17_ce1 : STD_LOGIC;
    signal input_buffer_17_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_17_ce2 : STD_LOGIC;
    signal input_buffer_17_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_17_ce3 : STD_LOGIC;
    signal input_buffer_17_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_18_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_18_ce0 : STD_LOGIC;
    signal input_buffer_18_we0 : STD_LOGIC;
    signal input_buffer_18_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_18_ce1 : STD_LOGIC;
    signal input_buffer_18_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_18_ce2 : STD_LOGIC;
    signal input_buffer_18_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_19_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_19_ce0 : STD_LOGIC;
    signal input_buffer_19_we0 : STD_LOGIC;
    signal input_buffer_19_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_19_ce1 : STD_LOGIC;
    signal input_buffer_19_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_19_ce2 : STD_LOGIC;
    signal input_buffer_19_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_19_ce3 : STD_LOGIC;
    signal input_buffer_19_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_20_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_20_ce0 : STD_LOGIC;
    signal input_buffer_20_we0 : STD_LOGIC;
    signal input_buffer_20_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_20_ce1 : STD_LOGIC;
    signal input_buffer_20_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_20_ce2 : STD_LOGIC;
    signal input_buffer_20_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_21_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_21_ce0 : STD_LOGIC;
    signal input_buffer_21_we0 : STD_LOGIC;
    signal input_buffer_21_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_21_ce1 : STD_LOGIC;
    signal input_buffer_21_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_21_ce2 : STD_LOGIC;
    signal input_buffer_21_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_21_ce3 : STD_LOGIC;
    signal input_buffer_21_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_22_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_22_ce0 : STD_LOGIC;
    signal input_buffer_22_we0 : STD_LOGIC;
    signal input_buffer_22_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_22_ce1 : STD_LOGIC;
    signal input_buffer_22_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_22_ce2 : STD_LOGIC;
    signal input_buffer_22_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_23_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_23_ce0 : STD_LOGIC;
    signal input_buffer_23_we0 : STD_LOGIC;
    signal input_buffer_23_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_23_ce1 : STD_LOGIC;
    signal input_buffer_23_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_23_ce2 : STD_LOGIC;
    signal input_buffer_23_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_23_ce3 : STD_LOGIC;
    signal input_buffer_23_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_24_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_24_ce0 : STD_LOGIC;
    signal input_buffer_24_we0 : STD_LOGIC;
    signal input_buffer_24_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_24_ce1 : STD_LOGIC;
    signal input_buffer_24_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_24_ce2 : STD_LOGIC;
    signal input_buffer_24_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_25_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_25_ce0 : STD_LOGIC;
    signal input_buffer_25_we0 : STD_LOGIC;
    signal input_buffer_25_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_25_ce1 : STD_LOGIC;
    signal input_buffer_25_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_25_ce2 : STD_LOGIC;
    signal input_buffer_25_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_25_ce3 : STD_LOGIC;
    signal input_buffer_25_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_26_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_26_ce0 : STD_LOGIC;
    signal input_buffer_26_we0 : STD_LOGIC;
    signal input_buffer_26_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_26_ce1 : STD_LOGIC;
    signal input_buffer_26_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_26_ce2 : STD_LOGIC;
    signal input_buffer_26_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_27_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_27_ce0 : STD_LOGIC;
    signal input_buffer_27_we0 : STD_LOGIC;
    signal input_buffer_27_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_27_ce1 : STD_LOGIC;
    signal input_buffer_27_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_27_ce2 : STD_LOGIC;
    signal input_buffer_27_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_27_ce3 : STD_LOGIC;
    signal input_buffer_27_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_28_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_28_ce0 : STD_LOGIC;
    signal input_buffer_28_we0 : STD_LOGIC;
    signal input_buffer_28_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_28_ce1 : STD_LOGIC;
    signal input_buffer_28_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_28_ce2 : STD_LOGIC;
    signal input_buffer_28_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_29_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_29_ce0 : STD_LOGIC;
    signal input_buffer_29_we0 : STD_LOGIC;
    signal input_buffer_29_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_29_ce1 : STD_LOGIC;
    signal input_buffer_29_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_29_ce2 : STD_LOGIC;
    signal input_buffer_29_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_29_ce3 : STD_LOGIC;
    signal input_buffer_29_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_30_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_30_ce0 : STD_LOGIC;
    signal input_buffer_30_we0 : STD_LOGIC;
    signal input_buffer_30_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_30_ce1 : STD_LOGIC;
    signal input_buffer_30_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_30_ce2 : STD_LOGIC;
    signal input_buffer_30_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_31_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_31_ce0 : STD_LOGIC;
    signal input_buffer_31_we0 : STD_LOGIC;
    signal input_buffer_31_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_31_ce1 : STD_LOGIC;
    signal input_buffer_31_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_31_ce2 : STD_LOGIC;
    signal input_buffer_31_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_31_ce3 : STD_LOGIC;
    signal input_buffer_31_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_32_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_32_ce0 : STD_LOGIC;
    signal input_buffer_32_we0 : STD_LOGIC;
    signal input_buffer_32_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_32_ce1 : STD_LOGIC;
    signal input_buffer_32_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_32_ce2 : STD_LOGIC;
    signal input_buffer_32_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_33_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_33_ce0 : STD_LOGIC;
    signal input_buffer_33_we0 : STD_LOGIC;
    signal input_buffer_33_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_33_ce1 : STD_LOGIC;
    signal input_buffer_33_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_33_ce2 : STD_LOGIC;
    signal input_buffer_33_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_33_ce3 : STD_LOGIC;
    signal input_buffer_33_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_34_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer_34_ce0 : STD_LOGIC;
    signal input_buffer_34_we0 : STD_LOGIC;
    signal input_buffer_34_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_34_ce1 : STD_LOGIC;
    signal input_buffer_34_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buffer_34_ce2 : STD_LOGIC;
    signal input_buffer_34_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_buffer_4_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal output_buffer_4_ce0 : STD_LOGIC;
    signal output_buffer_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_buffer_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_buffer_ce0 : STD_LOGIC;
    signal weight_buffer_we0 : STD_LOGIC_VECTOR (323 downto 0);
    signal weight_buffer_q0 : STD_LOGIC_VECTOR (2591 downto 0);
    signal biases_buffer_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal biases_buffer_ce0 : STD_LOGIC;
    signal biases_buffer_we0 : STD_LOGIC;
    signal biases_buffer_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_output_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_output_ce0 : STD_LOGIC;
    signal conv_output_we0 : STD_LOGIC;
    signal conv_output_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reshape_output_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal reshape_output_ce0 : STD_LOGIC;
    signal reshape_output_we0 : STD_LOGIC;
    signal reshape_output_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_start : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_done : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_idle : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_ready : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_BREADY : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_weights_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_weights_stream_write : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_ap_start : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_ap_done : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_ap_idle : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_ap_ready : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_4_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_4_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_5_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_5_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_5_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_6_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_6_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_6_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_7_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_7_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_7_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_8_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_8_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_8_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_9_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_9_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_9_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_10_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_10_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_10_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_11_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_11_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_11_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_12_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_12_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_12_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_12_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_13_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_13_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_13_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_13_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_14_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_14_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_14_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_14_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_15_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_15_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_15_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_15_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_16_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_16_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_16_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_16_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_17_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_17_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_17_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_17_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_18_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_18_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_18_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_18_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_19_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_19_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_19_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_19_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_20_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_20_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_20_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_20_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_21_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_21_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_21_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_21_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_22_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_22_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_22_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_22_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_23_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_23_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_23_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_23_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_24_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_24_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_24_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_24_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_25_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_25_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_25_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_25_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_26_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_26_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_26_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_26_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_27_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_27_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_27_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_27_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_28_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_28_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_28_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_28_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_29_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_29_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_29_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_29_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_30_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_30_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_30_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_30_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_31_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_31_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_31_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_31_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_32_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_32_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_32_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_32_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_33_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_33_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_33_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_33_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_34_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_34_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_34_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_input_buffer_34_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_ap_start : STD_LOGIC;
    signal grp_process_features_Pipeline_3_fu_478_ap_done : STD_LOGIC;
    signal grp_process_features_Pipeline_3_fu_478_ap_idle : STD_LOGIC;
    signal grp_process_features_Pipeline_3_fu_478_ap_ready : STD_LOGIC;
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWVALID : STD_LOGIC;
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_WVALID : STD_LOGIC;
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_WLAST : STD_LOGIC;
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARVALID : STD_LOGIC;
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_RREADY : STD_LOGIC;
    signal grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_BREADY : STD_LOGIC;
    signal grp_process_features_Pipeline_3_fu_478_biases_buffer_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_process_features_Pipeline_3_fu_478_biases_buffer_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_3_fu_478_biases_buffer_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_3_fu_478_biases_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_conv_weights_fu_486_ap_start : STD_LOGIC;
    signal grp_process_features_Pipeline_conv_weights_fu_486_ap_idle : STD_LOGIC;
    signal grp_process_features_Pipeline_conv_weights_fu_486_ap_ready : STD_LOGIC;
    signal grp_process_features_Pipeline_conv_weights_fu_486_weights_stream_read : STD_LOGIC;
    signal grp_process_features_Pipeline_conv_weights_fu_486_weight_buffer_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_process_features_Pipeline_conv_weights_fu_486_weight_buffer_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_conv_weights_fu_486_weight_buffer_we0 : STD_LOGIC_VECTOR (323 downto 0);
    signal grp_process_features_Pipeline_conv_weights_fu_486_weight_buffer_d0 : STD_LOGIC_VECTOR (2591 downto 0);
    signal grp_process_features_Pipeline_5_fu_492_ap_start : STD_LOGIC;
    signal grp_process_features_Pipeline_5_fu_492_ap_done : STD_LOGIC;
    signal grp_process_features_Pipeline_5_fu_492_ap_idle : STD_LOGIC;
    signal grp_process_features_Pipeline_5_fu_492_ap_ready : STD_LOGIC;
    signal grp_process_features_Pipeline_5_fu_492_output_buffer_4_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_process_features_Pipeline_5_fu_492_output_buffer_4_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_5_fu_492_conv_output_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_process_features_Pipeline_5_fu_492_conv_output_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_5_fu_492_conv_output_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_5_fu_492_conv_output_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_calculate_single_value_fu_498_ap_start : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_ap_done : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_ap_idle : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_ap_ready : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_0_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_0_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_0_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_0_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_0_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_0_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_1_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_1_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_1_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_1_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_2_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_2_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_2_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_2_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_2_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_2_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_3_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_3_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_3_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_3_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_3_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_4_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_4_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_4_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_4_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_4_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_4_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_4_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_5_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_5_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_5_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_5_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_5_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_5_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_6_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_6_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_6_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_6_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_6_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_6_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_6_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_6_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_7_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_7_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_7_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_7_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_7_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_7_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_8_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_8_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_8_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_8_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_8_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_8_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_8_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_8_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_9_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_9_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_9_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_9_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_9_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_9_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_10_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_10_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_10_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_10_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_10_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_10_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_10_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_10_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_11_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_11_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_11_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_11_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_11_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_11_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_12_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_12_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_12_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_12_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_12_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_12_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_12_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_12_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_13_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_13_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_13_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_13_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_13_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_13_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_14_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_14_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_14_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_14_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_14_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_14_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_14_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_14_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_15_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_15_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_15_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_15_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_15_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_15_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_16_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_16_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_16_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_16_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_16_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_16_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_16_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_16_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_17_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_17_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_17_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_17_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_17_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_17_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_18_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_18_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_18_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_18_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_18_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_18_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_18_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_18_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_19_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_19_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_19_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_19_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_19_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_19_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_20_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_20_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_20_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_20_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_20_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_20_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_20_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_20_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_21_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_21_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_21_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_21_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_21_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_21_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_22_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_22_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_22_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_22_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_22_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_22_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_22_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_22_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_23_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_23_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_23_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_23_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_23_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_23_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_24_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_24_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_24_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_24_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_24_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_24_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_24_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_24_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_25_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_25_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_25_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_25_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_25_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_25_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_26_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_26_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_26_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_26_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_26_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_26_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_26_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_26_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_27_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_27_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_27_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_27_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_27_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_27_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_28_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_28_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_28_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_28_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_28_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_28_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_28_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_28_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_29_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_29_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_29_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_29_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_29_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_29_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_30_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_30_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_30_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_30_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_30_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_30_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_30_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_30_ce3 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_31_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_31_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_31_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_31_ce1 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_a_31_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calculate_single_value_fu_498_input_a_31_ce2 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_input_b_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_calculate_single_value_fu_498_input_b_ce0 : STD_LOGIC;
    signal grp_calculate_single_value_fu_498_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_6_fu_539_ap_start : STD_LOGIC;
    signal grp_process_features_Pipeline_6_fu_539_ap_done : STD_LOGIC;
    signal grp_process_features_Pipeline_6_fu_539_ap_idle : STD_LOGIC;
    signal grp_process_features_Pipeline_6_fu_539_ap_ready : STD_LOGIC;
    signal grp_process_features_Pipeline_6_fu_539_conv_output_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_process_features_Pipeline_6_fu_539_conv_output_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_6_fu_539_feature_collection_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_process_features_Pipeline_6_fu_539_feature_collection_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_6_fu_539_feature_collection_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_6_fu_539_feature_collection_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_start : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_done : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_idle : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_ready : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_feature_collection_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_feature_collection_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_output_buffer_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_output_buffer_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_output_buffer_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_output_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_process_features_Pipeline_8_fu_551_ap_start : STD_LOGIC;
    signal grp_process_features_Pipeline_8_fu_551_ap_done : STD_LOGIC;
    signal grp_process_features_Pipeline_8_fu_551_ap_idle : STD_LOGIC;
    signal grp_process_features_Pipeline_8_fu_551_ap_ready : STD_LOGIC;
    signal grp_process_features_Pipeline_8_fu_551_output_buffer_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_process_features_Pipeline_8_fu_551_output_buffer_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_8_fu_551_reshape_output_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_process_features_Pipeline_8_fu_551_reshape_output_ce0 : STD_LOGIC;
    signal grp_process_features_Pipeline_8_fu_551_reshape_output_we0 : STD_LOGIC;
    signal grp_process_features_Pipeline_8_fu_551_reshape_output_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_fu_557_ap_start : STD_LOGIC;
    signal grp_squash_fu_557_ap_done : STD_LOGIC;
    signal grp_squash_fu_557_ap_idle : STD_LOGIC;
    signal grp_squash_fu_557_ap_ready : STD_LOGIC;
    signal grp_squash_fu_557_input_r_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_squash_fu_557_input_r_ce0 : STD_LOGIC;
    signal grp_squash_fu_557_m_axi_gmem3_AWVALID : STD_LOGIC;
    signal grp_squash_fu_557_m_axi_gmem3_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_WVALID : STD_LOGIC;
    signal grp_squash_fu_557_m_axi_gmem3_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_WLAST : STD_LOGIC;
    signal grp_squash_fu_557_m_axi_gmem3_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_ARVALID : STD_LOGIC;
    signal grp_squash_fu_557_m_axi_gmem3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_squash_fu_557_m_axi_gmem3_RREADY : STD_LOGIC;
    signal grp_squash_fu_557_m_axi_gmem3_BREADY : STD_LOGIC;
    signal gmem3_AWVALID : STD_LOGIC;
    signal gmem3_AWREADY : STD_LOGIC;
    signal gmem3_WVALID : STD_LOGIC;
    signal gmem3_WREADY : STD_LOGIC;
    signal gmem3_ARREADY : STD_LOGIC;
    signal gmem3_RVALID : STD_LOGIC;
    signal gmem3_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem3_RFIFONUM : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem3_BVALID : STD_LOGIC;
    signal gmem3_BREADY : STD_LOGIC;
    signal output_length_reg_407 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln112_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_width_reg_419 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln110_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state151 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state151 : signal is "none";
    signal grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal weights_stream_full_n : STD_LOGIC;
    signal weights_stream_write : STD_LOGIC;
    signal grp_process_features_Pipeline_2_fu_439_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state145 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state145 : signal is "none";
    signal ap_CS_fsm_state146 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state146 : signal is "none";
    signal grp_process_features_Pipeline_3_fu_478_ap_start_reg : STD_LOGIC := '0';
    signal grp_process_features_Pipeline_conv_weights_fu_486_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln99_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_stream_empty_n : STD_LOGIC;
    signal weights_stream_read : STD_LOGIC;
    signal grp_process_features_Pipeline_5_fu_492_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state152 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state152 : signal is "none";
    signal grp_calculate_single_value_fu_498_ap_start_reg : STD_LOGIC := '0';
    signal grp_process_features_Pipeline_6_fu_539_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state153 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state153 : signal is "none";
    signal ap_CS_fsm_state154 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state154 : signal is "none";
    signal grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (159 downto 0);
    signal ap_NS_fsm_state155 : STD_LOGIC;
    signal ap_CS_fsm_state156 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state156 : signal is "none";
    signal grp_process_features_Pipeline_8_fu_551_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state157 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state157 : signal is "none";
    signal ap_CS_fsm_state158 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state158 : signal is "none";
    signal grp_squash_fu_557_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state159 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state159 : signal is "none";
    signal ap_CS_fsm_state160 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state160 : signal is "none";
    signal zext_ln99_fu_664_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_fu_778_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln190_fu_586_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln85_fu_629_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln86_fu_639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal output_depth_fu_174 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal biases_buffer_ce0_local : STD_LOGIC;
    signal output_buffer_4_we0_local : STD_LOGIC;
    signal add_ln116_fu_772_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_buffer_4_ce0_local : STD_LOGIC;
    signal tmp_fu_680_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl1_fu_673_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln110_fu_687_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_16_fu_717_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_fu_709_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl67_fu_725_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_86_fu_729_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln112_fu_758_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln116_2_fu_762_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ST_fsm_state83_blk : STD_LOGIC;
    signal ap_ST_fsm_state84_blk : STD_LOGIC;
    signal ap_ST_fsm_state85_blk : STD_LOGIC;
    signal ap_ST_fsm_state86_blk : STD_LOGIC;
    signal ap_ST_fsm_state87_blk : STD_LOGIC;
    signal ap_ST_fsm_state88_blk : STD_LOGIC;
    signal ap_ST_fsm_state89_blk : STD_LOGIC;
    signal ap_ST_fsm_state90_blk : STD_LOGIC;
    signal ap_ST_fsm_state91_blk : STD_LOGIC;
    signal ap_ST_fsm_state92_blk : STD_LOGIC;
    signal ap_ST_fsm_state93_blk : STD_LOGIC;
    signal ap_ST_fsm_state94_blk : STD_LOGIC;
    signal ap_ST_fsm_state95_blk : STD_LOGIC;
    signal ap_ST_fsm_state96_blk : STD_LOGIC;
    signal ap_ST_fsm_state97_blk : STD_LOGIC;
    signal ap_ST_fsm_state98_blk : STD_LOGIC;
    signal ap_ST_fsm_state99_blk : STD_LOGIC;
    signal ap_ST_fsm_state100_blk : STD_LOGIC;
    signal ap_ST_fsm_state101_blk : STD_LOGIC;
    signal ap_ST_fsm_state102_blk : STD_LOGIC;
    signal ap_ST_fsm_state103_blk : STD_LOGIC;
    signal ap_ST_fsm_state104_blk : STD_LOGIC;
    signal ap_ST_fsm_state105_blk : STD_LOGIC;
    signal ap_ST_fsm_state106_blk : STD_LOGIC;
    signal ap_ST_fsm_state107_blk : STD_LOGIC;
    signal ap_ST_fsm_state108_blk : STD_LOGIC;
    signal ap_ST_fsm_state109_blk : STD_LOGIC;
    signal ap_ST_fsm_state110_blk : STD_LOGIC;
    signal ap_ST_fsm_state111_blk : STD_LOGIC;
    signal ap_ST_fsm_state112_blk : STD_LOGIC;
    signal ap_ST_fsm_state113_blk : STD_LOGIC;
    signal ap_ST_fsm_state114_blk : STD_LOGIC;
    signal ap_ST_fsm_state115_blk : STD_LOGIC;
    signal ap_ST_fsm_state116_blk : STD_LOGIC;
    signal ap_ST_fsm_state117_blk : STD_LOGIC;
    signal ap_ST_fsm_state118_blk : STD_LOGIC;
    signal ap_ST_fsm_state119_blk : STD_LOGIC;
    signal ap_ST_fsm_state120_blk : STD_LOGIC;
    signal ap_ST_fsm_state121_blk : STD_LOGIC;
    signal ap_ST_fsm_state122_blk : STD_LOGIC;
    signal ap_ST_fsm_state123_blk : STD_LOGIC;
    signal ap_ST_fsm_state124_blk : STD_LOGIC;
    signal ap_ST_fsm_state125_blk : STD_LOGIC;
    signal ap_ST_fsm_state126_blk : STD_LOGIC;
    signal ap_ST_fsm_state127_blk : STD_LOGIC;
    signal ap_ST_fsm_state128_blk : STD_LOGIC;
    signal ap_ST_fsm_state129_blk : STD_LOGIC;
    signal ap_ST_fsm_state130_blk : STD_LOGIC;
    signal ap_ST_fsm_state131_blk : STD_LOGIC;
    signal ap_ST_fsm_state132_blk : STD_LOGIC;
    signal ap_ST_fsm_state133_blk : STD_LOGIC;
    signal ap_ST_fsm_state134_blk : STD_LOGIC;
    signal ap_ST_fsm_state135_blk : STD_LOGIC;
    signal ap_ST_fsm_state136_blk : STD_LOGIC;
    signal ap_ST_fsm_state137_blk : STD_LOGIC;
    signal ap_ST_fsm_state138_blk : STD_LOGIC;
    signal ap_ST_fsm_state139_blk : STD_LOGIC;
    signal ap_ST_fsm_state140_blk : STD_LOGIC;
    signal ap_ST_fsm_state141_blk : STD_LOGIC;
    signal ap_ST_fsm_state142_blk : STD_LOGIC;
    signal ap_ST_fsm_state143_blk : STD_LOGIC;
    signal ap_ST_fsm_state144_blk : STD_LOGIC;
    signal ap_ST_fsm_state145_blk : STD_LOGIC;
    signal ap_block_state146_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state146_blk : STD_LOGIC;
    signal ap_ST_fsm_state147_blk : STD_LOGIC;
    signal ap_ST_fsm_state148_blk : STD_LOGIC;
    signal ap_ST_fsm_state149_blk : STD_LOGIC;
    signal ap_ST_fsm_state150_blk : STD_LOGIC;
    signal ap_ST_fsm_state151_blk : STD_LOGIC;
    signal ap_ST_fsm_state152_blk : STD_LOGIC;
    signal ap_ST_fsm_state153_blk : STD_LOGIC;
    signal ap_ST_fsm_state154_blk : STD_LOGIC;
    signal ap_ST_fsm_state155_blk : STD_LOGIC;
    signal ap_ST_fsm_state156_blk : STD_LOGIC;
    signal ap_ST_fsm_state157_blk : STD_LOGIC;
    signal ap_ST_fsm_state158_blk : STD_LOGIC;
    signal ap_ST_fsm_state159_blk : STD_LOGIC;
    signal ap_ST_fsm_state160_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component process_features_process_features_Pipeline_VITIS_LOOP_190_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        weights_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_stream_full_n : IN STD_LOGIC;
        weights_stream_write : OUT STD_LOGIC;
        sext_ln190 : IN STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component process_features_process_features_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        input_buffer_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_ce0 : OUT STD_LOGIC;
        input_buffer_we0 : OUT STD_LOGIC;
        input_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_4_ce0 : OUT STD_LOGIC;
        input_buffer_4_we0 : OUT STD_LOGIC;
        input_buffer_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_5_ce0 : OUT STD_LOGIC;
        input_buffer_5_we0 : OUT STD_LOGIC;
        input_buffer_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_6_ce0 : OUT STD_LOGIC;
        input_buffer_6_we0 : OUT STD_LOGIC;
        input_buffer_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_7_ce0 : OUT STD_LOGIC;
        input_buffer_7_we0 : OUT STD_LOGIC;
        input_buffer_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_8_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_8_ce0 : OUT STD_LOGIC;
        input_buffer_8_we0 : OUT STD_LOGIC;
        input_buffer_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_9_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_9_ce0 : OUT STD_LOGIC;
        input_buffer_9_we0 : OUT STD_LOGIC;
        input_buffer_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_10_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_10_ce0 : OUT STD_LOGIC;
        input_buffer_10_we0 : OUT STD_LOGIC;
        input_buffer_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_11_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_11_ce0 : OUT STD_LOGIC;
        input_buffer_11_we0 : OUT STD_LOGIC;
        input_buffer_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_12_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_12_ce0 : OUT STD_LOGIC;
        input_buffer_12_we0 : OUT STD_LOGIC;
        input_buffer_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_13_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_13_ce0 : OUT STD_LOGIC;
        input_buffer_13_we0 : OUT STD_LOGIC;
        input_buffer_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_14_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_14_ce0 : OUT STD_LOGIC;
        input_buffer_14_we0 : OUT STD_LOGIC;
        input_buffer_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_15_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_15_ce0 : OUT STD_LOGIC;
        input_buffer_15_we0 : OUT STD_LOGIC;
        input_buffer_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_16_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_16_ce0 : OUT STD_LOGIC;
        input_buffer_16_we0 : OUT STD_LOGIC;
        input_buffer_16_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_17_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_17_ce0 : OUT STD_LOGIC;
        input_buffer_17_we0 : OUT STD_LOGIC;
        input_buffer_17_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_18_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_18_ce0 : OUT STD_LOGIC;
        input_buffer_18_we0 : OUT STD_LOGIC;
        input_buffer_18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_19_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_19_ce0 : OUT STD_LOGIC;
        input_buffer_19_we0 : OUT STD_LOGIC;
        input_buffer_19_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_20_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_20_ce0 : OUT STD_LOGIC;
        input_buffer_20_we0 : OUT STD_LOGIC;
        input_buffer_20_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_21_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_21_ce0 : OUT STD_LOGIC;
        input_buffer_21_we0 : OUT STD_LOGIC;
        input_buffer_21_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_22_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_22_ce0 : OUT STD_LOGIC;
        input_buffer_22_we0 : OUT STD_LOGIC;
        input_buffer_22_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_23_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_23_ce0 : OUT STD_LOGIC;
        input_buffer_23_we0 : OUT STD_LOGIC;
        input_buffer_23_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_24_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_24_ce0 : OUT STD_LOGIC;
        input_buffer_24_we0 : OUT STD_LOGIC;
        input_buffer_24_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_25_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_25_ce0 : OUT STD_LOGIC;
        input_buffer_25_we0 : OUT STD_LOGIC;
        input_buffer_25_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_26_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_26_ce0 : OUT STD_LOGIC;
        input_buffer_26_we0 : OUT STD_LOGIC;
        input_buffer_26_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_27_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_27_ce0 : OUT STD_LOGIC;
        input_buffer_27_we0 : OUT STD_LOGIC;
        input_buffer_27_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_28_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_28_ce0 : OUT STD_LOGIC;
        input_buffer_28_we0 : OUT STD_LOGIC;
        input_buffer_28_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_29_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_29_ce0 : OUT STD_LOGIC;
        input_buffer_29_we0 : OUT STD_LOGIC;
        input_buffer_29_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_30_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_30_ce0 : OUT STD_LOGIC;
        input_buffer_30_we0 : OUT STD_LOGIC;
        input_buffer_30_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_31_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_31_ce0 : OUT STD_LOGIC;
        input_buffer_31_we0 : OUT STD_LOGIC;
        input_buffer_31_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_32_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_32_ce0 : OUT STD_LOGIC;
        input_buffer_32_we0 : OUT STD_LOGIC;
        input_buffer_32_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_33_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_33_ce0 : OUT STD_LOGIC;
        input_buffer_33_we0 : OUT STD_LOGIC;
        input_buffer_33_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_34_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_34_ce0 : OUT STD_LOGIC;
        input_buffer_34_we0 : OUT STD_LOGIC;
        input_buffer_34_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sext_ln85 : IN STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component process_features_process_features_Pipeline_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem2_AWVALID : OUT STD_LOGIC;
        m_axi_gmem2_AWREADY : IN STD_LOGIC;
        m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WVALID : OUT STD_LOGIC;
        m_axi_gmem2_WREADY : IN STD_LOGIC;
        m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_WLAST : OUT STD_LOGIC;
        m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARVALID : OUT STD_LOGIC;
        m_axi_gmem2_ARREADY : IN STD_LOGIC;
        m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RVALID : IN STD_LOGIC;
        m_axi_gmem2_RREADY : OUT STD_LOGIC;
        m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem2_RLAST : IN STD_LOGIC;
        m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BVALID : IN STD_LOGIC;
        m_axi_gmem2_BREADY : OUT STD_LOGIC;
        m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        biases_buffer_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        biases_buffer_ce0 : OUT STD_LOGIC;
        biases_buffer_we0 : OUT STD_LOGIC;
        biases_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sext_ln86 : IN STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component process_features_process_features_Pipeline_conv_weights IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        weights_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_stream_empty_n : IN STD_LOGIC;
        weights_stream_read : OUT STD_LOGIC;
        weight_buffer_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_buffer_ce0 : OUT STD_LOGIC;
        weight_buffer_we0 : OUT STD_LOGIC_VECTOR (323 downto 0);
        weight_buffer_d0 : OUT STD_LOGIC_VECTOR (2591 downto 0) );
    end component;


    component process_features_process_features_Pipeline_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_buffer_4_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        output_buffer_4_ce0 : OUT STD_LOGIC;
        output_buffer_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_output_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv_output_ce0 : OUT STD_LOGIC;
        conv_output_we0 : OUT STD_LOGIC;
        conv_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_calculate_single_value IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_a_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_0_ce0 : OUT STD_LOGIC;
        input_a_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_0_ce1 : OUT STD_LOGIC;
        input_a_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_0_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_0_ce2 : OUT STD_LOGIC;
        input_a_0_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_0_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_0_ce3 : OUT STD_LOGIC;
        input_a_0_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_1_ce0 : OUT STD_LOGIC;
        input_a_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_1_ce1 : OUT STD_LOGIC;
        input_a_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_1_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_1_ce2 : OUT STD_LOGIC;
        input_a_1_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_2_ce0 : OUT STD_LOGIC;
        input_a_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_2_ce1 : OUT STD_LOGIC;
        input_a_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_2_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_2_ce2 : OUT STD_LOGIC;
        input_a_2_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_2_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_2_ce3 : OUT STD_LOGIC;
        input_a_2_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_3_ce0 : OUT STD_LOGIC;
        input_a_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_3_ce1 : OUT STD_LOGIC;
        input_a_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_3_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_3_ce2 : OUT STD_LOGIC;
        input_a_3_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_4_ce0 : OUT STD_LOGIC;
        input_a_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_4_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_4_ce1 : OUT STD_LOGIC;
        input_a_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_4_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_4_ce2 : OUT STD_LOGIC;
        input_a_4_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_4_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_4_ce3 : OUT STD_LOGIC;
        input_a_4_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_5_ce0 : OUT STD_LOGIC;
        input_a_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_5_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_5_ce1 : OUT STD_LOGIC;
        input_a_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_5_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_5_ce2 : OUT STD_LOGIC;
        input_a_5_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_6_ce0 : OUT STD_LOGIC;
        input_a_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_6_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_6_ce1 : OUT STD_LOGIC;
        input_a_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_6_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_6_ce2 : OUT STD_LOGIC;
        input_a_6_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_6_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_6_ce3 : OUT STD_LOGIC;
        input_a_6_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_7_ce0 : OUT STD_LOGIC;
        input_a_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_7_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_7_ce1 : OUT STD_LOGIC;
        input_a_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_7_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_7_ce2 : OUT STD_LOGIC;
        input_a_7_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_8_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_8_ce0 : OUT STD_LOGIC;
        input_a_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_8_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_8_ce1 : OUT STD_LOGIC;
        input_a_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_8_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_8_ce2 : OUT STD_LOGIC;
        input_a_8_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_8_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_8_ce3 : OUT STD_LOGIC;
        input_a_8_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_9_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_9_ce0 : OUT STD_LOGIC;
        input_a_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_9_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_9_ce1 : OUT STD_LOGIC;
        input_a_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_9_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_9_ce2 : OUT STD_LOGIC;
        input_a_9_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_10_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_10_ce0 : OUT STD_LOGIC;
        input_a_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_10_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_10_ce1 : OUT STD_LOGIC;
        input_a_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_10_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_10_ce2 : OUT STD_LOGIC;
        input_a_10_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_10_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_10_ce3 : OUT STD_LOGIC;
        input_a_10_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_11_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_11_ce0 : OUT STD_LOGIC;
        input_a_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_11_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_11_ce1 : OUT STD_LOGIC;
        input_a_11_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_11_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_11_ce2 : OUT STD_LOGIC;
        input_a_11_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_12_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_12_ce0 : OUT STD_LOGIC;
        input_a_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_12_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_12_ce1 : OUT STD_LOGIC;
        input_a_12_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_12_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_12_ce2 : OUT STD_LOGIC;
        input_a_12_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_12_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_12_ce3 : OUT STD_LOGIC;
        input_a_12_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_13_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_13_ce0 : OUT STD_LOGIC;
        input_a_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_13_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_13_ce1 : OUT STD_LOGIC;
        input_a_13_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_13_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_13_ce2 : OUT STD_LOGIC;
        input_a_13_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_14_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_14_ce0 : OUT STD_LOGIC;
        input_a_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_14_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_14_ce1 : OUT STD_LOGIC;
        input_a_14_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_14_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_14_ce2 : OUT STD_LOGIC;
        input_a_14_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_14_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_14_ce3 : OUT STD_LOGIC;
        input_a_14_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_15_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_15_ce0 : OUT STD_LOGIC;
        input_a_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_15_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_15_ce1 : OUT STD_LOGIC;
        input_a_15_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_15_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_15_ce2 : OUT STD_LOGIC;
        input_a_15_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_16_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_16_ce0 : OUT STD_LOGIC;
        input_a_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_16_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_16_ce1 : OUT STD_LOGIC;
        input_a_16_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_16_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_16_ce2 : OUT STD_LOGIC;
        input_a_16_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_16_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_16_ce3 : OUT STD_LOGIC;
        input_a_16_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_17_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_17_ce0 : OUT STD_LOGIC;
        input_a_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_17_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_17_ce1 : OUT STD_LOGIC;
        input_a_17_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_17_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_17_ce2 : OUT STD_LOGIC;
        input_a_17_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_18_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_18_ce0 : OUT STD_LOGIC;
        input_a_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_18_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_18_ce1 : OUT STD_LOGIC;
        input_a_18_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_18_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_18_ce2 : OUT STD_LOGIC;
        input_a_18_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_18_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_18_ce3 : OUT STD_LOGIC;
        input_a_18_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_19_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_19_ce0 : OUT STD_LOGIC;
        input_a_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_19_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_19_ce1 : OUT STD_LOGIC;
        input_a_19_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_19_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_19_ce2 : OUT STD_LOGIC;
        input_a_19_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_20_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_20_ce0 : OUT STD_LOGIC;
        input_a_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_20_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_20_ce1 : OUT STD_LOGIC;
        input_a_20_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_20_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_20_ce2 : OUT STD_LOGIC;
        input_a_20_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_20_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_20_ce3 : OUT STD_LOGIC;
        input_a_20_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_21_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_21_ce0 : OUT STD_LOGIC;
        input_a_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_21_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_21_ce1 : OUT STD_LOGIC;
        input_a_21_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_21_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_21_ce2 : OUT STD_LOGIC;
        input_a_21_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_22_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_22_ce0 : OUT STD_LOGIC;
        input_a_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_22_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_22_ce1 : OUT STD_LOGIC;
        input_a_22_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_22_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_22_ce2 : OUT STD_LOGIC;
        input_a_22_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_22_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_22_ce3 : OUT STD_LOGIC;
        input_a_22_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_23_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_23_ce0 : OUT STD_LOGIC;
        input_a_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_23_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_23_ce1 : OUT STD_LOGIC;
        input_a_23_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_23_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_23_ce2 : OUT STD_LOGIC;
        input_a_23_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_24_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_24_ce0 : OUT STD_LOGIC;
        input_a_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_24_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_24_ce1 : OUT STD_LOGIC;
        input_a_24_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_24_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_24_ce2 : OUT STD_LOGIC;
        input_a_24_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_24_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_24_ce3 : OUT STD_LOGIC;
        input_a_24_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_25_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_25_ce0 : OUT STD_LOGIC;
        input_a_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_25_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_25_ce1 : OUT STD_LOGIC;
        input_a_25_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_25_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_25_ce2 : OUT STD_LOGIC;
        input_a_25_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_26_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_26_ce0 : OUT STD_LOGIC;
        input_a_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_26_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_26_ce1 : OUT STD_LOGIC;
        input_a_26_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_26_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_26_ce2 : OUT STD_LOGIC;
        input_a_26_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_26_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_26_ce3 : OUT STD_LOGIC;
        input_a_26_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_27_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_27_ce0 : OUT STD_LOGIC;
        input_a_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_27_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_27_ce1 : OUT STD_LOGIC;
        input_a_27_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_27_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_27_ce2 : OUT STD_LOGIC;
        input_a_27_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_28_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_28_ce0 : OUT STD_LOGIC;
        input_a_28_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_28_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_28_ce1 : OUT STD_LOGIC;
        input_a_28_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_28_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_28_ce2 : OUT STD_LOGIC;
        input_a_28_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_28_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_28_ce3 : OUT STD_LOGIC;
        input_a_28_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_29_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_29_ce0 : OUT STD_LOGIC;
        input_a_29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_29_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_29_ce1 : OUT STD_LOGIC;
        input_a_29_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_29_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_29_ce2 : OUT STD_LOGIC;
        input_a_29_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_30_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_30_ce0 : OUT STD_LOGIC;
        input_a_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_30_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_30_ce1 : OUT STD_LOGIC;
        input_a_30_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_30_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_30_ce2 : OUT STD_LOGIC;
        input_a_30_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_30_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_30_ce3 : OUT STD_LOGIC;
        input_a_30_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_31_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_31_ce0 : OUT STD_LOGIC;
        input_a_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_31_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_31_ce1 : OUT STD_LOGIC;
        input_a_31_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_a_31_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_a_31_ce2 : OUT STD_LOGIC;
        input_a_31_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_b_ce0 : OUT STD_LOGIC;
        input_b_q0 : IN STD_LOGIC_VECTOR (2591 downto 0);
        output_length : IN STD_LOGIC_VECTOR (2 downto 0);
        output_width : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_process_features_Pipeline_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_output_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv_output_ce0 : OUT STD_LOGIC;
        conv_output_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        feature_collection_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        feature_collection_ce0 : OUT STD_LOGIC;
        feature_collection_we0 : OUT STD_LOGIC;
        feature_collection_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        feature_collection_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        feature_collection_ce0 : OUT STD_LOGIC;
        feature_collection_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        output_buffer_ce0 : OUT STD_LOGIC;
        output_buffer_we0 : OUT STD_LOGIC;
        output_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_process_features_Pipeline_8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_buffer_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        output_buffer_ce0 : OUT STD_LOGIC;
        output_buffer_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        reshape_output_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        reshape_output_ce0 : OUT STD_LOGIC;
        reshape_output_we0 : OUT STD_LOGIC;
        reshape_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_squash IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_AWVALID : OUT STD_LOGIC;
        m_axi_gmem3_AWREADY : IN STD_LOGIC;
        m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WVALID : OUT STD_LOGIC;
        m_axi_gmem3_WREADY : IN STD_LOGIC;
        m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_WLAST : OUT STD_LOGIC;
        m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARVALID : OUT STD_LOGIC;
        m_axi_gmem3_ARREADY : IN STD_LOGIC;
        m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RVALID : IN STD_LOGIC;
        m_axi_gmem3_RREADY : OUT STD_LOGIC;
        m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem3_RLAST : IN STD_LOGIC;
        m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BVALID : IN STD_LOGIC;
        m_axi_gmem3_BREADY : OUT STD_LOGIC;
        m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        output_r : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component process_features_feature_collection_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_input_buffer_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address2 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address3 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address2 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_output_buffer_4_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_weight_buffer_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC_VECTOR (323 downto 0);
        d0 : IN STD_LOGIC_VECTOR (2591 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (2591 downto 0) );
    end component;


    component process_features_biases_buffer_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_features_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component process_features_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        input_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        biases : OUT STD_LOGIC_VECTOR (63 downto 0);
        output_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_continue : OUT STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component process_features_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (12 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component process_features_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (12 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component process_features_gmem2_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (12 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component process_features_gmem3_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (12 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;



begin
    feature_collection_U : component process_features_feature_collection_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => feature_collection_address0,
        ce0 => feature_collection_ce0,
        we0 => feature_collection_we0,
        d0 => grp_process_features_Pipeline_6_fu_539_feature_collection_d0,
        q0 => feature_collection_q0);

    output_buffer_U : component process_features_feature_collection_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => output_buffer_address0,
        ce0 => output_buffer_ce0,
        we0 => output_buffer_we0,
        d0 => grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_output_buffer_d0,
        q0 => output_buffer_q0);

    input_buffer_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_address0,
        ce0 => input_buffer_ce0,
        we0 => input_buffer_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_d0,
        q0 => input_buffer_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_0_address1,
        ce1 => input_buffer_ce1,
        q1 => input_buffer_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_0_address2,
        ce2 => input_buffer_ce2,
        q2 => input_buffer_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_0_address3,
        ce3 => input_buffer_ce3,
        q3 => input_buffer_q3);

    input_buffer_4_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_4_address0,
        ce0 => input_buffer_4_ce0,
        we0 => input_buffer_4_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_4_d0,
        q0 => input_buffer_4_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_1_address1,
        ce1 => input_buffer_4_ce1,
        q1 => input_buffer_4_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_1_address2,
        ce2 => input_buffer_4_ce2,
        q2 => input_buffer_4_q2);

    input_buffer_5_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_5_address0,
        ce0 => input_buffer_5_ce0,
        we0 => input_buffer_5_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_5_d0,
        q0 => input_buffer_5_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_2_address1,
        ce1 => input_buffer_5_ce1,
        q1 => input_buffer_5_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_2_address2,
        ce2 => input_buffer_5_ce2,
        q2 => input_buffer_5_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_2_address3,
        ce3 => input_buffer_5_ce3,
        q3 => input_buffer_5_q3);

    input_buffer_6_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_6_address0,
        ce0 => input_buffer_6_ce0,
        we0 => input_buffer_6_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_6_d0,
        q0 => input_buffer_6_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_3_address1,
        ce1 => input_buffer_6_ce1,
        q1 => input_buffer_6_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_3_address2,
        ce2 => input_buffer_6_ce2,
        q2 => input_buffer_6_q2);

    input_buffer_7_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_7_address0,
        ce0 => input_buffer_7_ce0,
        we0 => input_buffer_7_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_7_d0,
        q0 => input_buffer_7_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_4_address1,
        ce1 => input_buffer_7_ce1,
        q1 => input_buffer_7_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_4_address2,
        ce2 => input_buffer_7_ce2,
        q2 => input_buffer_7_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_4_address3,
        ce3 => input_buffer_7_ce3,
        q3 => input_buffer_7_q3);

    input_buffer_8_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_8_address0,
        ce0 => input_buffer_8_ce0,
        we0 => input_buffer_8_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_8_d0,
        q0 => input_buffer_8_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_5_address1,
        ce1 => input_buffer_8_ce1,
        q1 => input_buffer_8_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_5_address2,
        ce2 => input_buffer_8_ce2,
        q2 => input_buffer_8_q2);

    input_buffer_9_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_9_address0,
        ce0 => input_buffer_9_ce0,
        we0 => input_buffer_9_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_9_d0,
        q0 => input_buffer_9_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_6_address1,
        ce1 => input_buffer_9_ce1,
        q1 => input_buffer_9_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_6_address2,
        ce2 => input_buffer_9_ce2,
        q2 => input_buffer_9_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_6_address3,
        ce3 => input_buffer_9_ce3,
        q3 => input_buffer_9_q3);

    input_buffer_10_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_10_address0,
        ce0 => input_buffer_10_ce0,
        we0 => input_buffer_10_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_10_d0,
        q0 => input_buffer_10_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_7_address1,
        ce1 => input_buffer_10_ce1,
        q1 => input_buffer_10_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_7_address2,
        ce2 => input_buffer_10_ce2,
        q2 => input_buffer_10_q2);

    input_buffer_11_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_11_address0,
        ce0 => input_buffer_11_ce0,
        we0 => input_buffer_11_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_11_d0,
        q0 => input_buffer_11_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_8_address1,
        ce1 => input_buffer_11_ce1,
        q1 => input_buffer_11_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_8_address2,
        ce2 => input_buffer_11_ce2,
        q2 => input_buffer_11_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_8_address3,
        ce3 => input_buffer_11_ce3,
        q3 => input_buffer_11_q3);

    input_buffer_12_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_12_address0,
        ce0 => input_buffer_12_ce0,
        we0 => input_buffer_12_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_12_d0,
        q0 => input_buffer_12_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_9_address1,
        ce1 => input_buffer_12_ce1,
        q1 => input_buffer_12_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_9_address2,
        ce2 => input_buffer_12_ce2,
        q2 => input_buffer_12_q2);

    input_buffer_13_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_13_address0,
        ce0 => input_buffer_13_ce0,
        we0 => input_buffer_13_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_13_d0,
        q0 => input_buffer_13_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_10_address1,
        ce1 => input_buffer_13_ce1,
        q1 => input_buffer_13_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_10_address2,
        ce2 => input_buffer_13_ce2,
        q2 => input_buffer_13_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_10_address3,
        ce3 => input_buffer_13_ce3,
        q3 => input_buffer_13_q3);

    input_buffer_14_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_14_address0,
        ce0 => input_buffer_14_ce0,
        we0 => input_buffer_14_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_14_d0,
        q0 => input_buffer_14_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_11_address1,
        ce1 => input_buffer_14_ce1,
        q1 => input_buffer_14_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_11_address2,
        ce2 => input_buffer_14_ce2,
        q2 => input_buffer_14_q2);

    input_buffer_15_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_15_address0,
        ce0 => input_buffer_15_ce0,
        we0 => input_buffer_15_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_15_d0,
        q0 => input_buffer_15_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_12_address1,
        ce1 => input_buffer_15_ce1,
        q1 => input_buffer_15_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_12_address2,
        ce2 => input_buffer_15_ce2,
        q2 => input_buffer_15_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_12_address3,
        ce3 => input_buffer_15_ce3,
        q3 => input_buffer_15_q3);

    input_buffer_16_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_16_address0,
        ce0 => input_buffer_16_ce0,
        we0 => input_buffer_16_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_16_d0,
        q0 => input_buffer_16_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_13_address1,
        ce1 => input_buffer_16_ce1,
        q1 => input_buffer_16_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_13_address2,
        ce2 => input_buffer_16_ce2,
        q2 => input_buffer_16_q2);

    input_buffer_17_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_17_address0,
        ce0 => input_buffer_17_ce0,
        we0 => input_buffer_17_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_17_d0,
        q0 => input_buffer_17_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_14_address1,
        ce1 => input_buffer_17_ce1,
        q1 => input_buffer_17_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_14_address2,
        ce2 => input_buffer_17_ce2,
        q2 => input_buffer_17_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_14_address3,
        ce3 => input_buffer_17_ce3,
        q3 => input_buffer_17_q3);

    input_buffer_18_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_18_address0,
        ce0 => input_buffer_18_ce0,
        we0 => input_buffer_18_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_18_d0,
        q0 => input_buffer_18_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_15_address1,
        ce1 => input_buffer_18_ce1,
        q1 => input_buffer_18_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_15_address2,
        ce2 => input_buffer_18_ce2,
        q2 => input_buffer_18_q2);

    input_buffer_19_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_19_address0,
        ce0 => input_buffer_19_ce0,
        we0 => input_buffer_19_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_19_d0,
        q0 => input_buffer_19_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_16_address1,
        ce1 => input_buffer_19_ce1,
        q1 => input_buffer_19_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_16_address2,
        ce2 => input_buffer_19_ce2,
        q2 => input_buffer_19_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_16_address3,
        ce3 => input_buffer_19_ce3,
        q3 => input_buffer_19_q3);

    input_buffer_20_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_20_address0,
        ce0 => input_buffer_20_ce0,
        we0 => input_buffer_20_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_20_d0,
        q0 => input_buffer_20_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_17_address1,
        ce1 => input_buffer_20_ce1,
        q1 => input_buffer_20_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_17_address2,
        ce2 => input_buffer_20_ce2,
        q2 => input_buffer_20_q2);

    input_buffer_21_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_21_address0,
        ce0 => input_buffer_21_ce0,
        we0 => input_buffer_21_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_21_d0,
        q0 => input_buffer_21_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_18_address1,
        ce1 => input_buffer_21_ce1,
        q1 => input_buffer_21_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_18_address2,
        ce2 => input_buffer_21_ce2,
        q2 => input_buffer_21_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_18_address3,
        ce3 => input_buffer_21_ce3,
        q3 => input_buffer_21_q3);

    input_buffer_22_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_22_address0,
        ce0 => input_buffer_22_ce0,
        we0 => input_buffer_22_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_22_d0,
        q0 => input_buffer_22_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_19_address1,
        ce1 => input_buffer_22_ce1,
        q1 => input_buffer_22_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_19_address2,
        ce2 => input_buffer_22_ce2,
        q2 => input_buffer_22_q2);

    input_buffer_23_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_23_address0,
        ce0 => input_buffer_23_ce0,
        we0 => input_buffer_23_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_23_d0,
        q0 => input_buffer_23_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_20_address1,
        ce1 => input_buffer_23_ce1,
        q1 => input_buffer_23_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_20_address2,
        ce2 => input_buffer_23_ce2,
        q2 => input_buffer_23_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_20_address3,
        ce3 => input_buffer_23_ce3,
        q3 => input_buffer_23_q3);

    input_buffer_24_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_24_address0,
        ce0 => input_buffer_24_ce0,
        we0 => input_buffer_24_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_24_d0,
        q0 => input_buffer_24_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_21_address1,
        ce1 => input_buffer_24_ce1,
        q1 => input_buffer_24_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_21_address2,
        ce2 => input_buffer_24_ce2,
        q2 => input_buffer_24_q2);

    input_buffer_25_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_25_address0,
        ce0 => input_buffer_25_ce0,
        we0 => input_buffer_25_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_25_d0,
        q0 => input_buffer_25_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_22_address1,
        ce1 => input_buffer_25_ce1,
        q1 => input_buffer_25_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_22_address2,
        ce2 => input_buffer_25_ce2,
        q2 => input_buffer_25_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_22_address3,
        ce3 => input_buffer_25_ce3,
        q3 => input_buffer_25_q3);

    input_buffer_26_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_26_address0,
        ce0 => input_buffer_26_ce0,
        we0 => input_buffer_26_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_26_d0,
        q0 => input_buffer_26_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_23_address1,
        ce1 => input_buffer_26_ce1,
        q1 => input_buffer_26_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_23_address2,
        ce2 => input_buffer_26_ce2,
        q2 => input_buffer_26_q2);

    input_buffer_27_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_27_address0,
        ce0 => input_buffer_27_ce0,
        we0 => input_buffer_27_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_27_d0,
        q0 => input_buffer_27_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_24_address1,
        ce1 => input_buffer_27_ce1,
        q1 => input_buffer_27_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_24_address2,
        ce2 => input_buffer_27_ce2,
        q2 => input_buffer_27_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_24_address3,
        ce3 => input_buffer_27_ce3,
        q3 => input_buffer_27_q3);

    input_buffer_28_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_28_address0,
        ce0 => input_buffer_28_ce0,
        we0 => input_buffer_28_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_28_d0,
        q0 => input_buffer_28_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_25_address1,
        ce1 => input_buffer_28_ce1,
        q1 => input_buffer_28_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_25_address2,
        ce2 => input_buffer_28_ce2,
        q2 => input_buffer_28_q2);

    input_buffer_29_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_29_address0,
        ce0 => input_buffer_29_ce0,
        we0 => input_buffer_29_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_29_d0,
        q0 => input_buffer_29_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_26_address1,
        ce1 => input_buffer_29_ce1,
        q1 => input_buffer_29_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_26_address2,
        ce2 => input_buffer_29_ce2,
        q2 => input_buffer_29_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_26_address3,
        ce3 => input_buffer_29_ce3,
        q3 => input_buffer_29_q3);

    input_buffer_30_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_30_address0,
        ce0 => input_buffer_30_ce0,
        we0 => input_buffer_30_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_30_d0,
        q0 => input_buffer_30_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_27_address1,
        ce1 => input_buffer_30_ce1,
        q1 => input_buffer_30_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_27_address2,
        ce2 => input_buffer_30_ce2,
        q2 => input_buffer_30_q2);

    input_buffer_31_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_31_address0,
        ce0 => input_buffer_31_ce0,
        we0 => input_buffer_31_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_31_d0,
        q0 => input_buffer_31_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_28_address1,
        ce1 => input_buffer_31_ce1,
        q1 => input_buffer_31_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_28_address2,
        ce2 => input_buffer_31_ce2,
        q2 => input_buffer_31_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_28_address3,
        ce3 => input_buffer_31_ce3,
        q3 => input_buffer_31_q3);

    input_buffer_32_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_32_address0,
        ce0 => input_buffer_32_ce0,
        we0 => input_buffer_32_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_32_d0,
        q0 => input_buffer_32_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_29_address1,
        ce1 => input_buffer_32_ce1,
        q1 => input_buffer_32_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_29_address2,
        ce2 => input_buffer_32_ce2,
        q2 => input_buffer_32_q2);

    input_buffer_33_U : component process_features_input_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_33_address0,
        ce0 => input_buffer_33_ce0,
        we0 => input_buffer_33_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_33_d0,
        q0 => input_buffer_33_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_30_address1,
        ce1 => input_buffer_33_ce1,
        q1 => input_buffer_33_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_30_address2,
        ce2 => input_buffer_33_ce2,
        q2 => input_buffer_33_q2,
        address3 => grp_calculate_single_value_fu_498_input_a_30_address3,
        ce3 => input_buffer_33_ce3,
        q3 => input_buffer_33_q3);

    input_buffer_34_U : component process_features_input_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3200,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_buffer_34_address0,
        ce0 => input_buffer_34_ce0,
        we0 => input_buffer_34_we0,
        d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_34_d0,
        q0 => input_buffer_34_q0,
        address1 => grp_calculate_single_value_fu_498_input_a_31_address1,
        ce1 => input_buffer_34_ce1,
        q1 => input_buffer_34_q1,
        address2 => grp_calculate_single_value_fu_498_input_a_31_address2,
        ce2 => input_buffer_34_ce2,
        q2 => input_buffer_34_q2);

    output_buffer_4_U : component process_features_output_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => output_buffer_4_address0,
        ce0 => output_buffer_4_ce0,
        we0 => output_buffer_4_we0_local,
        d0 => add_ln116_fu_772_p2,
        q0 => output_buffer_4_q0);

    weight_buffer_U : component process_features_weight_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 2592,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => weight_buffer_address0,
        ce0 => weight_buffer_ce0,
        we0 => weight_buffer_we0,
        d0 => grp_process_features_Pipeline_conv_weights_fu_486_weight_buffer_d0,
        q0 => weight_buffer_q0);

    biases_buffer_U : component process_features_biases_buffer_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => biases_buffer_address0,
        ce0 => biases_buffer_ce0,
        we0 => biases_buffer_we0,
        d0 => grp_process_features_Pipeline_3_fu_478_biases_buffer_d0,
        q0 => biases_buffer_q0);

    conv_output_U : component process_features_output_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_output_address0,
        ce0 => conv_output_ce0,
        we0 => conv_output_we0,
        d0 => grp_process_features_Pipeline_5_fu_492_conv_output_d0,
        q0 => conv_output_q0);

    reshape_output_U : component process_features_output_buffer_4_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => reshape_output_address0,
        ce0 => reshape_output_ce0,
        we0 => reshape_output_we0,
        d0 => grp_process_features_Pipeline_8_fu_551_reshape_output_d0,
        q0 => reshape_output_q0);

    grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431 : component process_features_process_features_Pipeline_VITIS_LOOP_190_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_start,
        ap_done => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_done,
        ap_idle => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_idle,
        ap_ready => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_ready,
        m_axi_gmem1_AWVALID => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => gmem1_RDATA,
        m_axi_gmem1_RLAST => ap_const_logic_0,
        m_axi_gmem1_RID => ap_const_lv1_0,
        m_axi_gmem1_RFIFONUM => gmem1_RFIFONUM,
        m_axi_gmem1_RUSER => ap_const_lv1_0,
        m_axi_gmem1_RRESP => ap_const_lv2_0,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        weights_stream_din => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_weights_stream_din,
        weights_stream_full_n => weights_stream_full_n,
        weights_stream_write => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_weights_stream_write,
        sext_ln190 => trunc_ln_reg_810);

    grp_process_features_Pipeline_2_fu_439 : component process_features_process_features_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_process_features_Pipeline_2_fu_439_ap_start,
        ap_done => grp_process_features_Pipeline_2_fu_439_ap_done,
        ap_idle => grp_process_features_Pipeline_2_fu_439_ap_idle,
        ap_ready => grp_process_features_Pipeline_2_fu_439_ap_ready,
        m_axi_gmem0_AWVALID => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        input_buffer_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_address0,
        input_buffer_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_ce0,
        input_buffer_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_we0,
        input_buffer_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_d0,
        input_buffer_4_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_4_address0,
        input_buffer_4_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_4_ce0,
        input_buffer_4_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_4_we0,
        input_buffer_4_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_4_d0,
        input_buffer_5_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_5_address0,
        input_buffer_5_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_5_ce0,
        input_buffer_5_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_5_we0,
        input_buffer_5_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_5_d0,
        input_buffer_6_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_6_address0,
        input_buffer_6_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_6_ce0,
        input_buffer_6_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_6_we0,
        input_buffer_6_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_6_d0,
        input_buffer_7_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_7_address0,
        input_buffer_7_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_7_ce0,
        input_buffer_7_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_7_we0,
        input_buffer_7_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_7_d0,
        input_buffer_8_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_8_address0,
        input_buffer_8_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_8_ce0,
        input_buffer_8_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_8_we0,
        input_buffer_8_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_8_d0,
        input_buffer_9_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_9_address0,
        input_buffer_9_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_9_ce0,
        input_buffer_9_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_9_we0,
        input_buffer_9_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_9_d0,
        input_buffer_10_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_10_address0,
        input_buffer_10_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_10_ce0,
        input_buffer_10_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_10_we0,
        input_buffer_10_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_10_d0,
        input_buffer_11_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_11_address0,
        input_buffer_11_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_11_ce0,
        input_buffer_11_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_11_we0,
        input_buffer_11_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_11_d0,
        input_buffer_12_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_12_address0,
        input_buffer_12_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_12_ce0,
        input_buffer_12_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_12_we0,
        input_buffer_12_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_12_d0,
        input_buffer_13_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_13_address0,
        input_buffer_13_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_13_ce0,
        input_buffer_13_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_13_we0,
        input_buffer_13_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_13_d0,
        input_buffer_14_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_14_address0,
        input_buffer_14_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_14_ce0,
        input_buffer_14_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_14_we0,
        input_buffer_14_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_14_d0,
        input_buffer_15_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_15_address0,
        input_buffer_15_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_15_ce0,
        input_buffer_15_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_15_we0,
        input_buffer_15_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_15_d0,
        input_buffer_16_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_16_address0,
        input_buffer_16_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_16_ce0,
        input_buffer_16_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_16_we0,
        input_buffer_16_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_16_d0,
        input_buffer_17_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_17_address0,
        input_buffer_17_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_17_ce0,
        input_buffer_17_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_17_we0,
        input_buffer_17_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_17_d0,
        input_buffer_18_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_18_address0,
        input_buffer_18_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_18_ce0,
        input_buffer_18_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_18_we0,
        input_buffer_18_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_18_d0,
        input_buffer_19_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_19_address0,
        input_buffer_19_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_19_ce0,
        input_buffer_19_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_19_we0,
        input_buffer_19_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_19_d0,
        input_buffer_20_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_20_address0,
        input_buffer_20_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_20_ce0,
        input_buffer_20_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_20_we0,
        input_buffer_20_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_20_d0,
        input_buffer_21_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_21_address0,
        input_buffer_21_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_21_ce0,
        input_buffer_21_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_21_we0,
        input_buffer_21_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_21_d0,
        input_buffer_22_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_22_address0,
        input_buffer_22_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_22_ce0,
        input_buffer_22_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_22_we0,
        input_buffer_22_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_22_d0,
        input_buffer_23_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_23_address0,
        input_buffer_23_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_23_ce0,
        input_buffer_23_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_23_we0,
        input_buffer_23_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_23_d0,
        input_buffer_24_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_24_address0,
        input_buffer_24_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_24_ce0,
        input_buffer_24_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_24_we0,
        input_buffer_24_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_24_d0,
        input_buffer_25_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_25_address0,
        input_buffer_25_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_25_ce0,
        input_buffer_25_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_25_we0,
        input_buffer_25_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_25_d0,
        input_buffer_26_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_26_address0,
        input_buffer_26_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_26_ce0,
        input_buffer_26_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_26_we0,
        input_buffer_26_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_26_d0,
        input_buffer_27_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_27_address0,
        input_buffer_27_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_27_ce0,
        input_buffer_27_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_27_we0,
        input_buffer_27_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_27_d0,
        input_buffer_28_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_28_address0,
        input_buffer_28_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_28_ce0,
        input_buffer_28_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_28_we0,
        input_buffer_28_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_28_d0,
        input_buffer_29_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_29_address0,
        input_buffer_29_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_29_ce0,
        input_buffer_29_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_29_we0,
        input_buffer_29_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_29_d0,
        input_buffer_30_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_30_address0,
        input_buffer_30_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_30_ce0,
        input_buffer_30_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_30_we0,
        input_buffer_30_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_30_d0,
        input_buffer_31_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_31_address0,
        input_buffer_31_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_31_ce0,
        input_buffer_31_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_31_we0,
        input_buffer_31_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_31_d0,
        input_buffer_32_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_32_address0,
        input_buffer_32_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_32_ce0,
        input_buffer_32_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_32_we0,
        input_buffer_32_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_32_d0,
        input_buffer_33_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_33_address0,
        input_buffer_33_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_33_ce0,
        input_buffer_33_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_33_we0,
        input_buffer_33_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_33_d0,
        input_buffer_34_address0 => grp_process_features_Pipeline_2_fu_439_input_buffer_34_address0,
        input_buffer_34_ce0 => grp_process_features_Pipeline_2_fu_439_input_buffer_34_ce0,
        input_buffer_34_we0 => grp_process_features_Pipeline_2_fu_439_input_buffer_34_we0,
        input_buffer_34_d0 => grp_process_features_Pipeline_2_fu_439_input_buffer_34_d0,
        sext_ln85 => trunc_ln4_reg_820);

    grp_process_features_Pipeline_3_fu_478 : component process_features_process_features_Pipeline_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_process_features_Pipeline_3_fu_478_ap_start,
        ap_done => grp_process_features_Pipeline_3_fu_478_ap_done,
        ap_idle => grp_process_features_Pipeline_3_fu_478_ap_idle,
        ap_ready => grp_process_features_Pipeline_3_fu_478_ap_ready,
        m_axi_gmem2_AWVALID => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY => ap_const_logic_0,
        m_axi_gmem2_AWADDR => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY => ap_const_logic_0,
        m_axi_gmem2_WDATA => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_WLAST,
        m_axi_gmem2_WID => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_WID,
        m_axi_gmem2_WUSER => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY => gmem2_ARREADY,
        m_axi_gmem2_ARADDR => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID => gmem2_RVALID,
        m_axi_gmem2_RREADY => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA => gmem2_RDATA,
        m_axi_gmem2_RLAST => ap_const_logic_0,
        m_axi_gmem2_RID => ap_const_lv1_0,
        m_axi_gmem2_RFIFONUM => gmem2_RFIFONUM,
        m_axi_gmem2_RUSER => ap_const_lv1_0,
        m_axi_gmem2_RRESP => ap_const_lv2_0,
        m_axi_gmem2_BVALID => ap_const_logic_0,
        m_axi_gmem2_BREADY => grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP => ap_const_lv2_0,
        m_axi_gmem2_BID => ap_const_lv1_0,
        m_axi_gmem2_BUSER => ap_const_lv1_0,
        biases_buffer_address0 => grp_process_features_Pipeline_3_fu_478_biases_buffer_address0,
        biases_buffer_ce0 => grp_process_features_Pipeline_3_fu_478_biases_buffer_ce0,
        biases_buffer_we0 => grp_process_features_Pipeline_3_fu_478_biases_buffer_we0,
        biases_buffer_d0 => grp_process_features_Pipeline_3_fu_478_biases_buffer_d0,
        sext_ln86 => trunc_ln6_reg_826);

    grp_process_features_Pipeline_conv_weights_fu_486 : component process_features_process_features_Pipeline_conv_weights
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_process_features_Pipeline_conv_weights_fu_486_ap_start,
        ap_done => grp_process_features_Pipeline_conv_weights_fu_486_ap_done,
        ap_idle => grp_process_features_Pipeline_conv_weights_fu_486_ap_idle,
        ap_ready => grp_process_features_Pipeline_conv_weights_fu_486_ap_ready,
        weights_stream_dout => weights_stream_dout,
        weights_stream_empty_n => weights_stream_empty_n,
        weights_stream_read => grp_process_features_Pipeline_conv_weights_fu_486_weights_stream_read,
        weight_buffer_address0 => grp_process_features_Pipeline_conv_weights_fu_486_weight_buffer_address0,
        weight_buffer_ce0 => grp_process_features_Pipeline_conv_weights_fu_486_weight_buffer_ce0,
        weight_buffer_we0 => grp_process_features_Pipeline_conv_weights_fu_486_weight_buffer_we0,
        weight_buffer_d0 => grp_process_features_Pipeline_conv_weights_fu_486_weight_buffer_d0);

    grp_process_features_Pipeline_5_fu_492 : component process_features_process_features_Pipeline_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_process_features_Pipeline_5_fu_492_ap_start,
        ap_done => grp_process_features_Pipeline_5_fu_492_ap_done,
        ap_idle => grp_process_features_Pipeline_5_fu_492_ap_idle,
        ap_ready => grp_process_features_Pipeline_5_fu_492_ap_ready,
        output_buffer_4_address0 => grp_process_features_Pipeline_5_fu_492_output_buffer_4_address0,
        output_buffer_4_ce0 => grp_process_features_Pipeline_5_fu_492_output_buffer_4_ce0,
        output_buffer_4_q0 => output_buffer_4_q0,
        conv_output_address0 => grp_process_features_Pipeline_5_fu_492_conv_output_address0,
        conv_output_ce0 => grp_process_features_Pipeline_5_fu_492_conv_output_ce0,
        conv_output_we0 => grp_process_features_Pipeline_5_fu_492_conv_output_we0,
        conv_output_d0 => grp_process_features_Pipeline_5_fu_492_conv_output_d0);

    grp_calculate_single_value_fu_498 : component process_features_calculate_single_value
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_calculate_single_value_fu_498_ap_start,
        ap_done => grp_calculate_single_value_fu_498_ap_done,
        ap_idle => grp_calculate_single_value_fu_498_ap_idle,
        ap_ready => grp_calculate_single_value_fu_498_ap_ready,
        input_a_0_address0 => grp_calculate_single_value_fu_498_input_a_0_address0,
        input_a_0_ce0 => grp_calculate_single_value_fu_498_input_a_0_ce0,
        input_a_0_q0 => input_buffer_q0,
        input_a_0_address1 => grp_calculate_single_value_fu_498_input_a_0_address1,
        input_a_0_ce1 => grp_calculate_single_value_fu_498_input_a_0_ce1,
        input_a_0_q1 => input_buffer_q1,
        input_a_0_address2 => grp_calculate_single_value_fu_498_input_a_0_address2,
        input_a_0_ce2 => grp_calculate_single_value_fu_498_input_a_0_ce2,
        input_a_0_q2 => input_buffer_q2,
        input_a_0_address3 => grp_calculate_single_value_fu_498_input_a_0_address3,
        input_a_0_ce3 => grp_calculate_single_value_fu_498_input_a_0_ce3,
        input_a_0_q3 => input_buffer_q3,
        input_a_1_address0 => grp_calculate_single_value_fu_498_input_a_1_address0,
        input_a_1_ce0 => grp_calculate_single_value_fu_498_input_a_1_ce0,
        input_a_1_q0 => input_buffer_4_q0,
        input_a_1_address1 => grp_calculate_single_value_fu_498_input_a_1_address1,
        input_a_1_ce1 => grp_calculate_single_value_fu_498_input_a_1_ce1,
        input_a_1_q1 => input_buffer_4_q1,
        input_a_1_address2 => grp_calculate_single_value_fu_498_input_a_1_address2,
        input_a_1_ce2 => grp_calculate_single_value_fu_498_input_a_1_ce2,
        input_a_1_q2 => input_buffer_4_q2,
        input_a_2_address0 => grp_calculate_single_value_fu_498_input_a_2_address0,
        input_a_2_ce0 => grp_calculate_single_value_fu_498_input_a_2_ce0,
        input_a_2_q0 => input_buffer_5_q0,
        input_a_2_address1 => grp_calculate_single_value_fu_498_input_a_2_address1,
        input_a_2_ce1 => grp_calculate_single_value_fu_498_input_a_2_ce1,
        input_a_2_q1 => input_buffer_5_q1,
        input_a_2_address2 => grp_calculate_single_value_fu_498_input_a_2_address2,
        input_a_2_ce2 => grp_calculate_single_value_fu_498_input_a_2_ce2,
        input_a_2_q2 => input_buffer_5_q2,
        input_a_2_address3 => grp_calculate_single_value_fu_498_input_a_2_address3,
        input_a_2_ce3 => grp_calculate_single_value_fu_498_input_a_2_ce3,
        input_a_2_q3 => input_buffer_5_q3,
        input_a_3_address0 => grp_calculate_single_value_fu_498_input_a_3_address0,
        input_a_3_ce0 => grp_calculate_single_value_fu_498_input_a_3_ce0,
        input_a_3_q0 => input_buffer_6_q0,
        input_a_3_address1 => grp_calculate_single_value_fu_498_input_a_3_address1,
        input_a_3_ce1 => grp_calculate_single_value_fu_498_input_a_3_ce1,
        input_a_3_q1 => input_buffer_6_q1,
        input_a_3_address2 => grp_calculate_single_value_fu_498_input_a_3_address2,
        input_a_3_ce2 => grp_calculate_single_value_fu_498_input_a_3_ce2,
        input_a_3_q2 => input_buffer_6_q2,
        input_a_4_address0 => grp_calculate_single_value_fu_498_input_a_4_address0,
        input_a_4_ce0 => grp_calculate_single_value_fu_498_input_a_4_ce0,
        input_a_4_q0 => input_buffer_7_q0,
        input_a_4_address1 => grp_calculate_single_value_fu_498_input_a_4_address1,
        input_a_4_ce1 => grp_calculate_single_value_fu_498_input_a_4_ce1,
        input_a_4_q1 => input_buffer_7_q1,
        input_a_4_address2 => grp_calculate_single_value_fu_498_input_a_4_address2,
        input_a_4_ce2 => grp_calculate_single_value_fu_498_input_a_4_ce2,
        input_a_4_q2 => input_buffer_7_q2,
        input_a_4_address3 => grp_calculate_single_value_fu_498_input_a_4_address3,
        input_a_4_ce3 => grp_calculate_single_value_fu_498_input_a_4_ce3,
        input_a_4_q3 => input_buffer_7_q3,
        input_a_5_address0 => grp_calculate_single_value_fu_498_input_a_5_address0,
        input_a_5_ce0 => grp_calculate_single_value_fu_498_input_a_5_ce0,
        input_a_5_q0 => input_buffer_8_q0,
        input_a_5_address1 => grp_calculate_single_value_fu_498_input_a_5_address1,
        input_a_5_ce1 => grp_calculate_single_value_fu_498_input_a_5_ce1,
        input_a_5_q1 => input_buffer_8_q1,
        input_a_5_address2 => grp_calculate_single_value_fu_498_input_a_5_address2,
        input_a_5_ce2 => grp_calculate_single_value_fu_498_input_a_5_ce2,
        input_a_5_q2 => input_buffer_8_q2,
        input_a_6_address0 => grp_calculate_single_value_fu_498_input_a_6_address0,
        input_a_6_ce0 => grp_calculate_single_value_fu_498_input_a_6_ce0,
        input_a_6_q0 => input_buffer_9_q0,
        input_a_6_address1 => grp_calculate_single_value_fu_498_input_a_6_address1,
        input_a_6_ce1 => grp_calculate_single_value_fu_498_input_a_6_ce1,
        input_a_6_q1 => input_buffer_9_q1,
        input_a_6_address2 => grp_calculate_single_value_fu_498_input_a_6_address2,
        input_a_6_ce2 => grp_calculate_single_value_fu_498_input_a_6_ce2,
        input_a_6_q2 => input_buffer_9_q2,
        input_a_6_address3 => grp_calculate_single_value_fu_498_input_a_6_address3,
        input_a_6_ce3 => grp_calculate_single_value_fu_498_input_a_6_ce3,
        input_a_6_q3 => input_buffer_9_q3,
        input_a_7_address0 => grp_calculate_single_value_fu_498_input_a_7_address0,
        input_a_7_ce0 => grp_calculate_single_value_fu_498_input_a_7_ce0,
        input_a_7_q0 => input_buffer_10_q0,
        input_a_7_address1 => grp_calculate_single_value_fu_498_input_a_7_address1,
        input_a_7_ce1 => grp_calculate_single_value_fu_498_input_a_7_ce1,
        input_a_7_q1 => input_buffer_10_q1,
        input_a_7_address2 => grp_calculate_single_value_fu_498_input_a_7_address2,
        input_a_7_ce2 => grp_calculate_single_value_fu_498_input_a_7_ce2,
        input_a_7_q2 => input_buffer_10_q2,
        input_a_8_address0 => grp_calculate_single_value_fu_498_input_a_8_address0,
        input_a_8_ce0 => grp_calculate_single_value_fu_498_input_a_8_ce0,
        input_a_8_q0 => input_buffer_11_q0,
        input_a_8_address1 => grp_calculate_single_value_fu_498_input_a_8_address1,
        input_a_8_ce1 => grp_calculate_single_value_fu_498_input_a_8_ce1,
        input_a_8_q1 => input_buffer_11_q1,
        input_a_8_address2 => grp_calculate_single_value_fu_498_input_a_8_address2,
        input_a_8_ce2 => grp_calculate_single_value_fu_498_input_a_8_ce2,
        input_a_8_q2 => input_buffer_11_q2,
        input_a_8_address3 => grp_calculate_single_value_fu_498_input_a_8_address3,
        input_a_8_ce3 => grp_calculate_single_value_fu_498_input_a_8_ce3,
        input_a_8_q3 => input_buffer_11_q3,
        input_a_9_address0 => grp_calculate_single_value_fu_498_input_a_9_address0,
        input_a_9_ce0 => grp_calculate_single_value_fu_498_input_a_9_ce0,
        input_a_9_q0 => input_buffer_12_q0,
        input_a_9_address1 => grp_calculate_single_value_fu_498_input_a_9_address1,
        input_a_9_ce1 => grp_calculate_single_value_fu_498_input_a_9_ce1,
        input_a_9_q1 => input_buffer_12_q1,
        input_a_9_address2 => grp_calculate_single_value_fu_498_input_a_9_address2,
        input_a_9_ce2 => grp_calculate_single_value_fu_498_input_a_9_ce2,
        input_a_9_q2 => input_buffer_12_q2,
        input_a_10_address0 => grp_calculate_single_value_fu_498_input_a_10_address0,
        input_a_10_ce0 => grp_calculate_single_value_fu_498_input_a_10_ce0,
        input_a_10_q0 => input_buffer_13_q0,
        input_a_10_address1 => grp_calculate_single_value_fu_498_input_a_10_address1,
        input_a_10_ce1 => grp_calculate_single_value_fu_498_input_a_10_ce1,
        input_a_10_q1 => input_buffer_13_q1,
        input_a_10_address2 => grp_calculate_single_value_fu_498_input_a_10_address2,
        input_a_10_ce2 => grp_calculate_single_value_fu_498_input_a_10_ce2,
        input_a_10_q2 => input_buffer_13_q2,
        input_a_10_address3 => grp_calculate_single_value_fu_498_input_a_10_address3,
        input_a_10_ce3 => grp_calculate_single_value_fu_498_input_a_10_ce3,
        input_a_10_q3 => input_buffer_13_q3,
        input_a_11_address0 => grp_calculate_single_value_fu_498_input_a_11_address0,
        input_a_11_ce0 => grp_calculate_single_value_fu_498_input_a_11_ce0,
        input_a_11_q0 => input_buffer_14_q0,
        input_a_11_address1 => grp_calculate_single_value_fu_498_input_a_11_address1,
        input_a_11_ce1 => grp_calculate_single_value_fu_498_input_a_11_ce1,
        input_a_11_q1 => input_buffer_14_q1,
        input_a_11_address2 => grp_calculate_single_value_fu_498_input_a_11_address2,
        input_a_11_ce2 => grp_calculate_single_value_fu_498_input_a_11_ce2,
        input_a_11_q2 => input_buffer_14_q2,
        input_a_12_address0 => grp_calculate_single_value_fu_498_input_a_12_address0,
        input_a_12_ce0 => grp_calculate_single_value_fu_498_input_a_12_ce0,
        input_a_12_q0 => input_buffer_15_q0,
        input_a_12_address1 => grp_calculate_single_value_fu_498_input_a_12_address1,
        input_a_12_ce1 => grp_calculate_single_value_fu_498_input_a_12_ce1,
        input_a_12_q1 => input_buffer_15_q1,
        input_a_12_address2 => grp_calculate_single_value_fu_498_input_a_12_address2,
        input_a_12_ce2 => grp_calculate_single_value_fu_498_input_a_12_ce2,
        input_a_12_q2 => input_buffer_15_q2,
        input_a_12_address3 => grp_calculate_single_value_fu_498_input_a_12_address3,
        input_a_12_ce3 => grp_calculate_single_value_fu_498_input_a_12_ce3,
        input_a_12_q3 => input_buffer_15_q3,
        input_a_13_address0 => grp_calculate_single_value_fu_498_input_a_13_address0,
        input_a_13_ce0 => grp_calculate_single_value_fu_498_input_a_13_ce0,
        input_a_13_q0 => input_buffer_16_q0,
        input_a_13_address1 => grp_calculate_single_value_fu_498_input_a_13_address1,
        input_a_13_ce1 => grp_calculate_single_value_fu_498_input_a_13_ce1,
        input_a_13_q1 => input_buffer_16_q1,
        input_a_13_address2 => grp_calculate_single_value_fu_498_input_a_13_address2,
        input_a_13_ce2 => grp_calculate_single_value_fu_498_input_a_13_ce2,
        input_a_13_q2 => input_buffer_16_q2,
        input_a_14_address0 => grp_calculate_single_value_fu_498_input_a_14_address0,
        input_a_14_ce0 => grp_calculate_single_value_fu_498_input_a_14_ce0,
        input_a_14_q0 => input_buffer_17_q0,
        input_a_14_address1 => grp_calculate_single_value_fu_498_input_a_14_address1,
        input_a_14_ce1 => grp_calculate_single_value_fu_498_input_a_14_ce1,
        input_a_14_q1 => input_buffer_17_q1,
        input_a_14_address2 => grp_calculate_single_value_fu_498_input_a_14_address2,
        input_a_14_ce2 => grp_calculate_single_value_fu_498_input_a_14_ce2,
        input_a_14_q2 => input_buffer_17_q2,
        input_a_14_address3 => grp_calculate_single_value_fu_498_input_a_14_address3,
        input_a_14_ce3 => grp_calculate_single_value_fu_498_input_a_14_ce3,
        input_a_14_q3 => input_buffer_17_q3,
        input_a_15_address0 => grp_calculate_single_value_fu_498_input_a_15_address0,
        input_a_15_ce0 => grp_calculate_single_value_fu_498_input_a_15_ce0,
        input_a_15_q0 => input_buffer_18_q0,
        input_a_15_address1 => grp_calculate_single_value_fu_498_input_a_15_address1,
        input_a_15_ce1 => grp_calculate_single_value_fu_498_input_a_15_ce1,
        input_a_15_q1 => input_buffer_18_q1,
        input_a_15_address2 => grp_calculate_single_value_fu_498_input_a_15_address2,
        input_a_15_ce2 => grp_calculate_single_value_fu_498_input_a_15_ce2,
        input_a_15_q2 => input_buffer_18_q2,
        input_a_16_address0 => grp_calculate_single_value_fu_498_input_a_16_address0,
        input_a_16_ce0 => grp_calculate_single_value_fu_498_input_a_16_ce0,
        input_a_16_q0 => input_buffer_19_q0,
        input_a_16_address1 => grp_calculate_single_value_fu_498_input_a_16_address1,
        input_a_16_ce1 => grp_calculate_single_value_fu_498_input_a_16_ce1,
        input_a_16_q1 => input_buffer_19_q1,
        input_a_16_address2 => grp_calculate_single_value_fu_498_input_a_16_address2,
        input_a_16_ce2 => grp_calculate_single_value_fu_498_input_a_16_ce2,
        input_a_16_q2 => input_buffer_19_q2,
        input_a_16_address3 => grp_calculate_single_value_fu_498_input_a_16_address3,
        input_a_16_ce3 => grp_calculate_single_value_fu_498_input_a_16_ce3,
        input_a_16_q3 => input_buffer_19_q3,
        input_a_17_address0 => grp_calculate_single_value_fu_498_input_a_17_address0,
        input_a_17_ce0 => grp_calculate_single_value_fu_498_input_a_17_ce0,
        input_a_17_q0 => input_buffer_20_q0,
        input_a_17_address1 => grp_calculate_single_value_fu_498_input_a_17_address1,
        input_a_17_ce1 => grp_calculate_single_value_fu_498_input_a_17_ce1,
        input_a_17_q1 => input_buffer_20_q1,
        input_a_17_address2 => grp_calculate_single_value_fu_498_input_a_17_address2,
        input_a_17_ce2 => grp_calculate_single_value_fu_498_input_a_17_ce2,
        input_a_17_q2 => input_buffer_20_q2,
        input_a_18_address0 => grp_calculate_single_value_fu_498_input_a_18_address0,
        input_a_18_ce0 => grp_calculate_single_value_fu_498_input_a_18_ce0,
        input_a_18_q0 => input_buffer_21_q0,
        input_a_18_address1 => grp_calculate_single_value_fu_498_input_a_18_address1,
        input_a_18_ce1 => grp_calculate_single_value_fu_498_input_a_18_ce1,
        input_a_18_q1 => input_buffer_21_q1,
        input_a_18_address2 => grp_calculate_single_value_fu_498_input_a_18_address2,
        input_a_18_ce2 => grp_calculate_single_value_fu_498_input_a_18_ce2,
        input_a_18_q2 => input_buffer_21_q2,
        input_a_18_address3 => grp_calculate_single_value_fu_498_input_a_18_address3,
        input_a_18_ce3 => grp_calculate_single_value_fu_498_input_a_18_ce3,
        input_a_18_q3 => input_buffer_21_q3,
        input_a_19_address0 => grp_calculate_single_value_fu_498_input_a_19_address0,
        input_a_19_ce0 => grp_calculate_single_value_fu_498_input_a_19_ce0,
        input_a_19_q0 => input_buffer_22_q0,
        input_a_19_address1 => grp_calculate_single_value_fu_498_input_a_19_address1,
        input_a_19_ce1 => grp_calculate_single_value_fu_498_input_a_19_ce1,
        input_a_19_q1 => input_buffer_22_q1,
        input_a_19_address2 => grp_calculate_single_value_fu_498_input_a_19_address2,
        input_a_19_ce2 => grp_calculate_single_value_fu_498_input_a_19_ce2,
        input_a_19_q2 => input_buffer_22_q2,
        input_a_20_address0 => grp_calculate_single_value_fu_498_input_a_20_address0,
        input_a_20_ce0 => grp_calculate_single_value_fu_498_input_a_20_ce0,
        input_a_20_q0 => input_buffer_23_q0,
        input_a_20_address1 => grp_calculate_single_value_fu_498_input_a_20_address1,
        input_a_20_ce1 => grp_calculate_single_value_fu_498_input_a_20_ce1,
        input_a_20_q1 => input_buffer_23_q1,
        input_a_20_address2 => grp_calculate_single_value_fu_498_input_a_20_address2,
        input_a_20_ce2 => grp_calculate_single_value_fu_498_input_a_20_ce2,
        input_a_20_q2 => input_buffer_23_q2,
        input_a_20_address3 => grp_calculate_single_value_fu_498_input_a_20_address3,
        input_a_20_ce3 => grp_calculate_single_value_fu_498_input_a_20_ce3,
        input_a_20_q3 => input_buffer_23_q3,
        input_a_21_address0 => grp_calculate_single_value_fu_498_input_a_21_address0,
        input_a_21_ce0 => grp_calculate_single_value_fu_498_input_a_21_ce0,
        input_a_21_q0 => input_buffer_24_q0,
        input_a_21_address1 => grp_calculate_single_value_fu_498_input_a_21_address1,
        input_a_21_ce1 => grp_calculate_single_value_fu_498_input_a_21_ce1,
        input_a_21_q1 => input_buffer_24_q1,
        input_a_21_address2 => grp_calculate_single_value_fu_498_input_a_21_address2,
        input_a_21_ce2 => grp_calculate_single_value_fu_498_input_a_21_ce2,
        input_a_21_q2 => input_buffer_24_q2,
        input_a_22_address0 => grp_calculate_single_value_fu_498_input_a_22_address0,
        input_a_22_ce0 => grp_calculate_single_value_fu_498_input_a_22_ce0,
        input_a_22_q0 => input_buffer_25_q0,
        input_a_22_address1 => grp_calculate_single_value_fu_498_input_a_22_address1,
        input_a_22_ce1 => grp_calculate_single_value_fu_498_input_a_22_ce1,
        input_a_22_q1 => input_buffer_25_q1,
        input_a_22_address2 => grp_calculate_single_value_fu_498_input_a_22_address2,
        input_a_22_ce2 => grp_calculate_single_value_fu_498_input_a_22_ce2,
        input_a_22_q2 => input_buffer_25_q2,
        input_a_22_address3 => grp_calculate_single_value_fu_498_input_a_22_address3,
        input_a_22_ce3 => grp_calculate_single_value_fu_498_input_a_22_ce3,
        input_a_22_q3 => input_buffer_25_q3,
        input_a_23_address0 => grp_calculate_single_value_fu_498_input_a_23_address0,
        input_a_23_ce0 => grp_calculate_single_value_fu_498_input_a_23_ce0,
        input_a_23_q0 => input_buffer_26_q0,
        input_a_23_address1 => grp_calculate_single_value_fu_498_input_a_23_address1,
        input_a_23_ce1 => grp_calculate_single_value_fu_498_input_a_23_ce1,
        input_a_23_q1 => input_buffer_26_q1,
        input_a_23_address2 => grp_calculate_single_value_fu_498_input_a_23_address2,
        input_a_23_ce2 => grp_calculate_single_value_fu_498_input_a_23_ce2,
        input_a_23_q2 => input_buffer_26_q2,
        input_a_24_address0 => grp_calculate_single_value_fu_498_input_a_24_address0,
        input_a_24_ce0 => grp_calculate_single_value_fu_498_input_a_24_ce0,
        input_a_24_q0 => input_buffer_27_q0,
        input_a_24_address1 => grp_calculate_single_value_fu_498_input_a_24_address1,
        input_a_24_ce1 => grp_calculate_single_value_fu_498_input_a_24_ce1,
        input_a_24_q1 => input_buffer_27_q1,
        input_a_24_address2 => grp_calculate_single_value_fu_498_input_a_24_address2,
        input_a_24_ce2 => grp_calculate_single_value_fu_498_input_a_24_ce2,
        input_a_24_q2 => input_buffer_27_q2,
        input_a_24_address3 => grp_calculate_single_value_fu_498_input_a_24_address3,
        input_a_24_ce3 => grp_calculate_single_value_fu_498_input_a_24_ce3,
        input_a_24_q3 => input_buffer_27_q3,
        input_a_25_address0 => grp_calculate_single_value_fu_498_input_a_25_address0,
        input_a_25_ce0 => grp_calculate_single_value_fu_498_input_a_25_ce0,
        input_a_25_q0 => input_buffer_28_q0,
        input_a_25_address1 => grp_calculate_single_value_fu_498_input_a_25_address1,
        input_a_25_ce1 => grp_calculate_single_value_fu_498_input_a_25_ce1,
        input_a_25_q1 => input_buffer_28_q1,
        input_a_25_address2 => grp_calculate_single_value_fu_498_input_a_25_address2,
        input_a_25_ce2 => grp_calculate_single_value_fu_498_input_a_25_ce2,
        input_a_25_q2 => input_buffer_28_q2,
        input_a_26_address0 => grp_calculate_single_value_fu_498_input_a_26_address0,
        input_a_26_ce0 => grp_calculate_single_value_fu_498_input_a_26_ce0,
        input_a_26_q0 => input_buffer_29_q0,
        input_a_26_address1 => grp_calculate_single_value_fu_498_input_a_26_address1,
        input_a_26_ce1 => grp_calculate_single_value_fu_498_input_a_26_ce1,
        input_a_26_q1 => input_buffer_29_q1,
        input_a_26_address2 => grp_calculate_single_value_fu_498_input_a_26_address2,
        input_a_26_ce2 => grp_calculate_single_value_fu_498_input_a_26_ce2,
        input_a_26_q2 => input_buffer_29_q2,
        input_a_26_address3 => grp_calculate_single_value_fu_498_input_a_26_address3,
        input_a_26_ce3 => grp_calculate_single_value_fu_498_input_a_26_ce3,
        input_a_26_q3 => input_buffer_29_q3,
        input_a_27_address0 => grp_calculate_single_value_fu_498_input_a_27_address0,
        input_a_27_ce0 => grp_calculate_single_value_fu_498_input_a_27_ce0,
        input_a_27_q0 => input_buffer_30_q0,
        input_a_27_address1 => grp_calculate_single_value_fu_498_input_a_27_address1,
        input_a_27_ce1 => grp_calculate_single_value_fu_498_input_a_27_ce1,
        input_a_27_q1 => input_buffer_30_q1,
        input_a_27_address2 => grp_calculate_single_value_fu_498_input_a_27_address2,
        input_a_27_ce2 => grp_calculate_single_value_fu_498_input_a_27_ce2,
        input_a_27_q2 => input_buffer_30_q2,
        input_a_28_address0 => grp_calculate_single_value_fu_498_input_a_28_address0,
        input_a_28_ce0 => grp_calculate_single_value_fu_498_input_a_28_ce0,
        input_a_28_q0 => input_buffer_31_q0,
        input_a_28_address1 => grp_calculate_single_value_fu_498_input_a_28_address1,
        input_a_28_ce1 => grp_calculate_single_value_fu_498_input_a_28_ce1,
        input_a_28_q1 => input_buffer_31_q1,
        input_a_28_address2 => grp_calculate_single_value_fu_498_input_a_28_address2,
        input_a_28_ce2 => grp_calculate_single_value_fu_498_input_a_28_ce2,
        input_a_28_q2 => input_buffer_31_q2,
        input_a_28_address3 => grp_calculate_single_value_fu_498_input_a_28_address3,
        input_a_28_ce3 => grp_calculate_single_value_fu_498_input_a_28_ce3,
        input_a_28_q3 => input_buffer_31_q3,
        input_a_29_address0 => grp_calculate_single_value_fu_498_input_a_29_address0,
        input_a_29_ce0 => grp_calculate_single_value_fu_498_input_a_29_ce0,
        input_a_29_q0 => input_buffer_32_q0,
        input_a_29_address1 => grp_calculate_single_value_fu_498_input_a_29_address1,
        input_a_29_ce1 => grp_calculate_single_value_fu_498_input_a_29_ce1,
        input_a_29_q1 => input_buffer_32_q1,
        input_a_29_address2 => grp_calculate_single_value_fu_498_input_a_29_address2,
        input_a_29_ce2 => grp_calculate_single_value_fu_498_input_a_29_ce2,
        input_a_29_q2 => input_buffer_32_q2,
        input_a_30_address0 => grp_calculate_single_value_fu_498_input_a_30_address0,
        input_a_30_ce0 => grp_calculate_single_value_fu_498_input_a_30_ce0,
        input_a_30_q0 => input_buffer_33_q0,
        input_a_30_address1 => grp_calculate_single_value_fu_498_input_a_30_address1,
        input_a_30_ce1 => grp_calculate_single_value_fu_498_input_a_30_ce1,
        input_a_30_q1 => input_buffer_33_q1,
        input_a_30_address2 => grp_calculate_single_value_fu_498_input_a_30_address2,
        input_a_30_ce2 => grp_calculate_single_value_fu_498_input_a_30_ce2,
        input_a_30_q2 => input_buffer_33_q2,
        input_a_30_address3 => grp_calculate_single_value_fu_498_input_a_30_address3,
        input_a_30_ce3 => grp_calculate_single_value_fu_498_input_a_30_ce3,
        input_a_30_q3 => input_buffer_33_q3,
        input_a_31_address0 => grp_calculate_single_value_fu_498_input_a_31_address0,
        input_a_31_ce0 => grp_calculate_single_value_fu_498_input_a_31_ce0,
        input_a_31_q0 => input_buffer_34_q0,
        input_a_31_address1 => grp_calculate_single_value_fu_498_input_a_31_address1,
        input_a_31_ce1 => grp_calculate_single_value_fu_498_input_a_31_ce1,
        input_a_31_q1 => input_buffer_34_q1,
        input_a_31_address2 => grp_calculate_single_value_fu_498_input_a_31_address2,
        input_a_31_ce2 => grp_calculate_single_value_fu_498_input_a_31_ce2,
        input_a_31_q2 => input_buffer_34_q2,
        input_b_address0 => grp_calculate_single_value_fu_498_input_b_address0,
        input_b_ce0 => grp_calculate_single_value_fu_498_input_b_ce0,
        input_b_q0 => weight_buffer_q0,
        output_length => output_length_reg_407,
        output_width => output_width_reg_419,
        ap_return => grp_calculate_single_value_fu_498_ap_return);

    grp_process_features_Pipeline_6_fu_539 : component process_features_process_features_Pipeline_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_process_features_Pipeline_6_fu_539_ap_start,
        ap_done => grp_process_features_Pipeline_6_fu_539_ap_done,
        ap_idle => grp_process_features_Pipeline_6_fu_539_ap_idle,
        ap_ready => grp_process_features_Pipeline_6_fu_539_ap_ready,
        conv_output_address0 => grp_process_features_Pipeline_6_fu_539_conv_output_address0,
        conv_output_ce0 => grp_process_features_Pipeline_6_fu_539_conv_output_ce0,
        conv_output_q0 => conv_output_q0,
        feature_collection_address0 => grp_process_features_Pipeline_6_fu_539_feature_collection_address0,
        feature_collection_ce0 => grp_process_features_Pipeline_6_fu_539_feature_collection_ce0,
        feature_collection_we0 => grp_process_features_Pipeline_6_fu_539_feature_collection_we0,
        feature_collection_d0 => grp_process_features_Pipeline_6_fu_539_feature_collection_d0);

    grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545 : component process_features_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_start,
        ap_done => grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_done,
        ap_idle => grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_idle,
        ap_ready => grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_ready,
        feature_collection_address0 => grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_feature_collection_address0,
        feature_collection_ce0 => grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_feature_collection_ce0,
        feature_collection_q0 => feature_collection_q0,
        output_buffer_address0 => grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_output_buffer_address0,
        output_buffer_ce0 => grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_output_buffer_ce0,
        output_buffer_we0 => grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_output_buffer_we0,
        output_buffer_d0 => grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_output_buffer_d0);

    grp_process_features_Pipeline_8_fu_551 : component process_features_process_features_Pipeline_8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_process_features_Pipeline_8_fu_551_ap_start,
        ap_done => grp_process_features_Pipeline_8_fu_551_ap_done,
        ap_idle => grp_process_features_Pipeline_8_fu_551_ap_idle,
        ap_ready => grp_process_features_Pipeline_8_fu_551_ap_ready,
        output_buffer_address0 => grp_process_features_Pipeline_8_fu_551_output_buffer_address0,
        output_buffer_ce0 => grp_process_features_Pipeline_8_fu_551_output_buffer_ce0,
        output_buffer_q0 => output_buffer_q0,
        reshape_output_address0 => grp_process_features_Pipeline_8_fu_551_reshape_output_address0,
        reshape_output_ce0 => grp_process_features_Pipeline_8_fu_551_reshape_output_ce0,
        reshape_output_we0 => grp_process_features_Pipeline_8_fu_551_reshape_output_we0,
        reshape_output_d0 => grp_process_features_Pipeline_8_fu_551_reshape_output_d0);

    grp_squash_fu_557 : component process_features_squash
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_squash_fu_557_ap_start,
        ap_done => grp_squash_fu_557_ap_done,
        ap_idle => grp_squash_fu_557_ap_idle,
        ap_ready => grp_squash_fu_557_ap_ready,
        input_r_address0 => grp_squash_fu_557_input_r_address0,
        input_r_ce0 => grp_squash_fu_557_input_r_ce0,
        input_r_q0 => reshape_output_q0,
        m_axi_gmem3_AWVALID => grp_squash_fu_557_m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY => gmem3_AWREADY,
        m_axi_gmem3_AWADDR => grp_squash_fu_557_m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID => grp_squash_fu_557_m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN => grp_squash_fu_557_m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE => grp_squash_fu_557_m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST => grp_squash_fu_557_m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK => grp_squash_fu_557_m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE => grp_squash_fu_557_m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT => grp_squash_fu_557_m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS => grp_squash_fu_557_m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION => grp_squash_fu_557_m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER => grp_squash_fu_557_m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID => grp_squash_fu_557_m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY => gmem3_WREADY,
        m_axi_gmem3_WDATA => grp_squash_fu_557_m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB => grp_squash_fu_557_m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST => grp_squash_fu_557_m_axi_gmem3_WLAST,
        m_axi_gmem3_WID => grp_squash_fu_557_m_axi_gmem3_WID,
        m_axi_gmem3_WUSER => grp_squash_fu_557_m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID => grp_squash_fu_557_m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY => ap_const_logic_0,
        m_axi_gmem3_ARADDR => grp_squash_fu_557_m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID => grp_squash_fu_557_m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN => grp_squash_fu_557_m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE => grp_squash_fu_557_m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST => grp_squash_fu_557_m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK => grp_squash_fu_557_m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE => grp_squash_fu_557_m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT => grp_squash_fu_557_m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS => grp_squash_fu_557_m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION => grp_squash_fu_557_m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER => grp_squash_fu_557_m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID => ap_const_logic_0,
        m_axi_gmem3_RREADY => grp_squash_fu_557_m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA => ap_const_lv512_lc_1,
        m_axi_gmem3_RLAST => ap_const_logic_0,
        m_axi_gmem3_RID => ap_const_lv1_0,
        m_axi_gmem3_RFIFONUM => ap_const_lv13_0,
        m_axi_gmem3_RUSER => ap_const_lv1_0,
        m_axi_gmem3_RRESP => ap_const_lv2_0,
        m_axi_gmem3_BVALID => gmem3_BVALID,
        m_axi_gmem3_BREADY => grp_squash_fu_557_m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP => ap_const_lv2_0,
        m_axi_gmem3_BID => ap_const_lv1_0,
        m_axi_gmem3_BUSER => ap_const_lv1_0,
        output_r => output_r_read_reg_799);

    control_s_axi_U : component process_features_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        input_r => input_r,
        weights => weights,
        biases => biases,
        output_r => output_r,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_continue => ap_continue,
        ap_idle => ap_idle);

    gmem0_m_axi_U : component process_features_gmem0_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 70,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 256,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 13,
        CH0_USER_DW => 512,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => gmem0_ARVALID,
        I_CH0_ARREADY => gmem0_ARREADY,
        I_CH0_ARADDR => gmem0_ARADDR,
        I_CH0_ARLEN => gmem0_ARLEN,
        I_CH0_RVALID => gmem0_RVALID,
        I_CH0_RREADY => gmem0_RREADY,
        I_CH0_RDATA => gmem0_RDATA,
        I_CH0_RFIFONUM => gmem0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem0_WREADY,
        I_CH0_WDATA => ap_const_lv512_lc_1,
        I_CH0_WSTRB => ap_const_lv64_0,
        I_CH0_BVALID => gmem0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem1_m_axi_U : component process_features_gmem1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 70,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 2,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 13,
        CH0_USER_DW => 512,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => gmem1_ARVALID,
        I_CH0_ARREADY => gmem1_ARREADY,
        I_CH0_ARADDR => gmem1_ARADDR,
        I_CH0_ARLEN => gmem1_ARLEN,
        I_CH0_RVALID => gmem1_RVALID,
        I_CH0_RREADY => gmem1_RREADY,
        I_CH0_RDATA => gmem1_RDATA,
        I_CH0_RFIFONUM => gmem1_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem1_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem1_WREADY,
        I_CH0_WDATA => ap_const_lv512_lc_1,
        I_CH0_WSTRB => ap_const_lv64_0,
        I_CH0_BVALID => gmem1_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem2_m_axi_U : component process_features_gmem2_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 70,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 256,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM2_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM2_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM2_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM2_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM2_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM2_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM2_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM2_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM2_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM2_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM2_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 13,
        CH0_USER_DW => 512,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem2_AWVALID,
        AWREADY => m_axi_gmem2_AWREADY,
        AWADDR => m_axi_gmem2_AWADDR,
        AWID => m_axi_gmem2_AWID,
        AWLEN => m_axi_gmem2_AWLEN,
        AWSIZE => m_axi_gmem2_AWSIZE,
        AWBURST => m_axi_gmem2_AWBURST,
        AWLOCK => m_axi_gmem2_AWLOCK,
        AWCACHE => m_axi_gmem2_AWCACHE,
        AWPROT => m_axi_gmem2_AWPROT,
        AWQOS => m_axi_gmem2_AWQOS,
        AWREGION => m_axi_gmem2_AWREGION,
        AWUSER => m_axi_gmem2_AWUSER,
        WVALID => m_axi_gmem2_WVALID,
        WREADY => m_axi_gmem2_WREADY,
        WDATA => m_axi_gmem2_WDATA,
        WSTRB => m_axi_gmem2_WSTRB,
        WLAST => m_axi_gmem2_WLAST,
        WID => m_axi_gmem2_WID,
        WUSER => m_axi_gmem2_WUSER,
        ARVALID => m_axi_gmem2_ARVALID,
        ARREADY => m_axi_gmem2_ARREADY,
        ARADDR => m_axi_gmem2_ARADDR,
        ARID => m_axi_gmem2_ARID,
        ARLEN => m_axi_gmem2_ARLEN,
        ARSIZE => m_axi_gmem2_ARSIZE,
        ARBURST => m_axi_gmem2_ARBURST,
        ARLOCK => m_axi_gmem2_ARLOCK,
        ARCACHE => m_axi_gmem2_ARCACHE,
        ARPROT => m_axi_gmem2_ARPROT,
        ARQOS => m_axi_gmem2_ARQOS,
        ARREGION => m_axi_gmem2_ARREGION,
        ARUSER => m_axi_gmem2_ARUSER,
        RVALID => m_axi_gmem2_RVALID,
        RREADY => m_axi_gmem2_RREADY,
        RDATA => m_axi_gmem2_RDATA,
        RLAST => m_axi_gmem2_RLAST,
        RID => m_axi_gmem2_RID,
        RUSER => m_axi_gmem2_RUSER,
        RRESP => m_axi_gmem2_RRESP,
        BVALID => m_axi_gmem2_BVALID,
        BREADY => m_axi_gmem2_BREADY,
        BRESP => m_axi_gmem2_BRESP,
        BID => m_axi_gmem2_BID,
        BUSER => m_axi_gmem2_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => gmem2_ARVALID,
        I_CH0_ARREADY => gmem2_ARREADY,
        I_CH0_ARADDR => gmem2_ARADDR,
        I_CH0_ARLEN => gmem2_ARLEN,
        I_CH0_RVALID => gmem2_RVALID,
        I_CH0_RREADY => gmem2_RREADY,
        I_CH0_RDATA => gmem2_RDATA,
        I_CH0_RFIFONUM => gmem2_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem2_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem2_WREADY,
        I_CH0_WDATA => ap_const_lv512_lc_1,
        I_CH0_WSTRB => ap_const_lv64_0,
        I_CH0_BVALID => gmem2_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem3_m_axi_U : component process_features_gmem3_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 67,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 256,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM3_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM3_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM3_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM3_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM3_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM3_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM3_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM3_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM3_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM3_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM3_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 13,
        CH0_USER_DW => 512,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 0,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem3_AWVALID,
        AWREADY => m_axi_gmem3_AWREADY,
        AWADDR => m_axi_gmem3_AWADDR,
        AWID => m_axi_gmem3_AWID,
        AWLEN => m_axi_gmem3_AWLEN,
        AWSIZE => m_axi_gmem3_AWSIZE,
        AWBURST => m_axi_gmem3_AWBURST,
        AWLOCK => m_axi_gmem3_AWLOCK,
        AWCACHE => m_axi_gmem3_AWCACHE,
        AWPROT => m_axi_gmem3_AWPROT,
        AWQOS => m_axi_gmem3_AWQOS,
        AWREGION => m_axi_gmem3_AWREGION,
        AWUSER => m_axi_gmem3_AWUSER,
        WVALID => m_axi_gmem3_WVALID,
        WREADY => m_axi_gmem3_WREADY,
        WDATA => m_axi_gmem3_WDATA,
        WSTRB => m_axi_gmem3_WSTRB,
        WLAST => m_axi_gmem3_WLAST,
        WID => m_axi_gmem3_WID,
        WUSER => m_axi_gmem3_WUSER,
        ARVALID => m_axi_gmem3_ARVALID,
        ARREADY => m_axi_gmem3_ARREADY,
        ARADDR => m_axi_gmem3_ARADDR,
        ARID => m_axi_gmem3_ARID,
        ARLEN => m_axi_gmem3_ARLEN,
        ARSIZE => m_axi_gmem3_ARSIZE,
        ARBURST => m_axi_gmem3_ARBURST,
        ARLOCK => m_axi_gmem3_ARLOCK,
        ARCACHE => m_axi_gmem3_ARCACHE,
        ARPROT => m_axi_gmem3_ARPROT,
        ARQOS => m_axi_gmem3_ARQOS,
        ARREGION => m_axi_gmem3_ARREGION,
        ARUSER => m_axi_gmem3_ARUSER,
        RVALID => m_axi_gmem3_RVALID,
        RREADY => m_axi_gmem3_RREADY,
        RDATA => m_axi_gmem3_RDATA,
        RLAST => m_axi_gmem3_RLAST,
        RID => m_axi_gmem3_RID,
        RUSER => m_axi_gmem3_RUSER,
        RRESP => m_axi_gmem3_RRESP,
        BVALID => m_axi_gmem3_BVALID,
        BREADY => m_axi_gmem3_BREADY,
        BRESP => m_axi_gmem3_BRESP,
        BID => m_axi_gmem3_BID,
        BUSER => m_axi_gmem3_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => ap_const_logic_0,
        I_CH0_ARREADY => gmem3_ARREADY,
        I_CH0_ARADDR => ap_const_lv64_0,
        I_CH0_ARLEN => ap_const_lv32_0,
        I_CH0_RVALID => gmem3_RVALID,
        I_CH0_RREADY => ap_const_logic_0,
        I_CH0_RDATA => gmem3_RDATA,
        I_CH0_RFIFONUM => gmem3_RFIFONUM,
        I_CH0_AWVALID => gmem3_AWVALID,
        I_CH0_AWREADY => gmem3_AWREADY,
        I_CH0_AWADDR => grp_squash_fu_557_m_axi_gmem3_AWADDR,
        I_CH0_AWLEN => grp_squash_fu_557_m_axi_gmem3_AWLEN,
        I_CH0_WVALID => gmem3_WVALID,
        I_CH0_WREADY => gmem3_WREADY,
        I_CH0_WDATA => grp_squash_fu_557_m_axi_gmem3_WDATA,
        I_CH0_WSTRB => grp_squash_fu_557_m_axi_gmem3_WSTRB,
        I_CH0_BVALID => gmem3_BVALID,
        I_CH0_BREADY => gmem3_BREADY);

    weights_stream_fifo_U : component process_features_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_weights_stream_din,
        if_full_n => weights_stream_full_n,
        if_write => weights_stream_write,
        if_dout => weights_stream_dout,
        if_empty_n => weights_stream_empty_n,
        if_read => weights_stream_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((grp_squash_fu_557_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state160))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_calculate_single_value_fu_498_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_calculate_single_value_fu_498_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln112_fu_752_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state150))) then 
                    grp_calculate_single_value_fu_498_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_calculate_single_value_fu_498_ap_ready = ap_const_logic_1)) then 
                    grp_calculate_single_value_fu_498_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_process_features_Pipeline_2_fu_439_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_process_features_Pipeline_2_fu_439_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state145)) then 
                    grp_process_features_Pipeline_2_fu_439_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_process_features_Pipeline_2_fu_439_ap_ready = ap_const_logic_1)) then 
                    grp_process_features_Pipeline_2_fu_439_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_process_features_Pipeline_3_fu_478_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_process_features_Pipeline_3_fu_478_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state145)) then 
                    grp_process_features_Pipeline_3_fu_478_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_process_features_Pipeline_3_fu_478_ap_ready = ap_const_logic_1)) then 
                    grp_process_features_Pipeline_3_fu_478_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_process_features_Pipeline_5_fu_492_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_process_features_Pipeline_5_fu_492_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln99_fu_658_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state147))) then 
                    grp_process_features_Pipeline_5_fu_492_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_process_features_Pipeline_5_fu_492_ap_ready = ap_const_logic_1)) then 
                    grp_process_features_Pipeline_5_fu_492_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_process_features_Pipeline_6_fu_539_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_process_features_Pipeline_6_fu_539_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
                    grp_process_features_Pipeline_6_fu_539_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_process_features_Pipeline_6_fu_539_ap_ready = ap_const_logic_1)) then 
                    grp_process_features_Pipeline_6_fu_539_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_process_features_Pipeline_8_fu_551_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_process_features_Pipeline_8_fu_551_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state157)) then 
                    grp_process_features_Pipeline_8_fu_551_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_process_features_Pipeline_8_fu_551_ap_ready = ap_const_logic_1)) then 
                    grp_process_features_Pipeline_8_fu_551_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
                    grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_ready = ap_const_logic_1)) then 
                    grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state155) and (ap_const_logic_1 = ap_CS_fsm_state154))) then 
                    grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_ready = ap_const_logic_1)) then 
                    grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_process_features_Pipeline_conv_weights_fu_486_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_process_features_Pipeline_conv_weights_fu_486_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln99_fu_658_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state147))) then 
                    grp_process_features_Pipeline_conv_weights_fu_486_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_process_features_Pipeline_conv_weights_fu_486_ap_ready = ap_const_logic_1)) then 
                    grp_process_features_Pipeline_conv_weights_fu_486_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_squash_fu_557_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_squash_fu_557_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state159)) then 
                    grp_squash_fu_557_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_squash_fu_557_ap_ready = ap_const_logic_1)) then 
                    grp_squash_fu_557_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;

    output_depth_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((gmem1_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                output_depth_fu_174 <= ap_const_lv9_0;
            elsif (((icmp_ln110_fu_703_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state149))) then 
                output_depth_fu_174 <= add_ln99_reg_845;
            end if; 
        end if;
    end process;

    output_length_reg_407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln112_fu_752_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state150))) then 
                output_length_reg_407 <= add_ln110_reg_869;
            elsif (((grp_process_features_Pipeline_conv_weights_fu_486_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state148))) then 
                output_length_reg_407 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    output_width_reg_419_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_calculate_single_value_fu_498_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state151))) then 
                output_width_reg_419 <= add_ln112_reg_882;
            elsif (((icmp_ln110_fu_703_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state149))) then 
                output_width_reg_419 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_process_features_Pipeline_conv_weights_fu_486_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state148))) then
                    add_ln110_1_reg_864(13 downto 2) <= add_ln110_1_fu_691_p2(13 downto 2);
                biases_buffer_load_reg_859 <= biases_buffer_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state149)) then
                add_ln110_reg_869 <= add_ln110_fu_697_p2;
                    p_cast6_reg_877(5 downto 1) <= p_cast6_fu_735_p1(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state150)) then
                add_ln112_reg_882 <= add_ln112_fu_746_p2;
                add_ln116_1_reg_890 <= add_ln116_1_fu_767_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state147)) then
                add_ln99_reg_845 <= add_ln99_fu_652_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((gmem1_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                output_r_read_reg_799 <= output_r;
                trunc_ln4_reg_820 <= input_r(63 downto 6);
                trunc_ln6_reg_826 <= biases(63 downto 6);
                trunc_ln_reg_810 <= weights(63 downto 6);
            end if;
        end if;
    end process;
    add_ln110_1_reg_864(1 downto 0) <= "00";
    p_cast6_reg_877(0) <= '0';
    p_cast6_reg_877(13 downto 6) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state74, gmem1_ARREADY, ap_block_state1, ap_block_state74_io, ap_CS_fsm_state147, ap_CS_fsm_state148, grp_process_features_Pipeline_conv_weights_fu_486_ap_done, ap_CS_fsm_state149, ap_CS_fsm_state150, grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_done, grp_process_features_Pipeline_5_fu_492_ap_done, grp_calculate_single_value_fu_498_ap_done, grp_process_features_Pipeline_6_fu_539_ap_done, grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_done, grp_process_features_Pipeline_8_fu_551_ap_done, grp_squash_fu_557_ap_done, icmp_ln112_fu_752_p2, icmp_ln110_fu_703_p2, ap_CS_fsm_state151, ap_CS_fsm_state73, ap_CS_fsm_state146, icmp_ln99_fu_658_p2, ap_CS_fsm_state152, ap_CS_fsm_state154, ap_CS_fsm_state156, ap_CS_fsm_state158, ap_CS_fsm_state160, ap_block_state146_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((gmem1_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state73) and (grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state74;
                else
                    ap_NS_fsm <= ap_ST_fsm_state73;
                end if;
            when ap_ST_fsm_state74 => 
                if (((ap_const_boolean_0 = ap_block_state74_io) and (ap_const_logic_1 = ap_CS_fsm_state74))) then
                    ap_NS_fsm <= ap_ST_fsm_state75;
                else
                    ap_NS_fsm <= ap_ST_fsm_state74;
                end if;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                ap_NS_fsm <= ap_ST_fsm_state110;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                ap_NS_fsm <= ap_ST_fsm_state114;
            when ap_ST_fsm_state114 => 
                ap_NS_fsm <= ap_ST_fsm_state115;
            when ap_ST_fsm_state115 => 
                ap_NS_fsm <= ap_ST_fsm_state116;
            when ap_ST_fsm_state116 => 
                ap_NS_fsm <= ap_ST_fsm_state117;
            when ap_ST_fsm_state117 => 
                ap_NS_fsm <= ap_ST_fsm_state118;
            when ap_ST_fsm_state118 => 
                ap_NS_fsm <= ap_ST_fsm_state119;
            when ap_ST_fsm_state119 => 
                ap_NS_fsm <= ap_ST_fsm_state120;
            when ap_ST_fsm_state120 => 
                ap_NS_fsm <= ap_ST_fsm_state121;
            when ap_ST_fsm_state121 => 
                ap_NS_fsm <= ap_ST_fsm_state122;
            when ap_ST_fsm_state122 => 
                ap_NS_fsm <= ap_ST_fsm_state123;
            when ap_ST_fsm_state123 => 
                ap_NS_fsm <= ap_ST_fsm_state124;
            when ap_ST_fsm_state124 => 
                ap_NS_fsm <= ap_ST_fsm_state125;
            when ap_ST_fsm_state125 => 
                ap_NS_fsm <= ap_ST_fsm_state126;
            when ap_ST_fsm_state126 => 
                ap_NS_fsm <= ap_ST_fsm_state127;
            when ap_ST_fsm_state127 => 
                ap_NS_fsm <= ap_ST_fsm_state128;
            when ap_ST_fsm_state128 => 
                ap_NS_fsm <= ap_ST_fsm_state129;
            when ap_ST_fsm_state129 => 
                ap_NS_fsm <= ap_ST_fsm_state130;
            when ap_ST_fsm_state130 => 
                ap_NS_fsm <= ap_ST_fsm_state131;
            when ap_ST_fsm_state131 => 
                ap_NS_fsm <= ap_ST_fsm_state132;
            when ap_ST_fsm_state132 => 
                ap_NS_fsm <= ap_ST_fsm_state133;
            when ap_ST_fsm_state133 => 
                ap_NS_fsm <= ap_ST_fsm_state134;
            when ap_ST_fsm_state134 => 
                ap_NS_fsm <= ap_ST_fsm_state135;
            when ap_ST_fsm_state135 => 
                ap_NS_fsm <= ap_ST_fsm_state136;
            when ap_ST_fsm_state136 => 
                ap_NS_fsm <= ap_ST_fsm_state137;
            when ap_ST_fsm_state137 => 
                ap_NS_fsm <= ap_ST_fsm_state138;
            when ap_ST_fsm_state138 => 
                ap_NS_fsm <= ap_ST_fsm_state139;
            when ap_ST_fsm_state139 => 
                ap_NS_fsm <= ap_ST_fsm_state140;
            when ap_ST_fsm_state140 => 
                ap_NS_fsm <= ap_ST_fsm_state141;
            when ap_ST_fsm_state141 => 
                ap_NS_fsm <= ap_ST_fsm_state142;
            when ap_ST_fsm_state142 => 
                ap_NS_fsm <= ap_ST_fsm_state143;
            when ap_ST_fsm_state143 => 
                ap_NS_fsm <= ap_ST_fsm_state144;
            when ap_ST_fsm_state144 => 
                ap_NS_fsm <= ap_ST_fsm_state145;
            when ap_ST_fsm_state145 => 
                ap_NS_fsm <= ap_ST_fsm_state146;
            when ap_ST_fsm_state146 => 
                if (((ap_const_boolean_0 = ap_block_state146_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state146))) then
                    ap_NS_fsm <= ap_ST_fsm_state147;
                else
                    ap_NS_fsm <= ap_ST_fsm_state146;
                end if;
            when ap_ST_fsm_state147 => 
                if (((icmp_ln99_fu_658_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state147))) then
                    ap_NS_fsm <= ap_ST_fsm_state152;
                else
                    ap_NS_fsm <= ap_ST_fsm_state148;
                end if;
            when ap_ST_fsm_state148 => 
                if (((grp_process_features_Pipeline_conv_weights_fu_486_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state148))) then
                    ap_NS_fsm <= ap_ST_fsm_state149;
                else
                    ap_NS_fsm <= ap_ST_fsm_state148;
                end if;
            when ap_ST_fsm_state149 => 
                if (((icmp_ln110_fu_703_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state149))) then
                    ap_NS_fsm <= ap_ST_fsm_state147;
                else
                    ap_NS_fsm <= ap_ST_fsm_state150;
                end if;
            when ap_ST_fsm_state150 => 
                if (((icmp_ln112_fu_752_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state150))) then
                    ap_NS_fsm <= ap_ST_fsm_state149;
                else
                    ap_NS_fsm <= ap_ST_fsm_state151;
                end if;
            when ap_ST_fsm_state151 => 
                if (((grp_calculate_single_value_fu_498_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state151))) then
                    ap_NS_fsm <= ap_ST_fsm_state150;
                else
                    ap_NS_fsm <= ap_ST_fsm_state151;
                end if;
            when ap_ST_fsm_state152 => 
                if (((grp_process_features_Pipeline_5_fu_492_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state152))) then
                    ap_NS_fsm <= ap_ST_fsm_state153;
                else
                    ap_NS_fsm <= ap_ST_fsm_state152;
                end if;
            when ap_ST_fsm_state153 => 
                ap_NS_fsm <= ap_ST_fsm_state154;
            when ap_ST_fsm_state154 => 
                if (((grp_process_features_Pipeline_6_fu_539_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state154))) then
                    ap_NS_fsm <= ap_ST_fsm_state155;
                else
                    ap_NS_fsm <= ap_ST_fsm_state154;
                end if;
            when ap_ST_fsm_state155 => 
                ap_NS_fsm <= ap_ST_fsm_state156;
            when ap_ST_fsm_state156 => 
                if (((grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state156))) then
                    ap_NS_fsm <= ap_ST_fsm_state157;
                else
                    ap_NS_fsm <= ap_ST_fsm_state156;
                end if;
            when ap_ST_fsm_state157 => 
                ap_NS_fsm <= ap_ST_fsm_state158;
            when ap_ST_fsm_state158 => 
                if (((grp_process_features_Pipeline_8_fu_551_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state158))) then
                    ap_NS_fsm <= ap_ST_fsm_state159;
                else
                    ap_NS_fsm <= ap_ST_fsm_state158;
                end if;
            when ap_ST_fsm_state159 => 
                ap_NS_fsm <= ap_ST_fsm_state160;
            when ap_ST_fsm_state160 => 
                if (((grp_squash_fu_557_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state160))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state160;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln110_1_fu_691_p2 <= std_logic_vector(unsigned(p_shl1_fu_673_p3) + unsigned(zext_ln110_fu_687_p1));
    add_ln110_fu_697_p2 <= std_logic_vector(unsigned(output_length_reg_407) + unsigned(ap_const_lv3_1));
    add_ln112_fu_746_p2 <= std_logic_vector(unsigned(output_width_reg_419) + unsigned(ap_const_lv3_1));
    add_ln116_1_fu_767_p2 <= std_logic_vector(unsigned(add_ln116_2_fu_762_p2) + unsigned(p_cast6_reg_877));
    add_ln116_2_fu_762_p2 <= std_logic_vector(unsigned(add_ln110_1_reg_864) + unsigned(zext_ln112_fu_758_p1));
    add_ln116_fu_772_p2 <= std_logic_vector(unsigned(biases_buffer_load_reg_859) + unsigned(grp_calculate_single_value_fu_498_ap_return));
    add_ln99_fu_652_p2 <= std_logic_vector(unsigned(output_depth_fu_174) + unsigned(ap_const_lv9_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state145 <= ap_CS_fsm(144);
    ap_CS_fsm_state146 <= ap_CS_fsm(145);
    ap_CS_fsm_state147 <= ap_CS_fsm(146);
    ap_CS_fsm_state148 <= ap_CS_fsm(147);
    ap_CS_fsm_state149 <= ap_CS_fsm(148);
    ap_CS_fsm_state150 <= ap_CS_fsm(149);
    ap_CS_fsm_state151 <= ap_CS_fsm(150);
    ap_CS_fsm_state152 <= ap_CS_fsm(151);
    ap_CS_fsm_state153 <= ap_CS_fsm(152);
    ap_CS_fsm_state154 <= ap_CS_fsm(153);
    ap_CS_fsm_state156 <= ap_CS_fsm(155);
    ap_CS_fsm_state157 <= ap_CS_fsm(156);
    ap_CS_fsm_state158 <= ap_CS_fsm(157);
    ap_CS_fsm_state159 <= ap_CS_fsm(158);
    ap_CS_fsm_state160 <= ap_CS_fsm(159);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_NS_fsm_state155 <= ap_NS_fsm(154);
    ap_ST_fsm_state100_blk <= ap_const_logic_0;
    ap_ST_fsm_state101_blk <= ap_const_logic_0;
    ap_ST_fsm_state102_blk <= ap_const_logic_0;
    ap_ST_fsm_state103_blk <= ap_const_logic_0;
    ap_ST_fsm_state104_blk <= ap_const_logic_0;
    ap_ST_fsm_state105_blk <= ap_const_logic_0;
    ap_ST_fsm_state106_blk <= ap_const_logic_0;
    ap_ST_fsm_state107_blk <= ap_const_logic_0;
    ap_ST_fsm_state108_blk <= ap_const_logic_0;
    ap_ST_fsm_state109_blk <= ap_const_logic_0;
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state110_blk <= ap_const_logic_0;
    ap_ST_fsm_state111_blk <= ap_const_logic_0;
    ap_ST_fsm_state112_blk <= ap_const_logic_0;
    ap_ST_fsm_state113_blk <= ap_const_logic_0;
    ap_ST_fsm_state114_blk <= ap_const_logic_0;
    ap_ST_fsm_state115_blk <= ap_const_logic_0;
    ap_ST_fsm_state116_blk <= ap_const_logic_0;
    ap_ST_fsm_state117_blk <= ap_const_logic_0;
    ap_ST_fsm_state118_blk <= ap_const_logic_0;
    ap_ST_fsm_state119_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state120_blk <= ap_const_logic_0;
    ap_ST_fsm_state121_blk <= ap_const_logic_0;
    ap_ST_fsm_state122_blk <= ap_const_logic_0;
    ap_ST_fsm_state123_blk <= ap_const_logic_0;
    ap_ST_fsm_state124_blk <= ap_const_logic_0;
    ap_ST_fsm_state125_blk <= ap_const_logic_0;
    ap_ST_fsm_state126_blk <= ap_const_logic_0;
    ap_ST_fsm_state127_blk <= ap_const_logic_0;
    ap_ST_fsm_state128_blk <= ap_const_logic_0;
    ap_ST_fsm_state129_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state130_blk <= ap_const_logic_0;
    ap_ST_fsm_state131_blk <= ap_const_logic_0;
    ap_ST_fsm_state132_blk <= ap_const_logic_0;
    ap_ST_fsm_state133_blk <= ap_const_logic_0;
    ap_ST_fsm_state134_blk <= ap_const_logic_0;
    ap_ST_fsm_state135_blk <= ap_const_logic_0;
    ap_ST_fsm_state136_blk <= ap_const_logic_0;
    ap_ST_fsm_state137_blk <= ap_const_logic_0;
    ap_ST_fsm_state138_blk <= ap_const_logic_0;
    ap_ST_fsm_state139_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state140_blk <= ap_const_logic_0;
    ap_ST_fsm_state141_blk <= ap_const_logic_0;
    ap_ST_fsm_state142_blk <= ap_const_logic_0;
    ap_ST_fsm_state143_blk <= ap_const_logic_0;
    ap_ST_fsm_state144_blk <= ap_const_logic_0;
    ap_ST_fsm_state145_blk <= ap_const_logic_0;

    ap_ST_fsm_state146_blk_assign_proc : process(ap_block_state146_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state146_on_subcall_done)) then 
            ap_ST_fsm_state146_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state146_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state147_blk <= ap_const_logic_0;

    ap_ST_fsm_state148_blk_assign_proc : process(grp_process_features_Pipeline_conv_weights_fu_486_ap_done)
    begin
        if ((grp_process_features_Pipeline_conv_weights_fu_486_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state148_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state148_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state149_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state150_blk <= ap_const_logic_0;

    ap_ST_fsm_state151_blk_assign_proc : process(grp_calculate_single_value_fu_498_ap_done)
    begin
        if ((grp_calculate_single_value_fu_498_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state151_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state151_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state152_blk_assign_proc : process(grp_process_features_Pipeline_5_fu_492_ap_done)
    begin
        if ((grp_process_features_Pipeline_5_fu_492_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state152_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state152_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state153_blk <= ap_const_logic_0;

    ap_ST_fsm_state154_blk_assign_proc : process(grp_process_features_Pipeline_6_fu_539_ap_done)
    begin
        if ((grp_process_features_Pipeline_6_fu_539_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state154_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state154_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state155_blk <= ap_const_logic_0;

    ap_ST_fsm_state156_blk_assign_proc : process(grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_done)
    begin
        if ((grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state156_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state156_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state157_blk <= ap_const_logic_0;

    ap_ST_fsm_state158_blk_assign_proc : process(grp_process_features_Pipeline_8_fu_551_ap_done)
    begin
        if ((grp_process_features_Pipeline_8_fu_551_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state158_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state158_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state159_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state160_blk_assign_proc : process(grp_squash_fu_557_ap_done)
    begin
        if ((grp_squash_fu_557_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state160_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state160_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(gmem1_ARREADY, ap_block_state1)
    begin
        if (((gmem1_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;

    ap_ST_fsm_state73_blk_assign_proc : process(grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_done)
    begin
        if ((grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state73_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state73_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state74_blk_assign_proc : process(ap_block_state74_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state74_io)) then 
            ap_ST_fsm_state74_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state74_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;
    ap_ST_fsm_state79_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_fsm_state81_blk <= ap_const_logic_0;
    ap_ST_fsm_state82_blk <= ap_const_logic_0;
    ap_ST_fsm_state83_blk <= ap_const_logic_0;
    ap_ST_fsm_state84_blk <= ap_const_logic_0;
    ap_ST_fsm_state85_blk <= ap_const_logic_0;
    ap_ST_fsm_state86_blk <= ap_const_logic_0;
    ap_ST_fsm_state87_blk <= ap_const_logic_0;
    ap_ST_fsm_state88_blk <= ap_const_logic_0;
    ap_ST_fsm_state89_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state90_blk <= ap_const_logic_0;
    ap_ST_fsm_state91_blk <= ap_const_logic_0;
    ap_ST_fsm_state92_blk <= ap_const_logic_0;
    ap_ST_fsm_state93_blk <= ap_const_logic_0;
    ap_ST_fsm_state94_blk <= ap_const_logic_0;
    ap_ST_fsm_state95_blk <= ap_const_logic_0;
    ap_ST_fsm_state96_blk <= ap_const_logic_0;
    ap_ST_fsm_state97_blk <= ap_const_logic_0;
    ap_ST_fsm_state98_blk <= ap_const_logic_0;
    ap_ST_fsm_state99_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state146_on_subcall_done_assign_proc : process(grp_process_features_Pipeline_2_fu_439_ap_done, grp_process_features_Pipeline_3_fu_478_ap_done)
    begin
                ap_block_state146_on_subcall_done <= ((grp_process_features_Pipeline_3_fu_478_ap_done = ap_const_logic_0) or (grp_process_features_Pipeline_2_fu_439_ap_done = ap_const_logic_0));
    end process;


    ap_block_state74_io_assign_proc : process(gmem0_ARREADY, gmem2_ARREADY)
    begin
                ap_block_state74_io <= ((gmem2_ARREADY = ap_const_logic_0) or (gmem0_ARREADY = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_squash_fu_557_ap_done, ap_CS_fsm_state160)
    begin
        if (((grp_squash_fu_557_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state160))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_squash_fu_557_ap_done, ap_CS_fsm_state160)
    begin
        if (((grp_squash_fu_557_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state160))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    biases_buffer_address0_assign_proc : process(grp_process_features_Pipeline_3_fu_478_biases_buffer_address0, ap_CS_fsm_state146, zext_ln99_fu_664_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            biases_buffer_address0 <= grp_process_features_Pipeline_3_fu_478_biases_buffer_address0;
        else 
            biases_buffer_address0 <= zext_ln99_fu_664_p1(8 - 1 downto 0);
        end if; 
    end process;


    biases_buffer_ce0_assign_proc : process(grp_process_features_Pipeline_3_fu_478_biases_buffer_ce0, ap_CS_fsm_state146, biases_buffer_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            biases_buffer_ce0 <= grp_process_features_Pipeline_3_fu_478_biases_buffer_ce0;
        else 
            biases_buffer_ce0 <= biases_buffer_ce0_local;
        end if; 
    end process;


    biases_buffer_ce0_local_assign_proc : process(ap_CS_fsm_state147)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state147)) then 
            biases_buffer_ce0_local <= ap_const_logic_1;
        else 
            biases_buffer_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    biases_buffer_we0_assign_proc : process(grp_process_features_Pipeline_3_fu_478_biases_buffer_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            biases_buffer_we0 <= grp_process_features_Pipeline_3_fu_478_biases_buffer_we0;
        else 
            biases_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_output_address0_assign_proc : process(grp_process_features_Pipeline_5_fu_492_conv_output_address0, grp_process_features_Pipeline_6_fu_539_conv_output_address0, ap_CS_fsm_state152, ap_CS_fsm_state154)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state154)) then 
            conv_output_address0 <= grp_process_features_Pipeline_6_fu_539_conv_output_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state152)) then 
            conv_output_address0 <= grp_process_features_Pipeline_5_fu_492_conv_output_address0;
        else 
            conv_output_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_output_ce0_assign_proc : process(grp_process_features_Pipeline_5_fu_492_conv_output_ce0, grp_process_features_Pipeline_6_fu_539_conv_output_ce0, ap_CS_fsm_state152, ap_CS_fsm_state154)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state154)) then 
            conv_output_ce0 <= grp_process_features_Pipeline_6_fu_539_conv_output_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state152)) then 
            conv_output_ce0 <= grp_process_features_Pipeline_5_fu_492_conv_output_ce0;
        else 
            conv_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_output_we0_assign_proc : process(grp_process_features_Pipeline_5_fu_492_conv_output_we0, ap_CS_fsm_state152)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state152)) then 
            conv_output_we0 <= grp_process_features_Pipeline_5_fu_492_conv_output_we0;
        else 
            conv_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_86_fu_729_p2 <= std_logic_vector(unsigned(p_shl_fu_709_p3) - unsigned(p_shl67_fu_725_p1));

    feature_collection_address0_assign_proc : process(grp_process_features_Pipeline_6_fu_539_feature_collection_address0, grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_feature_collection_address0, ap_CS_fsm_state154, ap_CS_fsm_state156)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state156)) then 
            feature_collection_address0 <= grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_feature_collection_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state154)) then 
            feature_collection_address0 <= grp_process_features_Pipeline_6_fu_539_feature_collection_address0;
        else 
            feature_collection_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    feature_collection_ce0_assign_proc : process(grp_process_features_Pipeline_6_fu_539_feature_collection_ce0, grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_feature_collection_ce0, ap_CS_fsm_state154, ap_CS_fsm_state156)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state156)) then 
            feature_collection_ce0 <= grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_feature_collection_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state154)) then 
            feature_collection_ce0 <= grp_process_features_Pipeline_6_fu_539_feature_collection_ce0;
        else 
            feature_collection_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    feature_collection_we0_assign_proc : process(grp_process_features_Pipeline_6_fu_539_feature_collection_we0, ap_CS_fsm_state154)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state154)) then 
            feature_collection_we0 <= grp_process_features_Pipeline_6_fu_539_feature_collection_we0;
        else 
            feature_collection_we0 <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_ARADDR_assign_proc : process(ap_CS_fsm_state74, ap_block_state74_io, grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARADDR, ap_CS_fsm_state145, ap_CS_fsm_state146, sext_ln85_fu_629_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_state74_io) and (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            gmem0_ARADDR <= sext_ln85_fu_629_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state145))) then 
            gmem0_ARADDR <= grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARADDR;
        else 
            gmem0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARLEN_assign_proc : process(ap_CS_fsm_state74, ap_block_state74_io, grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARLEN, ap_CS_fsm_state145, ap_CS_fsm_state146)
    begin
        if (((ap_const_boolean_0 = ap_block_state74_io) and (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            gmem0_ARLEN <= ap_const_lv64_1900(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state145))) then 
            gmem0_ARLEN <= grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARLEN;
        else 
            gmem0_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARVALID_assign_proc : process(ap_CS_fsm_state74, ap_block_state74_io, grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARVALID, ap_CS_fsm_state145, ap_CS_fsm_state146)
    begin
        if (((ap_const_boolean_0 = ap_block_state74_io) and (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            gmem0_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state145))) then 
            gmem0_ARVALID <= grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_ARVALID;
        else 
            gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_RREADY_assign_proc : process(grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_RREADY, ap_CS_fsm_state145, ap_CS_fsm_state146)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state145))) then 
            gmem0_RREADY <= grp_process_features_Pipeline_2_fu_439_m_axi_gmem0_RREADY;
        else 
            gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_blk_n_AR_assign_proc : process(m_axi_gmem0_ARREADY, ap_CS_fsm_state74)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            gmem0_blk_n_AR <= m_axi_gmem0_ARREADY;
        else 
            gmem0_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_ARADDR_assign_proc : process(ap_CS_fsm_state1, gmem1_ARREADY, ap_block_state1, grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARADDR, ap_CS_fsm_state72, ap_CS_fsm_state73, sext_ln190_fu_586_p1)
    begin
        if ((not(((gmem1_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARADDR <= sext_ln190_fu_586_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem1_ARADDR <= grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARADDR;
        else 
            gmem1_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_ARLEN_assign_proc : process(ap_CS_fsm_state1, gmem1_ARREADY, ap_block_state1, grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARLEN, ap_CS_fsm_state72, ap_CS_fsm_state73)
    begin
        if ((not(((gmem1_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARLEN <= ap_const_lv64_51000(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem1_ARLEN <= grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARLEN;
        else 
            gmem1_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_ARVALID_assign_proc : process(ap_CS_fsm_state1, gmem1_ARREADY, ap_block_state1, grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARVALID, ap_CS_fsm_state72, ap_CS_fsm_state73)
    begin
        if ((not(((gmem1_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem1_ARVALID <= grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_ARVALID;
        else 
            gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_RREADY_assign_proc : process(grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_RREADY, ap_CS_fsm_state72, ap_CS_fsm_state73)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem1_RREADY <= grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_m_axi_gmem1_RREADY;
        else 
            gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_blk_n_AR_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, m_axi_gmem1_ARREADY)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_blk_n_AR <= m_axi_gmem1_ARREADY;
        else 
            gmem1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem2_ARADDR_assign_proc : process(ap_CS_fsm_state74, ap_block_state74_io, grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARADDR, ap_CS_fsm_state145, ap_CS_fsm_state146, sext_ln86_fu_639_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_state74_io) and (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            gmem2_ARADDR <= sext_ln86_fu_639_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state145))) then 
            gmem2_ARADDR <= grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARADDR;
        else 
            gmem2_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem2_ARLEN_assign_proc : process(ap_CS_fsm_state74, ap_block_state74_io, grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARLEN, ap_CS_fsm_state145, ap_CS_fsm_state146)
    begin
        if (((ap_const_boolean_0 = ap_block_state74_io) and (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            gmem2_ARLEN <= ap_const_lv64_10(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state145))) then 
            gmem2_ARLEN <= grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARLEN;
        else 
            gmem2_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem2_ARVALID_assign_proc : process(ap_CS_fsm_state74, ap_block_state74_io, grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARVALID, ap_CS_fsm_state145, ap_CS_fsm_state146)
    begin
        if (((ap_const_boolean_0 = ap_block_state74_io) and (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            gmem2_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state145))) then 
            gmem2_ARVALID <= grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_ARVALID;
        else 
            gmem2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_RREADY_assign_proc : process(grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_RREADY, ap_CS_fsm_state145, ap_CS_fsm_state146)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state145))) then 
            gmem2_RREADY <= grp_process_features_Pipeline_3_fu_478_m_axi_gmem2_RREADY;
        else 
            gmem2_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_blk_n_AR_assign_proc : process(m_axi_gmem2_ARREADY, ap_CS_fsm_state74)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            gmem2_blk_n_AR <= m_axi_gmem2_ARREADY;
        else 
            gmem2_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem3_AWVALID_assign_proc : process(grp_squash_fu_557_m_axi_gmem3_AWVALID, ap_CS_fsm_state159, ap_CS_fsm_state160)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state160) or (ap_const_logic_1 = ap_CS_fsm_state159))) then 
            gmem3_AWVALID <= grp_squash_fu_557_m_axi_gmem3_AWVALID;
        else 
            gmem3_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem3_BREADY_assign_proc : process(grp_squash_fu_557_m_axi_gmem3_BREADY, ap_CS_fsm_state159, ap_CS_fsm_state160)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state160) or (ap_const_logic_1 = ap_CS_fsm_state159))) then 
            gmem3_BREADY <= grp_squash_fu_557_m_axi_gmem3_BREADY;
        else 
            gmem3_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem3_WVALID_assign_proc : process(grp_squash_fu_557_m_axi_gmem3_WVALID, ap_CS_fsm_state159, ap_CS_fsm_state160)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state160) or (ap_const_logic_1 = ap_CS_fsm_state159))) then 
            gmem3_WVALID <= grp_squash_fu_557_m_axi_gmem3_WVALID;
        else 
            gmem3_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    grp_calculate_single_value_fu_498_ap_start <= grp_calculate_single_value_fu_498_ap_start_reg;
    grp_process_features_Pipeline_2_fu_439_ap_start <= grp_process_features_Pipeline_2_fu_439_ap_start_reg;
    grp_process_features_Pipeline_3_fu_478_ap_start <= grp_process_features_Pipeline_3_fu_478_ap_start_reg;
    grp_process_features_Pipeline_5_fu_492_ap_start <= grp_process_features_Pipeline_5_fu_492_ap_start_reg;
    grp_process_features_Pipeline_6_fu_539_ap_start <= grp_process_features_Pipeline_6_fu_539_ap_start_reg;
    grp_process_features_Pipeline_8_fu_551_ap_start <= grp_process_features_Pipeline_8_fu_551_ap_start_reg;
    grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_start <= grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_ap_start_reg;
    grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_start <= grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_ap_start_reg;
    grp_process_features_Pipeline_conv_weights_fu_486_ap_start <= grp_process_features_Pipeline_conv_weights_fu_486_ap_start_reg;
    grp_squash_fu_557_ap_start <= grp_squash_fu_557_ap_start_reg;
    icmp_ln110_fu_703_p2 <= "1" when (output_length_reg_407 = ap_const_lv3_6) else "0";
    icmp_ln112_fu_752_p2 <= "1" when (output_width_reg_419 = ap_const_lv3_6) else "0";
    icmp_ln99_fu_658_p2 <= "1" when (output_depth_fu_174 = ap_const_lv9_100) else "0";

    input_buffer_10_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_10_address0, grp_calculate_single_value_fu_498_input_a_7_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_10_address0 <= grp_calculate_single_value_fu_498_input_a_7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_10_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_10_address0;
        else 
            input_buffer_10_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_10_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_10_ce0, grp_calculate_single_value_fu_498_input_a_7_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_10_ce0 <= grp_calculate_single_value_fu_498_input_a_7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_10_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_10_ce0;
        else 
            input_buffer_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_10_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_7_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_10_ce1 <= grp_calculate_single_value_fu_498_input_a_7_ce1;
        else 
            input_buffer_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_10_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_7_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_10_ce2 <= grp_calculate_single_value_fu_498_input_a_7_ce2;
        else 
            input_buffer_10_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_10_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_10_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_10_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_10_we0;
        else 
            input_buffer_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_11_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_11_address0, grp_calculate_single_value_fu_498_input_a_8_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_11_address0 <= grp_calculate_single_value_fu_498_input_a_8_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_11_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_11_address0;
        else 
            input_buffer_11_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_11_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_11_ce0, grp_calculate_single_value_fu_498_input_a_8_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_11_ce0 <= grp_calculate_single_value_fu_498_input_a_8_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_11_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_11_ce0;
        else 
            input_buffer_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_11_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_8_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_11_ce1 <= grp_calculate_single_value_fu_498_input_a_8_ce1;
        else 
            input_buffer_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_11_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_8_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_11_ce2 <= grp_calculate_single_value_fu_498_input_a_8_ce2;
        else 
            input_buffer_11_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_11_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_8_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_11_ce3 <= grp_calculate_single_value_fu_498_input_a_8_ce3;
        else 
            input_buffer_11_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_11_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_11_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_11_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_11_we0;
        else 
            input_buffer_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_12_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_12_address0, grp_calculate_single_value_fu_498_input_a_9_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_12_address0 <= grp_calculate_single_value_fu_498_input_a_9_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_12_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_12_address0;
        else 
            input_buffer_12_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_12_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_12_ce0, grp_calculate_single_value_fu_498_input_a_9_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_12_ce0 <= grp_calculate_single_value_fu_498_input_a_9_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_12_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_12_ce0;
        else 
            input_buffer_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_12_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_9_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_12_ce1 <= grp_calculate_single_value_fu_498_input_a_9_ce1;
        else 
            input_buffer_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_12_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_9_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_12_ce2 <= grp_calculate_single_value_fu_498_input_a_9_ce2;
        else 
            input_buffer_12_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_12_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_12_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_12_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_12_we0;
        else 
            input_buffer_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_13_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_13_address0, grp_calculate_single_value_fu_498_input_a_10_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_13_address0 <= grp_calculate_single_value_fu_498_input_a_10_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_13_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_13_address0;
        else 
            input_buffer_13_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_13_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_13_ce0, grp_calculate_single_value_fu_498_input_a_10_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_13_ce0 <= grp_calculate_single_value_fu_498_input_a_10_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_13_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_13_ce0;
        else 
            input_buffer_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_13_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_10_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_13_ce1 <= grp_calculate_single_value_fu_498_input_a_10_ce1;
        else 
            input_buffer_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_13_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_10_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_13_ce2 <= grp_calculate_single_value_fu_498_input_a_10_ce2;
        else 
            input_buffer_13_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_13_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_10_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_13_ce3 <= grp_calculate_single_value_fu_498_input_a_10_ce3;
        else 
            input_buffer_13_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_13_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_13_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_13_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_13_we0;
        else 
            input_buffer_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_14_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_14_address0, grp_calculate_single_value_fu_498_input_a_11_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_14_address0 <= grp_calculate_single_value_fu_498_input_a_11_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_14_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_14_address0;
        else 
            input_buffer_14_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_14_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_14_ce0, grp_calculate_single_value_fu_498_input_a_11_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_14_ce0 <= grp_calculate_single_value_fu_498_input_a_11_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_14_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_14_ce0;
        else 
            input_buffer_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_14_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_11_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_14_ce1 <= grp_calculate_single_value_fu_498_input_a_11_ce1;
        else 
            input_buffer_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_14_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_11_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_14_ce2 <= grp_calculate_single_value_fu_498_input_a_11_ce2;
        else 
            input_buffer_14_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_14_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_14_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_14_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_14_we0;
        else 
            input_buffer_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_15_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_15_address0, grp_calculate_single_value_fu_498_input_a_12_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_15_address0 <= grp_calculate_single_value_fu_498_input_a_12_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_15_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_15_address0;
        else 
            input_buffer_15_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_15_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_15_ce0, grp_calculate_single_value_fu_498_input_a_12_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_15_ce0 <= grp_calculate_single_value_fu_498_input_a_12_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_15_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_15_ce0;
        else 
            input_buffer_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_15_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_12_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_15_ce1 <= grp_calculate_single_value_fu_498_input_a_12_ce1;
        else 
            input_buffer_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_15_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_12_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_15_ce2 <= grp_calculate_single_value_fu_498_input_a_12_ce2;
        else 
            input_buffer_15_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_15_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_12_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_15_ce3 <= grp_calculate_single_value_fu_498_input_a_12_ce3;
        else 
            input_buffer_15_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_15_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_15_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_15_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_15_we0;
        else 
            input_buffer_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_16_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_16_address0, grp_calculate_single_value_fu_498_input_a_13_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_16_address0 <= grp_calculate_single_value_fu_498_input_a_13_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_16_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_16_address0;
        else 
            input_buffer_16_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_16_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_16_ce0, grp_calculate_single_value_fu_498_input_a_13_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_16_ce0 <= grp_calculate_single_value_fu_498_input_a_13_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_16_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_16_ce0;
        else 
            input_buffer_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_16_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_13_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_16_ce1 <= grp_calculate_single_value_fu_498_input_a_13_ce1;
        else 
            input_buffer_16_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_16_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_13_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_16_ce2 <= grp_calculate_single_value_fu_498_input_a_13_ce2;
        else 
            input_buffer_16_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_16_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_16_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_16_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_16_we0;
        else 
            input_buffer_16_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_17_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_17_address0, grp_calculate_single_value_fu_498_input_a_14_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_17_address0 <= grp_calculate_single_value_fu_498_input_a_14_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_17_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_17_address0;
        else 
            input_buffer_17_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_17_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_17_ce0, grp_calculate_single_value_fu_498_input_a_14_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_17_ce0 <= grp_calculate_single_value_fu_498_input_a_14_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_17_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_17_ce0;
        else 
            input_buffer_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_17_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_14_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_17_ce1 <= grp_calculate_single_value_fu_498_input_a_14_ce1;
        else 
            input_buffer_17_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_17_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_14_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_17_ce2 <= grp_calculate_single_value_fu_498_input_a_14_ce2;
        else 
            input_buffer_17_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_17_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_14_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_17_ce3 <= grp_calculate_single_value_fu_498_input_a_14_ce3;
        else 
            input_buffer_17_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_17_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_17_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_17_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_17_we0;
        else 
            input_buffer_17_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_18_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_18_address0, grp_calculate_single_value_fu_498_input_a_15_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_18_address0 <= grp_calculate_single_value_fu_498_input_a_15_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_18_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_18_address0;
        else 
            input_buffer_18_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_18_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_18_ce0, grp_calculate_single_value_fu_498_input_a_15_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_18_ce0 <= grp_calculate_single_value_fu_498_input_a_15_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_18_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_18_ce0;
        else 
            input_buffer_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_18_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_15_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_18_ce1 <= grp_calculate_single_value_fu_498_input_a_15_ce1;
        else 
            input_buffer_18_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_18_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_15_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_18_ce2 <= grp_calculate_single_value_fu_498_input_a_15_ce2;
        else 
            input_buffer_18_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_18_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_18_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_18_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_18_we0;
        else 
            input_buffer_18_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_19_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_19_address0, grp_calculate_single_value_fu_498_input_a_16_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_19_address0 <= grp_calculate_single_value_fu_498_input_a_16_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_19_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_19_address0;
        else 
            input_buffer_19_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_19_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_19_ce0, grp_calculate_single_value_fu_498_input_a_16_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_19_ce0 <= grp_calculate_single_value_fu_498_input_a_16_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_19_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_19_ce0;
        else 
            input_buffer_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_19_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_16_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_19_ce1 <= grp_calculate_single_value_fu_498_input_a_16_ce1;
        else 
            input_buffer_19_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_19_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_16_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_19_ce2 <= grp_calculate_single_value_fu_498_input_a_16_ce2;
        else 
            input_buffer_19_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_19_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_16_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_19_ce3 <= grp_calculate_single_value_fu_498_input_a_16_ce3;
        else 
            input_buffer_19_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_19_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_19_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_19_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_19_we0;
        else 
            input_buffer_19_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_20_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_20_address0, grp_calculate_single_value_fu_498_input_a_17_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_20_address0 <= grp_calculate_single_value_fu_498_input_a_17_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_20_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_20_address0;
        else 
            input_buffer_20_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_20_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_20_ce0, grp_calculate_single_value_fu_498_input_a_17_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_20_ce0 <= grp_calculate_single_value_fu_498_input_a_17_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_20_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_20_ce0;
        else 
            input_buffer_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_20_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_17_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_20_ce1 <= grp_calculate_single_value_fu_498_input_a_17_ce1;
        else 
            input_buffer_20_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_20_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_17_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_20_ce2 <= grp_calculate_single_value_fu_498_input_a_17_ce2;
        else 
            input_buffer_20_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_20_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_20_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_20_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_20_we0;
        else 
            input_buffer_20_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_21_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_21_address0, grp_calculate_single_value_fu_498_input_a_18_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_21_address0 <= grp_calculate_single_value_fu_498_input_a_18_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_21_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_21_address0;
        else 
            input_buffer_21_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_21_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_21_ce0, grp_calculate_single_value_fu_498_input_a_18_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_21_ce0 <= grp_calculate_single_value_fu_498_input_a_18_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_21_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_21_ce0;
        else 
            input_buffer_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_21_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_18_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_21_ce1 <= grp_calculate_single_value_fu_498_input_a_18_ce1;
        else 
            input_buffer_21_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_21_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_18_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_21_ce2 <= grp_calculate_single_value_fu_498_input_a_18_ce2;
        else 
            input_buffer_21_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_21_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_18_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_21_ce3 <= grp_calculate_single_value_fu_498_input_a_18_ce3;
        else 
            input_buffer_21_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_21_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_21_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_21_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_21_we0;
        else 
            input_buffer_21_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_22_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_22_address0, grp_calculate_single_value_fu_498_input_a_19_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_22_address0 <= grp_calculate_single_value_fu_498_input_a_19_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_22_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_22_address0;
        else 
            input_buffer_22_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_22_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_22_ce0, grp_calculate_single_value_fu_498_input_a_19_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_22_ce0 <= grp_calculate_single_value_fu_498_input_a_19_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_22_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_22_ce0;
        else 
            input_buffer_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_22_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_19_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_22_ce1 <= grp_calculate_single_value_fu_498_input_a_19_ce1;
        else 
            input_buffer_22_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_22_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_19_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_22_ce2 <= grp_calculate_single_value_fu_498_input_a_19_ce2;
        else 
            input_buffer_22_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_22_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_22_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_22_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_22_we0;
        else 
            input_buffer_22_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_23_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_23_address0, grp_calculate_single_value_fu_498_input_a_20_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_23_address0 <= grp_calculate_single_value_fu_498_input_a_20_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_23_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_23_address0;
        else 
            input_buffer_23_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_23_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_23_ce0, grp_calculate_single_value_fu_498_input_a_20_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_23_ce0 <= grp_calculate_single_value_fu_498_input_a_20_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_23_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_23_ce0;
        else 
            input_buffer_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_23_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_20_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_23_ce1 <= grp_calculate_single_value_fu_498_input_a_20_ce1;
        else 
            input_buffer_23_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_23_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_20_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_23_ce2 <= grp_calculate_single_value_fu_498_input_a_20_ce2;
        else 
            input_buffer_23_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_23_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_20_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_23_ce3 <= grp_calculate_single_value_fu_498_input_a_20_ce3;
        else 
            input_buffer_23_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_23_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_23_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_23_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_23_we0;
        else 
            input_buffer_23_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_24_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_24_address0, grp_calculate_single_value_fu_498_input_a_21_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_24_address0 <= grp_calculate_single_value_fu_498_input_a_21_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_24_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_24_address0;
        else 
            input_buffer_24_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_24_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_24_ce0, grp_calculate_single_value_fu_498_input_a_21_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_24_ce0 <= grp_calculate_single_value_fu_498_input_a_21_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_24_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_24_ce0;
        else 
            input_buffer_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_24_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_21_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_24_ce1 <= grp_calculate_single_value_fu_498_input_a_21_ce1;
        else 
            input_buffer_24_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_24_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_21_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_24_ce2 <= grp_calculate_single_value_fu_498_input_a_21_ce2;
        else 
            input_buffer_24_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_24_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_24_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_24_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_24_we0;
        else 
            input_buffer_24_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_25_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_25_address0, grp_calculate_single_value_fu_498_input_a_22_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_25_address0 <= grp_calculate_single_value_fu_498_input_a_22_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_25_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_25_address0;
        else 
            input_buffer_25_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_25_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_25_ce0, grp_calculate_single_value_fu_498_input_a_22_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_25_ce0 <= grp_calculate_single_value_fu_498_input_a_22_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_25_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_25_ce0;
        else 
            input_buffer_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_25_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_22_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_25_ce1 <= grp_calculate_single_value_fu_498_input_a_22_ce1;
        else 
            input_buffer_25_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_25_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_22_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_25_ce2 <= grp_calculate_single_value_fu_498_input_a_22_ce2;
        else 
            input_buffer_25_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_25_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_22_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_25_ce3 <= grp_calculate_single_value_fu_498_input_a_22_ce3;
        else 
            input_buffer_25_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_25_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_25_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_25_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_25_we0;
        else 
            input_buffer_25_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_26_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_26_address0, grp_calculate_single_value_fu_498_input_a_23_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_26_address0 <= grp_calculate_single_value_fu_498_input_a_23_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_26_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_26_address0;
        else 
            input_buffer_26_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_26_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_26_ce0, grp_calculate_single_value_fu_498_input_a_23_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_26_ce0 <= grp_calculate_single_value_fu_498_input_a_23_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_26_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_26_ce0;
        else 
            input_buffer_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_26_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_23_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_26_ce1 <= grp_calculate_single_value_fu_498_input_a_23_ce1;
        else 
            input_buffer_26_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_26_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_23_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_26_ce2 <= grp_calculate_single_value_fu_498_input_a_23_ce2;
        else 
            input_buffer_26_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_26_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_26_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_26_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_26_we0;
        else 
            input_buffer_26_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_27_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_27_address0, grp_calculate_single_value_fu_498_input_a_24_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_27_address0 <= grp_calculate_single_value_fu_498_input_a_24_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_27_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_27_address0;
        else 
            input_buffer_27_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_27_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_27_ce0, grp_calculate_single_value_fu_498_input_a_24_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_27_ce0 <= grp_calculate_single_value_fu_498_input_a_24_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_27_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_27_ce0;
        else 
            input_buffer_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_27_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_24_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_27_ce1 <= grp_calculate_single_value_fu_498_input_a_24_ce1;
        else 
            input_buffer_27_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_27_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_24_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_27_ce2 <= grp_calculate_single_value_fu_498_input_a_24_ce2;
        else 
            input_buffer_27_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_27_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_24_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_27_ce3 <= grp_calculate_single_value_fu_498_input_a_24_ce3;
        else 
            input_buffer_27_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_27_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_27_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_27_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_27_we0;
        else 
            input_buffer_27_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_28_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_28_address0, grp_calculate_single_value_fu_498_input_a_25_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_28_address0 <= grp_calculate_single_value_fu_498_input_a_25_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_28_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_28_address0;
        else 
            input_buffer_28_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_28_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_28_ce0, grp_calculate_single_value_fu_498_input_a_25_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_28_ce0 <= grp_calculate_single_value_fu_498_input_a_25_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_28_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_28_ce0;
        else 
            input_buffer_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_28_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_25_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_28_ce1 <= grp_calculate_single_value_fu_498_input_a_25_ce1;
        else 
            input_buffer_28_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_28_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_25_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_28_ce2 <= grp_calculate_single_value_fu_498_input_a_25_ce2;
        else 
            input_buffer_28_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_28_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_28_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_28_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_28_we0;
        else 
            input_buffer_28_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_29_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_29_address0, grp_calculate_single_value_fu_498_input_a_26_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_29_address0 <= grp_calculate_single_value_fu_498_input_a_26_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_29_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_29_address0;
        else 
            input_buffer_29_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_29_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_29_ce0, grp_calculate_single_value_fu_498_input_a_26_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_29_ce0 <= grp_calculate_single_value_fu_498_input_a_26_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_29_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_29_ce0;
        else 
            input_buffer_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_29_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_26_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_29_ce1 <= grp_calculate_single_value_fu_498_input_a_26_ce1;
        else 
            input_buffer_29_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_29_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_26_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_29_ce2 <= grp_calculate_single_value_fu_498_input_a_26_ce2;
        else 
            input_buffer_29_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_29_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_26_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_29_ce3 <= grp_calculate_single_value_fu_498_input_a_26_ce3;
        else 
            input_buffer_29_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_29_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_29_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_29_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_29_we0;
        else 
            input_buffer_29_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_30_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_30_address0, grp_calculate_single_value_fu_498_input_a_27_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_30_address0 <= grp_calculate_single_value_fu_498_input_a_27_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_30_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_30_address0;
        else 
            input_buffer_30_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_30_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_30_ce0, grp_calculate_single_value_fu_498_input_a_27_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_30_ce0 <= grp_calculate_single_value_fu_498_input_a_27_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_30_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_30_ce0;
        else 
            input_buffer_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_30_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_27_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_30_ce1 <= grp_calculate_single_value_fu_498_input_a_27_ce1;
        else 
            input_buffer_30_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_30_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_27_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_30_ce2 <= grp_calculate_single_value_fu_498_input_a_27_ce2;
        else 
            input_buffer_30_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_30_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_30_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_30_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_30_we0;
        else 
            input_buffer_30_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_31_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_31_address0, grp_calculate_single_value_fu_498_input_a_28_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_31_address0 <= grp_calculate_single_value_fu_498_input_a_28_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_31_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_31_address0;
        else 
            input_buffer_31_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_31_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_31_ce0, grp_calculate_single_value_fu_498_input_a_28_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_31_ce0 <= grp_calculate_single_value_fu_498_input_a_28_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_31_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_31_ce0;
        else 
            input_buffer_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_31_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_28_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_31_ce1 <= grp_calculate_single_value_fu_498_input_a_28_ce1;
        else 
            input_buffer_31_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_31_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_28_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_31_ce2 <= grp_calculate_single_value_fu_498_input_a_28_ce2;
        else 
            input_buffer_31_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_31_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_28_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_31_ce3 <= grp_calculate_single_value_fu_498_input_a_28_ce3;
        else 
            input_buffer_31_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_31_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_31_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_31_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_31_we0;
        else 
            input_buffer_31_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_32_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_32_address0, grp_calculate_single_value_fu_498_input_a_29_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_32_address0 <= grp_calculate_single_value_fu_498_input_a_29_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_32_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_32_address0;
        else 
            input_buffer_32_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_32_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_32_ce0, grp_calculate_single_value_fu_498_input_a_29_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_32_ce0 <= grp_calculate_single_value_fu_498_input_a_29_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_32_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_32_ce0;
        else 
            input_buffer_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_32_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_29_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_32_ce1 <= grp_calculate_single_value_fu_498_input_a_29_ce1;
        else 
            input_buffer_32_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_32_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_29_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_32_ce2 <= grp_calculate_single_value_fu_498_input_a_29_ce2;
        else 
            input_buffer_32_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_32_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_32_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_32_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_32_we0;
        else 
            input_buffer_32_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_33_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_33_address0, grp_calculate_single_value_fu_498_input_a_30_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_33_address0 <= grp_calculate_single_value_fu_498_input_a_30_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_33_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_33_address0;
        else 
            input_buffer_33_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_33_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_33_ce0, grp_calculate_single_value_fu_498_input_a_30_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_33_ce0 <= grp_calculate_single_value_fu_498_input_a_30_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_33_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_33_ce0;
        else 
            input_buffer_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_33_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_30_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_33_ce1 <= grp_calculate_single_value_fu_498_input_a_30_ce1;
        else 
            input_buffer_33_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_33_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_30_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_33_ce2 <= grp_calculate_single_value_fu_498_input_a_30_ce2;
        else 
            input_buffer_33_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_33_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_30_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_33_ce3 <= grp_calculate_single_value_fu_498_input_a_30_ce3;
        else 
            input_buffer_33_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_33_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_33_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_33_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_33_we0;
        else 
            input_buffer_33_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_34_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_34_address0, grp_calculate_single_value_fu_498_input_a_31_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_34_address0 <= grp_calculate_single_value_fu_498_input_a_31_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_34_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_34_address0;
        else 
            input_buffer_34_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_34_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_34_ce0, grp_calculate_single_value_fu_498_input_a_31_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_34_ce0 <= grp_calculate_single_value_fu_498_input_a_31_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_34_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_34_ce0;
        else 
            input_buffer_34_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_34_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_31_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_34_ce1 <= grp_calculate_single_value_fu_498_input_a_31_ce1;
        else 
            input_buffer_34_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_34_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_31_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_34_ce2 <= grp_calculate_single_value_fu_498_input_a_31_ce2;
        else 
            input_buffer_34_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_34_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_34_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_34_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_34_we0;
        else 
            input_buffer_34_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_4_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_4_address0, grp_calculate_single_value_fu_498_input_a_1_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_4_address0 <= grp_calculate_single_value_fu_498_input_a_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_4_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_4_address0;
        else 
            input_buffer_4_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_4_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_4_ce0, grp_calculate_single_value_fu_498_input_a_1_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_4_ce0 <= grp_calculate_single_value_fu_498_input_a_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_4_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_4_ce0;
        else 
            input_buffer_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_4_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_1_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_4_ce1 <= grp_calculate_single_value_fu_498_input_a_1_ce1;
        else 
            input_buffer_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_4_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_1_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_4_ce2 <= grp_calculate_single_value_fu_498_input_a_1_ce2;
        else 
            input_buffer_4_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_4_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_4_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_4_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_4_we0;
        else 
            input_buffer_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_5_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_5_address0, grp_calculate_single_value_fu_498_input_a_2_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_5_address0 <= grp_calculate_single_value_fu_498_input_a_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_5_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_5_address0;
        else 
            input_buffer_5_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_5_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_5_ce0, grp_calculate_single_value_fu_498_input_a_2_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_5_ce0 <= grp_calculate_single_value_fu_498_input_a_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_5_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_5_ce0;
        else 
            input_buffer_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_5_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_2_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_5_ce1 <= grp_calculate_single_value_fu_498_input_a_2_ce1;
        else 
            input_buffer_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_5_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_2_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_5_ce2 <= grp_calculate_single_value_fu_498_input_a_2_ce2;
        else 
            input_buffer_5_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_5_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_2_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_5_ce3 <= grp_calculate_single_value_fu_498_input_a_2_ce3;
        else 
            input_buffer_5_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_5_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_5_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_5_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_5_we0;
        else 
            input_buffer_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_6_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_6_address0, grp_calculate_single_value_fu_498_input_a_3_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_6_address0 <= grp_calculate_single_value_fu_498_input_a_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_6_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_6_address0;
        else 
            input_buffer_6_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_6_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_6_ce0, grp_calculate_single_value_fu_498_input_a_3_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_6_ce0 <= grp_calculate_single_value_fu_498_input_a_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_6_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_6_ce0;
        else 
            input_buffer_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_6_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_3_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_6_ce1 <= grp_calculate_single_value_fu_498_input_a_3_ce1;
        else 
            input_buffer_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_6_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_3_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_6_ce2 <= grp_calculate_single_value_fu_498_input_a_3_ce2;
        else 
            input_buffer_6_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_6_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_6_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_6_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_6_we0;
        else 
            input_buffer_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_7_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_7_address0, grp_calculate_single_value_fu_498_input_a_4_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_7_address0 <= grp_calculate_single_value_fu_498_input_a_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_7_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_7_address0;
        else 
            input_buffer_7_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_7_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_7_ce0, grp_calculate_single_value_fu_498_input_a_4_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_7_ce0 <= grp_calculate_single_value_fu_498_input_a_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_7_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_7_ce0;
        else 
            input_buffer_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_7_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_4_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_7_ce1 <= grp_calculate_single_value_fu_498_input_a_4_ce1;
        else 
            input_buffer_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_7_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_4_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_7_ce2 <= grp_calculate_single_value_fu_498_input_a_4_ce2;
        else 
            input_buffer_7_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_7_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_4_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_7_ce3 <= grp_calculate_single_value_fu_498_input_a_4_ce3;
        else 
            input_buffer_7_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_7_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_7_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_7_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_7_we0;
        else 
            input_buffer_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_8_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_8_address0, grp_calculate_single_value_fu_498_input_a_5_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_8_address0 <= grp_calculate_single_value_fu_498_input_a_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_8_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_8_address0;
        else 
            input_buffer_8_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_8_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_8_ce0, grp_calculate_single_value_fu_498_input_a_5_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_8_ce0 <= grp_calculate_single_value_fu_498_input_a_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_8_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_8_ce0;
        else 
            input_buffer_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_8_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_5_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_8_ce1 <= grp_calculate_single_value_fu_498_input_a_5_ce1;
        else 
            input_buffer_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_8_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_5_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_8_ce2 <= grp_calculate_single_value_fu_498_input_a_5_ce2;
        else 
            input_buffer_8_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_8_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_8_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_8_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_8_we0;
        else 
            input_buffer_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_9_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_9_address0, grp_calculate_single_value_fu_498_input_a_6_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_9_address0 <= grp_calculate_single_value_fu_498_input_a_6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_9_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_9_address0;
        else 
            input_buffer_9_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_9_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_9_ce0, grp_calculate_single_value_fu_498_input_a_6_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_9_ce0 <= grp_calculate_single_value_fu_498_input_a_6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_9_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_9_ce0;
        else 
            input_buffer_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_9_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_6_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_9_ce1 <= grp_calculate_single_value_fu_498_input_a_6_ce1;
        else 
            input_buffer_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_9_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_6_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_9_ce2 <= grp_calculate_single_value_fu_498_input_a_6_ce2;
        else 
            input_buffer_9_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_9_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_6_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_9_ce3 <= grp_calculate_single_value_fu_498_input_a_6_ce3;
        else 
            input_buffer_9_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_9_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_9_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_9_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_9_we0;
        else 
            input_buffer_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_address0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_address0, grp_calculate_single_value_fu_498_input_a_0_address0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_address0 <= grp_calculate_single_value_fu_498_input_a_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_address0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_address0;
        else 
            input_buffer_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_ce0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_ce0, grp_calculate_single_value_fu_498_input_a_0_ce0, ap_CS_fsm_state151, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_ce0 <= grp_calculate_single_value_fu_498_input_a_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_ce0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_ce0;
        else 
            input_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_ce1_assign_proc : process(grp_calculate_single_value_fu_498_input_a_0_ce1, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_ce1 <= grp_calculate_single_value_fu_498_input_a_0_ce1;
        else 
            input_buffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_ce2_assign_proc : process(grp_calculate_single_value_fu_498_input_a_0_ce2, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_ce2 <= grp_calculate_single_value_fu_498_input_a_0_ce2;
        else 
            input_buffer_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_ce3_assign_proc : process(grp_calculate_single_value_fu_498_input_a_0_ce3, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            input_buffer_ce3 <= grp_calculate_single_value_fu_498_input_a_0_ce3;
        else 
            input_buffer_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_we0_assign_proc : process(grp_process_features_Pipeline_2_fu_439_input_buffer_we0, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            input_buffer_we0 <= grp_process_features_Pipeline_2_fu_439_input_buffer_we0;
        else 
            input_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_4_address0_assign_proc : process(grp_process_features_Pipeline_5_fu_492_output_buffer_4_address0, ap_CS_fsm_state152, zext_ln116_fu_778_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state152)) then 
            output_buffer_4_address0 <= grp_process_features_Pipeline_5_fu_492_output_buffer_4_address0;
        else 
            output_buffer_4_address0 <= zext_ln116_fu_778_p1(14 - 1 downto 0);
        end if; 
    end process;


    output_buffer_4_ce0_assign_proc : process(grp_process_features_Pipeline_5_fu_492_output_buffer_4_ce0, ap_CS_fsm_state152, output_buffer_4_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state152)) then 
            output_buffer_4_ce0 <= grp_process_features_Pipeline_5_fu_492_output_buffer_4_ce0;
        else 
            output_buffer_4_ce0 <= output_buffer_4_ce0_local;
        end if; 
    end process;


    output_buffer_4_ce0_local_assign_proc : process(grp_calculate_single_value_fu_498_ap_done, ap_CS_fsm_state151)
    begin
        if (((grp_calculate_single_value_fu_498_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state151))) then 
            output_buffer_4_ce0_local <= ap_const_logic_1;
        else 
            output_buffer_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_4_we0_local_assign_proc : process(grp_calculate_single_value_fu_498_ap_done, ap_CS_fsm_state151)
    begin
        if (((grp_calculate_single_value_fu_498_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state151))) then 
            output_buffer_4_we0_local <= ap_const_logic_1;
        else 
            output_buffer_4_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_address0_assign_proc : process(grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_output_buffer_address0, grp_process_features_Pipeline_8_fu_551_output_buffer_address0, ap_CS_fsm_state156, ap_CS_fsm_state158)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state158)) then 
            output_buffer_address0 <= grp_process_features_Pipeline_8_fu_551_output_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state156)) then 
            output_buffer_address0 <= grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_output_buffer_address0;
        else 
            output_buffer_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    output_buffer_ce0_assign_proc : process(grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_output_buffer_ce0, grp_process_features_Pipeline_8_fu_551_output_buffer_ce0, ap_CS_fsm_state156, ap_CS_fsm_state158)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state158)) then 
            output_buffer_ce0 <= grp_process_features_Pipeline_8_fu_551_output_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state156)) then 
            output_buffer_ce0 <= grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_output_buffer_ce0;
        else 
            output_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_we0_assign_proc : process(grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_output_buffer_we0, ap_CS_fsm_state156)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state156)) then 
            output_buffer_we0 <= grp_process_features_Pipeline_VITIS_LOOP_235_1_VITIS_LOOP_237_2_VITIS_LOOP_239_3_VIT_fu_545_output_buffer_we0;
        else 
            output_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_cast6_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_86_fu_729_p2),14));
    p_shl1_fu_673_p3 <= (output_depth_fu_174 & ap_const_lv5_0);
    p_shl67_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_717_p3),6));
    p_shl_fu_709_p3 <= (output_length_reg_407 & ap_const_lv3_0);

    reshape_output_address0_assign_proc : process(grp_process_features_Pipeline_8_fu_551_reshape_output_address0, grp_squash_fu_557_input_r_address0, ap_CS_fsm_state158, ap_CS_fsm_state160)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state160)) then 
            reshape_output_address0 <= grp_squash_fu_557_input_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state158)) then 
            reshape_output_address0 <= grp_process_features_Pipeline_8_fu_551_reshape_output_address0;
        else 
            reshape_output_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    reshape_output_ce0_assign_proc : process(grp_process_features_Pipeline_8_fu_551_reshape_output_ce0, grp_squash_fu_557_input_r_ce0, ap_CS_fsm_state158, ap_CS_fsm_state160)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state160)) then 
            reshape_output_ce0 <= grp_squash_fu_557_input_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state158)) then 
            reshape_output_ce0 <= grp_process_features_Pipeline_8_fu_551_reshape_output_ce0;
        else 
            reshape_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    reshape_output_we0_assign_proc : process(grp_process_features_Pipeline_8_fu_551_reshape_output_we0, ap_CS_fsm_state158)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state158)) then 
            reshape_output_we0 <= grp_process_features_Pipeline_8_fu_551_reshape_output_we0;
        else 
            reshape_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln190_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_576_p4),64));

        sext_ln85_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_reg_820),64));

        sext_ln86_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln6_reg_826),64));

    tmp_16_fu_717_p3 <= (output_length_reg_407 & ap_const_lv1_0);
    tmp_fu_680_p3 <= (output_depth_fu_174 & ap_const_lv2_0);
    trunc_ln_fu_576_p4 <= weights(63 downto 6);

    weight_buffer_address0_assign_proc : process(ap_CS_fsm_state148, grp_process_features_Pipeline_conv_weights_fu_486_weight_buffer_address0, grp_calculate_single_value_fu_498_input_b_address0, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            weight_buffer_address0 <= grp_calculate_single_value_fu_498_input_b_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state148)) then 
            weight_buffer_address0 <= grp_process_features_Pipeline_conv_weights_fu_486_weight_buffer_address0;
        else 
            weight_buffer_address0 <= "XXXXXXXX";
        end if; 
    end process;


    weight_buffer_ce0_assign_proc : process(ap_CS_fsm_state148, grp_process_features_Pipeline_conv_weights_fu_486_weight_buffer_ce0, grp_calculate_single_value_fu_498_input_b_ce0, ap_CS_fsm_state151)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            weight_buffer_ce0 <= grp_calculate_single_value_fu_498_input_b_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state148)) then 
            weight_buffer_ce0 <= grp_process_features_Pipeline_conv_weights_fu_486_weight_buffer_ce0;
        else 
            weight_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_we0_assign_proc : process(ap_CS_fsm_state148, grp_process_features_Pipeline_conv_weights_fu_486_weight_buffer_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state148)) then 
            weight_buffer_we0 <= grp_process_features_Pipeline_conv_weights_fu_486_weight_buffer_we0;
        else 
            weight_buffer_we0 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;


    weights_stream_read_assign_proc : process(ap_CS_fsm_state148, grp_process_features_Pipeline_conv_weights_fu_486_weights_stream_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state148)) then 
            weights_stream_read <= grp_process_features_Pipeline_conv_weights_fu_486_weights_stream_read;
        else 
            weights_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    weights_stream_write_assign_proc : process(grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_weights_stream_write, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            weights_stream_write <= grp_process_features_Pipeline_VITIS_LOOP_190_1_fu_431_weights_stream_write;
        else 
            weights_stream_write <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln110_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_680_p3),14));
    zext_ln112_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output_width_reg_419),14));
    zext_ln116_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln116_1_reg_890),64));
    zext_ln99_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output_depth_fu_174),64));
end behav;
