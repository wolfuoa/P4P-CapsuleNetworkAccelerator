// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module dynamic_routing_dynamic_routing_Pipeline_VITIS_LOOP_224_1_VITIS_LOOP_227_2_VITIS_LOOP_232_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weighted_input_u_address0,
        weighted_input_u_ce0,
        weighted_input_u_q0,
        weighted_input_u_1_address0,
        weighted_input_u_1_ce0,
        weighted_input_u_1_q0,
        weighted_input_u_2_address0,
        weighted_input_u_2_ce0,
        weighted_input_u_2_q0,
        weighted_input_u_3_address0,
        weighted_input_u_3_ce0,
        weighted_input_u_3_q0,
        weighted_input_u_4_address0,
        weighted_input_u_4_ce0,
        weighted_input_u_4_q0,
        weighted_input_u_5_address0,
        weighted_input_u_5_ce0,
        weighted_input_u_5_q0,
        weighted_input_u_6_address0,
        weighted_input_u_6_ce0,
        weighted_input_u_6_q0,
        weighted_input_u_7_address0,
        weighted_input_u_7_ce0,
        weighted_input_u_7_q0,
        coupling_c_address0,
        coupling_c_ce0,
        coupling_c_q0,
        coupling_c_1_address0,
        coupling_c_1_ce0,
        coupling_c_1_q0,
        coupling_c_2_address0,
        coupling_c_2_ce0,
        coupling_c_2_q0,
        coupling_c_3_address0,
        coupling_c_3_ce0,
        coupling_c_3_q0,
        coupling_c_4_address0,
        coupling_c_4_ce0,
        coupling_c_4_q0,
        coupling_c_5_address0,
        coupling_c_5_ce0,
        coupling_c_5_q0,
        coupling_c_6_address0,
        coupling_c_6_ce0,
        coupling_c_6_q0,
        coupling_c_7_address0,
        coupling_c_7_ce0,
        coupling_c_7_q0,
        coupling_c_8_address0,
        coupling_c_8_ce0,
        coupling_c_8_q0,
        coupling_c_9_address0,
        coupling_c_9_ce0,
        coupling_c_9_q0,
        coupling_c_10_address0,
        coupling_c_10_ce0,
        coupling_c_10_q0,
        coupling_c_11_address0,
        coupling_c_11_ce0,
        coupling_c_11_q0,
        coupling_c_12_address0,
        coupling_c_12_ce0,
        coupling_c_12_q0,
        coupling_c_13_address0,
        coupling_c_13_ce0,
        coupling_c_13_q0,
        coupling_c_14_address0,
        coupling_c_14_ce0,
        coupling_c_14_q0,
        coupling_c_15_address0,
        coupling_c_15_ce0,
        coupling_c_15_q0,
        coupling_c_16_address0,
        coupling_c_16_ce0,
        coupling_c_16_q0,
        coupling_c_17_address0,
        coupling_c_17_ce0,
        coupling_c_17_q0,
        coupling_c_18_address0,
        coupling_c_18_ce0,
        coupling_c_18_q0,
        coupling_c_19_address0,
        coupling_c_19_ce0,
        coupling_c_19_q0,
        sum_of_products_s_address0,
        sum_of_products_s_ce0,
        sum_of_products_s_we0,
        sum_of_products_s_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] weighted_input_u_address0;
output   weighted_input_u_ce0;
input  [31:0] weighted_input_u_q0;
output  [14:0] weighted_input_u_1_address0;
output   weighted_input_u_1_ce0;
input  [31:0] weighted_input_u_1_q0;
output  [14:0] weighted_input_u_2_address0;
output   weighted_input_u_2_ce0;
input  [31:0] weighted_input_u_2_q0;
output  [14:0] weighted_input_u_3_address0;
output   weighted_input_u_3_ce0;
input  [31:0] weighted_input_u_3_q0;
output  [14:0] weighted_input_u_4_address0;
output   weighted_input_u_4_ce0;
input  [31:0] weighted_input_u_4_q0;
output  [14:0] weighted_input_u_5_address0;
output   weighted_input_u_5_ce0;
input  [31:0] weighted_input_u_5_q0;
output  [14:0] weighted_input_u_6_address0;
output   weighted_input_u_6_ce0;
input  [31:0] weighted_input_u_6_q0;
output  [14:0] weighted_input_u_7_address0;
output   weighted_input_u_7_ce0;
input  [31:0] weighted_input_u_7_q0;
output  [9:0] coupling_c_address0;
output   coupling_c_ce0;
input  [31:0] coupling_c_q0;
output  [9:0] coupling_c_1_address0;
output   coupling_c_1_ce0;
input  [31:0] coupling_c_1_q0;
output  [9:0] coupling_c_2_address0;
output   coupling_c_2_ce0;
input  [31:0] coupling_c_2_q0;
output  [9:0] coupling_c_3_address0;
output   coupling_c_3_ce0;
input  [31:0] coupling_c_3_q0;
output  [9:0] coupling_c_4_address0;
output   coupling_c_4_ce0;
input  [31:0] coupling_c_4_q0;
output  [9:0] coupling_c_5_address0;
output   coupling_c_5_ce0;
input  [31:0] coupling_c_5_q0;
output  [9:0] coupling_c_6_address0;
output   coupling_c_6_ce0;
input  [31:0] coupling_c_6_q0;
output  [9:0] coupling_c_7_address0;
output   coupling_c_7_ce0;
input  [31:0] coupling_c_7_q0;
output  [9:0] coupling_c_8_address0;
output   coupling_c_8_ce0;
input  [31:0] coupling_c_8_q0;
output  [9:0] coupling_c_9_address0;
output   coupling_c_9_ce0;
input  [31:0] coupling_c_9_q0;
output  [9:0] coupling_c_10_address0;
output   coupling_c_10_ce0;
input  [31:0] coupling_c_10_q0;
output  [9:0] coupling_c_11_address0;
output   coupling_c_11_ce0;
input  [31:0] coupling_c_11_q0;
output  [9:0] coupling_c_12_address0;
output   coupling_c_12_ce0;
input  [31:0] coupling_c_12_q0;
output  [9:0] coupling_c_13_address0;
output   coupling_c_13_ce0;
input  [31:0] coupling_c_13_q0;
output  [9:0] coupling_c_14_address0;
output   coupling_c_14_ce0;
input  [31:0] coupling_c_14_q0;
output  [9:0] coupling_c_15_address0;
output   coupling_c_15_ce0;
input  [31:0] coupling_c_15_q0;
output  [9:0] coupling_c_16_address0;
output   coupling_c_16_ce0;
input  [31:0] coupling_c_16_q0;
output  [9:0] coupling_c_17_address0;
output   coupling_c_17_ce0;
input  [31:0] coupling_c_17_q0;
output  [9:0] coupling_c_18_address0;
output   coupling_c_18_ce0;
input  [31:0] coupling_c_18_q0;
output  [9:0] coupling_c_19_address0;
output   coupling_c_19_ce0;
input  [31:0] coupling_c_19_q0;
output  [7:0] sum_of_products_s_address0;
output   sum_of_products_s_ce0;
output   sum_of_products_s_we0;
output  [31:0] sum_of_products_s_d0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln224_fu_659_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln227_fu_677_p2;
reg   [0:0] icmp_ln227_reg_1218;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter2_reg;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter3_reg;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter4_reg;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter5_reg;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter6_reg;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter7_reg;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter8_reg;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter9_reg;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter10_reg;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter11_reg;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter12_reg;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter13_reg;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter14_reg;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter15_reg;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter16_reg;
reg   [0:0] icmp_ln227_reg_1218_pp0_iter17_reg;
wire   [0:0] and_ln224_fu_695_p2;
reg   [0:0] and_ln224_reg_1223;
reg   [0:0] and_ln224_reg_1223_pp0_iter2_reg;
reg   [0:0] and_ln224_reg_1223_pp0_iter3_reg;
reg   [0:0] and_ln224_reg_1223_pp0_iter4_reg;
reg   [0:0] and_ln224_reg_1223_pp0_iter5_reg;
reg   [0:0] and_ln224_reg_1223_pp0_iter6_reg;
reg   [0:0] and_ln224_reg_1223_pp0_iter7_reg;
reg   [0:0] and_ln224_reg_1223_pp0_iter8_reg;
reg   [0:0] and_ln224_reg_1223_pp0_iter9_reg;
reg   [0:0] and_ln224_reg_1223_pp0_iter10_reg;
reg   [0:0] and_ln224_reg_1223_pp0_iter11_reg;
reg   [0:0] and_ln224_reg_1223_pp0_iter12_reg;
reg   [0:0] and_ln224_reg_1223_pp0_iter13_reg;
reg   [0:0] and_ln224_reg_1223_pp0_iter14_reg;
reg   [0:0] and_ln224_reg_1223_pp0_iter15_reg;
reg   [0:0] and_ln224_reg_1223_pp0_iter16_reg;
reg   [0:0] and_ln224_reg_1223_pp0_iter17_reg;
wire   [3:0] select_ln224_1_fu_707_p3;
reg   [3:0] select_ln224_1_reg_1228;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter2_reg;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter3_reg;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter4_reg;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter5_reg;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter6_reg;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter7_reg;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter8_reg;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter9_reg;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter10_reg;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter11_reg;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter12_reg;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter13_reg;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter14_reg;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter15_reg;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter16_reg;
reg   [3:0] select_ln224_1_reg_1228_pp0_iter17_reg;
wire   [0:0] empty_52_fu_715_p2;
reg   [0:0] empty_52_reg_1235;
reg   [0:0] empty_52_reg_1235_pp0_iter2_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter3_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter4_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter5_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter6_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter7_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter8_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter9_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter10_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter11_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter12_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter13_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter14_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter15_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter16_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter17_reg;
reg   [0:0] empty_52_reg_1235_pp0_iter18_reg;
wire   [10:0] sum_k_mid2_fu_721_p3;
reg   [10:0] sum_k_mid2_reg_1240;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter2_reg;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter3_reg;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter4_reg;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter5_reg;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter6_reg;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter7_reg;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter8_reg;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter9_reg;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter10_reg;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter11_reg;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter12_reg;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter13_reg;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter14_reg;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter15_reg;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter16_reg;
reg   [10:0] sum_k_mid2_reg_1240_pp0_iter17_reg;
wire   [13:0] add_ln237_1_fu_759_p2;
reg   [9:0] tmp_119_reg_1250;
reg   [9:0] tmp_119_reg_1250_pp0_iter2_reg;
reg   [9:0] tmp_119_reg_1250_pp0_iter3_reg;
reg   [9:0] tmp_119_reg_1250_pp0_iter4_reg;
reg   [9:0] tmp_119_reg_1250_pp0_iter5_reg;
reg   [9:0] tmp_119_reg_1250_pp0_iter6_reg;
reg   [9:0] tmp_119_reg_1250_pp0_iter7_reg;
reg   [9:0] tmp_119_reg_1250_pp0_iter8_reg;
reg   [9:0] tmp_119_reg_1250_pp0_iter9_reg;
reg   [9:0] tmp_119_reg_1250_pp0_iter10_reg;
reg   [9:0] tmp_119_reg_1250_pp0_iter11_reg;
reg   [9:0] tmp_119_reg_1250_pp0_iter12_reg;
reg   [9:0] tmp_119_reg_1250_pp0_iter13_reg;
reg   [9:0] tmp_119_reg_1250_pp0_iter14_reg;
reg   [9:0] tmp_119_reg_1250_pp0_iter15_reg;
reg   [9:0] tmp_119_reg_1250_pp0_iter16_reg;
reg   [9:0] tmp_119_reg_1250_pp0_iter17_reg;
wire   [0:0] icmp_ln232_1_fu_797_p2;
reg   [0:0] icmp_ln232_1_reg_1255;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter2_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter3_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter4_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter5_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter6_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter7_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter8_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter9_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter10_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter11_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter12_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter13_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter14_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter15_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter16_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter17_reg;
reg   [0:0] icmp_ln232_1_reg_1255_pp0_iter18_reg;
wire   [2:0] trunc_ln227_fu_895_p1;
reg   [2:0] trunc_ln227_reg_1259;
wire   [4:0] grp_fu_785_p2;
reg   [4:0] urem_ln237_reg_1264;
wire   [7:0] add_ln241_fu_977_p2;
reg   [7:0] add_ln241_reg_1409;
wire   [63:0] zext_ln237_1_fu_942_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln237_2_fu_954_p1;
wire   [63:0] zext_ln241_fu_1163_p1;
reg   [31:0] empty_fu_218;
wire    ap_loop_init;
reg   [10:0] sum_k_fu_222;
wire   [10:0] add_ln232_fu_791_p2;
reg   [4:0] sum_j_fu_226;
wire   [4:0] select_ln227_fu_853_p3;
reg   [15:0] indvar_flatten_fu_230;
wire   [15:0] select_ln227_1_fu_809_p3;
reg   [3:0] sum_i_fu_234;
reg   [17:0] indvar_flatten13_fu_238;
wire   [17:0] add_ln224_fu_665_p2;
reg    weighted_input_u_ce0_local;
reg    weighted_input_u_1_ce0_local;
reg    weighted_input_u_2_ce0_local;
reg    weighted_input_u_3_ce0_local;
reg    weighted_input_u_4_ce0_local;
reg    weighted_input_u_5_ce0_local;
reg    weighted_input_u_6_ce0_local;
reg    weighted_input_u_7_ce0_local;
reg    coupling_c_ce0_local;
reg    coupling_c_1_ce0_local;
reg    coupling_c_2_ce0_local;
reg    coupling_c_3_ce0_local;
reg    coupling_c_4_ce0_local;
reg    coupling_c_5_ce0_local;
reg    coupling_c_6_ce0_local;
reg    coupling_c_7_ce0_local;
reg    coupling_c_8_ce0_local;
reg    coupling_c_9_ce0_local;
reg    coupling_c_10_ce0_local;
reg    coupling_c_11_ce0_local;
reg    coupling_c_12_ce0_local;
reg    coupling_c_13_ce0_local;
reg    coupling_c_14_ce0_local;
reg    coupling_c_15_ce0_local;
reg    coupling_c_16_ce0_local;
reg    coupling_c_17_ce0_local;
reg    coupling_c_18_ce0_local;
reg    coupling_c_19_ce0_local;
reg    sum_of_products_s_we0_local;
reg    sum_of_products_s_ce0_local;
wire   [0:0] icmp_ln232_fu_689_p2;
wire   [0:0] xor_ln224_fu_683_p2;
wire   [3:0] add_ln224_1_fu_701_p2;
wire   [10:0] tmp_116_fu_737_p3;
wire   [13:0] p_shl8_fu_729_p3;
wire   [13:0] p_shl9_fu_745_p1;
wire   [13:0] zext_ln232_fu_755_p1;
wire   [13:0] empty_53_fu_749_p2;
wire   [13:0] mul_ln237_1_fu_769_p0;
wire   [15:0] mul_ln237_1_fu_769_p1;
wire   [28:0] mul_ln237_1_fu_769_p2;
wire   [5:0] grp_fu_785_p1;
wire   [15:0] add_ln227_1_fu_803_p2;
wire   [4:0] select_ln224_fu_840_p3;
wire   [4:0] add_ln227_fu_847_p2;
wire   [11:0] tmp_117_fu_874_p3;
wire   [14:0] p_shl_fu_867_p3;
wire   [14:0] zext_ln227_fu_881_p1;
wire   [11:0] shl_ln_fu_907_p3;
wire   [14:0] add_ln227_2_fu_885_p2;
wire   [14:0] zext_ln237_fu_914_p1;
wire   [14:0] add_ln237_fu_918_p2;
wire   [13:0] tmp_13_fu_924_p4;
wire   [0:0] tmp_118_fu_899_p3;
wire   [14:0] add_ln_fu_934_p3;
wire   [7:0] zext_ln227_1_fu_891_p1;
wire   [7:0] tmp_11_fu_860_p3;
wire   [31:0] tmp_fu_994_p17;
wire  signed [31:0] tmp_fu_994_p19;
wire   [31:0] tmp_s_fu_1038_p41;
wire   [4:0] tmp_s_fu_1038_p42;
wire  signed [31:0] tmp_s_fu_1038_p43;
wire   [31:0] empty_54_fu_1131_p3;
wire   [47:0] shl_ln237_1_fu_1138_p3;
wire   [47:0] mul_ln237_fu_619_p2;
wire   [47:0] add_ln237_2_fu_1146_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [28:0] mul_ln237_1_fu_769_p00;
wire   [2:0] tmp_fu_994_p1;
wire   [2:0] tmp_fu_994_p3;
wire   [2:0] tmp_fu_994_p5;
wire   [2:0] tmp_fu_994_p7;
wire  signed [2:0] tmp_fu_994_p9;
wire  signed [2:0] tmp_fu_994_p11;
wire  signed [2:0] tmp_fu_994_p13;
wire  signed [2:0] tmp_fu_994_p15;
wire   [4:0] tmp_s_fu_1038_p1;
wire   [4:0] tmp_s_fu_1038_p3;
wire   [4:0] tmp_s_fu_1038_p5;
wire   [4:0] tmp_s_fu_1038_p7;
wire   [4:0] tmp_s_fu_1038_p9;
wire   [4:0] tmp_s_fu_1038_p11;
wire   [4:0] tmp_s_fu_1038_p13;
wire   [4:0] tmp_s_fu_1038_p15;
wire   [4:0] tmp_s_fu_1038_p17;
wire   [4:0] tmp_s_fu_1038_p19;
wire   [4:0] tmp_s_fu_1038_p21;
wire   [4:0] tmp_s_fu_1038_p23;
wire   [4:0] tmp_s_fu_1038_p25;
wire   [4:0] tmp_s_fu_1038_p27;
wire   [4:0] tmp_s_fu_1038_p29;
wire   [4:0] tmp_s_fu_1038_p31;
wire  signed [4:0] tmp_s_fu_1038_p33;
wire  signed [4:0] tmp_s_fu_1038_p35;
wire  signed [4:0] tmp_s_fu_1038_p37;
wire  signed [4:0] tmp_s_fu_1038_p39;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 empty_fu_218 = 32'd0;
#0 sum_k_fu_222 = 11'd0;
#0 sum_j_fu_226 = 5'd0;
#0 indvar_flatten_fu_230 = 16'd0;
#0 sum_i_fu_234 = 4'd0;
#0 indvar_flatten13_fu_238 = 18'd0;
#0 ap_done_reg = 1'b0;
end

dynamic_routing_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U101(
    .din0(tmp_s_fu_1038_p43),
    .din1(tmp_fu_994_p19),
    .dout(mul_ln237_fu_619_p2)
);

dynamic_routing_mul_14ns_16ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_14ns_16ns_29_1_1_U102(
    .din0(mul_ln237_1_fu_769_p0),
    .din1(mul_ln237_1_fu_769_p1),
    .dout(mul_ln237_1_fu_769_p2)
);

dynamic_routing_urem_14ns_6ns_5_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 5 ))
urem_14ns_6ns_5_18_1_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln237_1_fu_759_p2),
    .din1(grp_fu_785_p1),
    .ce(1'b1),
    .dout(grp_fu_785_p2)
);

(* dissolve_hierarchy = "yes" *) dynamic_routing_sparsemux_17_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 3'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 3'h7 ),
    .din7_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
sparsemux_17_3_32_1_1_U104(
    .din0(weighted_input_u_q0),
    .din1(weighted_input_u_1_q0),
    .din2(weighted_input_u_2_q0),
    .din3(weighted_input_u_3_q0),
    .din4(weighted_input_u_4_q0),
    .din5(weighted_input_u_5_q0),
    .din6(weighted_input_u_6_q0),
    .din7(weighted_input_u_7_q0),
    .def(tmp_fu_994_p17),
    .sel(trunc_ln227_reg_1259),
    .dout(tmp_fu_994_p19)
);

(* dissolve_hierarchy = "yes" *) dynamic_routing_sparsemux_41_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 5'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 5'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 5'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 5'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 5'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 5'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 5'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 5'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 5'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 5'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 5'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 5'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 5'hC ),
    .din12_WIDTH( 32 ),
    .CASE13( 5'hD ),
    .din13_WIDTH( 32 ),
    .CASE14( 5'hE ),
    .din14_WIDTH( 32 ),
    .CASE15( 5'hF ),
    .din15_WIDTH( 32 ),
    .CASE16( 5'h10 ),
    .din16_WIDTH( 32 ),
    .CASE17( 5'h11 ),
    .din17_WIDTH( 32 ),
    .CASE18( 5'h12 ),
    .din18_WIDTH( 32 ),
    .CASE19( 5'h13 ),
    .din19_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
sparsemux_41_5_32_1_1_U105(
    .din0(coupling_c_q0),
    .din1(coupling_c_1_q0),
    .din2(coupling_c_2_q0),
    .din3(coupling_c_3_q0),
    .din4(coupling_c_4_q0),
    .din5(coupling_c_5_q0),
    .din6(coupling_c_6_q0),
    .din7(coupling_c_7_q0),
    .din8(coupling_c_8_q0),
    .din9(coupling_c_9_q0),
    .din10(coupling_c_10_q0),
    .din11(coupling_c_11_q0),
    .din12(coupling_c_12_q0),
    .din13(coupling_c_13_q0),
    .din14(coupling_c_14_q0),
    .din15(coupling_c_15_q0),
    .din16(coupling_c_16_q0),
    .din17(coupling_c_17_q0),
    .din18(coupling_c_18_q0),
    .din19(coupling_c_19_q0),
    .def(tmp_s_fu_1038_p41),
    .sel(tmp_s_fu_1038_p42),
    .dout(tmp_s_fu_1038_p43)
);

dynamic_routing_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter18_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_fu_218 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter19 == 1'b1)) begin
            empty_fu_218 <= {{add_ln237_2_fu_1146_p2[47:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten13_fu_238 <= 18'd0;
        end else if (((icmp_ln224_fu_659_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten13_fu_238 <= add_ln224_fu_665_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_230 <= 16'd0;
        end else if (((icmp_ln224_fu_659_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_230 <= select_ln227_1_fu_809_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            sum_i_fu_234 <= 4'd0;
        end else if (((icmp_ln224_fu_659_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            sum_i_fu_234 <= select_ln224_1_fu_707_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum_j_fu_226 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter18 == 1'b1)) begin
            sum_j_fu_226 <= select_ln227_fu_853_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            sum_k_fu_222 <= 11'd0;
        end else if (((icmp_ln224_fu_659_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            sum_k_fu_222 <= add_ln232_fu_791_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln241_reg_1409 <= add_ln241_fu_977_p2;
        and_ln224_reg_1223_pp0_iter10_reg <= and_ln224_reg_1223_pp0_iter9_reg;
        and_ln224_reg_1223_pp0_iter11_reg <= and_ln224_reg_1223_pp0_iter10_reg;
        and_ln224_reg_1223_pp0_iter12_reg <= and_ln224_reg_1223_pp0_iter11_reg;
        and_ln224_reg_1223_pp0_iter13_reg <= and_ln224_reg_1223_pp0_iter12_reg;
        and_ln224_reg_1223_pp0_iter14_reg <= and_ln224_reg_1223_pp0_iter13_reg;
        and_ln224_reg_1223_pp0_iter15_reg <= and_ln224_reg_1223_pp0_iter14_reg;
        and_ln224_reg_1223_pp0_iter16_reg <= and_ln224_reg_1223_pp0_iter15_reg;
        and_ln224_reg_1223_pp0_iter17_reg <= and_ln224_reg_1223_pp0_iter16_reg;
        and_ln224_reg_1223_pp0_iter2_reg <= and_ln224_reg_1223;
        and_ln224_reg_1223_pp0_iter3_reg <= and_ln224_reg_1223_pp0_iter2_reg;
        and_ln224_reg_1223_pp0_iter4_reg <= and_ln224_reg_1223_pp0_iter3_reg;
        and_ln224_reg_1223_pp0_iter5_reg <= and_ln224_reg_1223_pp0_iter4_reg;
        and_ln224_reg_1223_pp0_iter6_reg <= and_ln224_reg_1223_pp0_iter5_reg;
        and_ln224_reg_1223_pp0_iter7_reg <= and_ln224_reg_1223_pp0_iter6_reg;
        and_ln224_reg_1223_pp0_iter8_reg <= and_ln224_reg_1223_pp0_iter7_reg;
        and_ln224_reg_1223_pp0_iter9_reg <= and_ln224_reg_1223_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        empty_52_reg_1235_pp0_iter10_reg <= empty_52_reg_1235_pp0_iter9_reg;
        empty_52_reg_1235_pp0_iter11_reg <= empty_52_reg_1235_pp0_iter10_reg;
        empty_52_reg_1235_pp0_iter12_reg <= empty_52_reg_1235_pp0_iter11_reg;
        empty_52_reg_1235_pp0_iter13_reg <= empty_52_reg_1235_pp0_iter12_reg;
        empty_52_reg_1235_pp0_iter14_reg <= empty_52_reg_1235_pp0_iter13_reg;
        empty_52_reg_1235_pp0_iter15_reg <= empty_52_reg_1235_pp0_iter14_reg;
        empty_52_reg_1235_pp0_iter16_reg <= empty_52_reg_1235_pp0_iter15_reg;
        empty_52_reg_1235_pp0_iter17_reg <= empty_52_reg_1235_pp0_iter16_reg;
        empty_52_reg_1235_pp0_iter18_reg <= empty_52_reg_1235_pp0_iter17_reg;
        empty_52_reg_1235_pp0_iter2_reg <= empty_52_reg_1235;
        empty_52_reg_1235_pp0_iter3_reg <= empty_52_reg_1235_pp0_iter2_reg;
        empty_52_reg_1235_pp0_iter4_reg <= empty_52_reg_1235_pp0_iter3_reg;
        empty_52_reg_1235_pp0_iter5_reg <= empty_52_reg_1235_pp0_iter4_reg;
        empty_52_reg_1235_pp0_iter6_reg <= empty_52_reg_1235_pp0_iter5_reg;
        empty_52_reg_1235_pp0_iter7_reg <= empty_52_reg_1235_pp0_iter6_reg;
        empty_52_reg_1235_pp0_iter8_reg <= empty_52_reg_1235_pp0_iter7_reg;
        empty_52_reg_1235_pp0_iter9_reg <= empty_52_reg_1235_pp0_iter8_reg;
        icmp_ln227_reg_1218_pp0_iter10_reg <= icmp_ln227_reg_1218_pp0_iter9_reg;
        icmp_ln227_reg_1218_pp0_iter11_reg <= icmp_ln227_reg_1218_pp0_iter10_reg;
        icmp_ln227_reg_1218_pp0_iter12_reg <= icmp_ln227_reg_1218_pp0_iter11_reg;
        icmp_ln227_reg_1218_pp0_iter13_reg <= icmp_ln227_reg_1218_pp0_iter12_reg;
        icmp_ln227_reg_1218_pp0_iter14_reg <= icmp_ln227_reg_1218_pp0_iter13_reg;
        icmp_ln227_reg_1218_pp0_iter15_reg <= icmp_ln227_reg_1218_pp0_iter14_reg;
        icmp_ln227_reg_1218_pp0_iter16_reg <= icmp_ln227_reg_1218_pp0_iter15_reg;
        icmp_ln227_reg_1218_pp0_iter17_reg <= icmp_ln227_reg_1218_pp0_iter16_reg;
        icmp_ln227_reg_1218_pp0_iter2_reg <= icmp_ln227_reg_1218;
        icmp_ln227_reg_1218_pp0_iter3_reg <= icmp_ln227_reg_1218_pp0_iter2_reg;
        icmp_ln227_reg_1218_pp0_iter4_reg <= icmp_ln227_reg_1218_pp0_iter3_reg;
        icmp_ln227_reg_1218_pp0_iter5_reg <= icmp_ln227_reg_1218_pp0_iter4_reg;
        icmp_ln227_reg_1218_pp0_iter6_reg <= icmp_ln227_reg_1218_pp0_iter5_reg;
        icmp_ln227_reg_1218_pp0_iter7_reg <= icmp_ln227_reg_1218_pp0_iter6_reg;
        icmp_ln227_reg_1218_pp0_iter8_reg <= icmp_ln227_reg_1218_pp0_iter7_reg;
        icmp_ln227_reg_1218_pp0_iter9_reg <= icmp_ln227_reg_1218_pp0_iter8_reg;
        icmp_ln232_1_reg_1255_pp0_iter10_reg <= icmp_ln232_1_reg_1255_pp0_iter9_reg;
        icmp_ln232_1_reg_1255_pp0_iter11_reg <= icmp_ln232_1_reg_1255_pp0_iter10_reg;
        icmp_ln232_1_reg_1255_pp0_iter12_reg <= icmp_ln232_1_reg_1255_pp0_iter11_reg;
        icmp_ln232_1_reg_1255_pp0_iter13_reg <= icmp_ln232_1_reg_1255_pp0_iter12_reg;
        icmp_ln232_1_reg_1255_pp0_iter14_reg <= icmp_ln232_1_reg_1255_pp0_iter13_reg;
        icmp_ln232_1_reg_1255_pp0_iter15_reg <= icmp_ln232_1_reg_1255_pp0_iter14_reg;
        icmp_ln232_1_reg_1255_pp0_iter16_reg <= icmp_ln232_1_reg_1255_pp0_iter15_reg;
        icmp_ln232_1_reg_1255_pp0_iter17_reg <= icmp_ln232_1_reg_1255_pp0_iter16_reg;
        icmp_ln232_1_reg_1255_pp0_iter18_reg <= icmp_ln232_1_reg_1255_pp0_iter17_reg;
        icmp_ln232_1_reg_1255_pp0_iter2_reg <= icmp_ln232_1_reg_1255;
        icmp_ln232_1_reg_1255_pp0_iter3_reg <= icmp_ln232_1_reg_1255_pp0_iter2_reg;
        icmp_ln232_1_reg_1255_pp0_iter4_reg <= icmp_ln232_1_reg_1255_pp0_iter3_reg;
        icmp_ln232_1_reg_1255_pp0_iter5_reg <= icmp_ln232_1_reg_1255_pp0_iter4_reg;
        icmp_ln232_1_reg_1255_pp0_iter6_reg <= icmp_ln232_1_reg_1255_pp0_iter5_reg;
        icmp_ln232_1_reg_1255_pp0_iter7_reg <= icmp_ln232_1_reg_1255_pp0_iter6_reg;
        icmp_ln232_1_reg_1255_pp0_iter8_reg <= icmp_ln232_1_reg_1255_pp0_iter7_reg;
        icmp_ln232_1_reg_1255_pp0_iter9_reg <= icmp_ln232_1_reg_1255_pp0_iter8_reg;
        select_ln224_1_reg_1228_pp0_iter10_reg <= select_ln224_1_reg_1228_pp0_iter9_reg;
        select_ln224_1_reg_1228_pp0_iter11_reg <= select_ln224_1_reg_1228_pp0_iter10_reg;
        select_ln224_1_reg_1228_pp0_iter12_reg <= select_ln224_1_reg_1228_pp0_iter11_reg;
        select_ln224_1_reg_1228_pp0_iter13_reg <= select_ln224_1_reg_1228_pp0_iter12_reg;
        select_ln224_1_reg_1228_pp0_iter14_reg <= select_ln224_1_reg_1228_pp0_iter13_reg;
        select_ln224_1_reg_1228_pp0_iter15_reg <= select_ln224_1_reg_1228_pp0_iter14_reg;
        select_ln224_1_reg_1228_pp0_iter16_reg <= select_ln224_1_reg_1228_pp0_iter15_reg;
        select_ln224_1_reg_1228_pp0_iter17_reg <= select_ln224_1_reg_1228_pp0_iter16_reg;
        select_ln224_1_reg_1228_pp0_iter2_reg <= select_ln224_1_reg_1228;
        select_ln224_1_reg_1228_pp0_iter3_reg <= select_ln224_1_reg_1228_pp0_iter2_reg;
        select_ln224_1_reg_1228_pp0_iter4_reg <= select_ln224_1_reg_1228_pp0_iter3_reg;
        select_ln224_1_reg_1228_pp0_iter5_reg <= select_ln224_1_reg_1228_pp0_iter4_reg;
        select_ln224_1_reg_1228_pp0_iter6_reg <= select_ln224_1_reg_1228_pp0_iter5_reg;
        select_ln224_1_reg_1228_pp0_iter7_reg <= select_ln224_1_reg_1228_pp0_iter6_reg;
        select_ln224_1_reg_1228_pp0_iter8_reg <= select_ln224_1_reg_1228_pp0_iter7_reg;
        select_ln224_1_reg_1228_pp0_iter9_reg <= select_ln224_1_reg_1228_pp0_iter8_reg;
        sum_k_mid2_reg_1240_pp0_iter10_reg <= sum_k_mid2_reg_1240_pp0_iter9_reg;
        sum_k_mid2_reg_1240_pp0_iter11_reg <= sum_k_mid2_reg_1240_pp0_iter10_reg;
        sum_k_mid2_reg_1240_pp0_iter12_reg <= sum_k_mid2_reg_1240_pp0_iter11_reg;
        sum_k_mid2_reg_1240_pp0_iter13_reg <= sum_k_mid2_reg_1240_pp0_iter12_reg;
        sum_k_mid2_reg_1240_pp0_iter14_reg <= sum_k_mid2_reg_1240_pp0_iter13_reg;
        sum_k_mid2_reg_1240_pp0_iter15_reg <= sum_k_mid2_reg_1240_pp0_iter14_reg;
        sum_k_mid2_reg_1240_pp0_iter16_reg <= sum_k_mid2_reg_1240_pp0_iter15_reg;
        sum_k_mid2_reg_1240_pp0_iter17_reg <= sum_k_mid2_reg_1240_pp0_iter16_reg;
        sum_k_mid2_reg_1240_pp0_iter2_reg <= sum_k_mid2_reg_1240;
        sum_k_mid2_reg_1240_pp0_iter3_reg <= sum_k_mid2_reg_1240_pp0_iter2_reg;
        sum_k_mid2_reg_1240_pp0_iter4_reg <= sum_k_mid2_reg_1240_pp0_iter3_reg;
        sum_k_mid2_reg_1240_pp0_iter5_reg <= sum_k_mid2_reg_1240_pp0_iter4_reg;
        sum_k_mid2_reg_1240_pp0_iter6_reg <= sum_k_mid2_reg_1240_pp0_iter5_reg;
        sum_k_mid2_reg_1240_pp0_iter7_reg <= sum_k_mid2_reg_1240_pp0_iter6_reg;
        sum_k_mid2_reg_1240_pp0_iter8_reg <= sum_k_mid2_reg_1240_pp0_iter7_reg;
        sum_k_mid2_reg_1240_pp0_iter9_reg <= sum_k_mid2_reg_1240_pp0_iter8_reg;
        tmp_119_reg_1250_pp0_iter10_reg <= tmp_119_reg_1250_pp0_iter9_reg;
        tmp_119_reg_1250_pp0_iter11_reg <= tmp_119_reg_1250_pp0_iter10_reg;
        tmp_119_reg_1250_pp0_iter12_reg <= tmp_119_reg_1250_pp0_iter11_reg;
        tmp_119_reg_1250_pp0_iter13_reg <= tmp_119_reg_1250_pp0_iter12_reg;
        tmp_119_reg_1250_pp0_iter14_reg <= tmp_119_reg_1250_pp0_iter13_reg;
        tmp_119_reg_1250_pp0_iter15_reg <= tmp_119_reg_1250_pp0_iter14_reg;
        tmp_119_reg_1250_pp0_iter16_reg <= tmp_119_reg_1250_pp0_iter15_reg;
        tmp_119_reg_1250_pp0_iter17_reg <= tmp_119_reg_1250_pp0_iter16_reg;
        tmp_119_reg_1250_pp0_iter2_reg <= tmp_119_reg_1250;
        tmp_119_reg_1250_pp0_iter3_reg <= tmp_119_reg_1250_pp0_iter2_reg;
        tmp_119_reg_1250_pp0_iter4_reg <= tmp_119_reg_1250_pp0_iter3_reg;
        tmp_119_reg_1250_pp0_iter5_reg <= tmp_119_reg_1250_pp0_iter4_reg;
        tmp_119_reg_1250_pp0_iter6_reg <= tmp_119_reg_1250_pp0_iter5_reg;
        tmp_119_reg_1250_pp0_iter7_reg <= tmp_119_reg_1250_pp0_iter6_reg;
        tmp_119_reg_1250_pp0_iter8_reg <= tmp_119_reg_1250_pp0_iter7_reg;
        tmp_119_reg_1250_pp0_iter9_reg <= tmp_119_reg_1250_pp0_iter8_reg;
        trunc_ln227_reg_1259 <= trunc_ln227_fu_895_p1;
        urem_ln237_reg_1264 <= grp_fu_785_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln224_reg_1223 <= and_ln224_fu_695_p2;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        empty_52_reg_1235 <= empty_52_fu_715_p2;
        icmp_ln227_reg_1218 <= icmp_ln227_fu_677_p2;
        icmp_ln232_1_reg_1255 <= icmp_ln232_1_fu_797_p2;
        select_ln224_1_reg_1228 <= select_ln224_1_fu_707_p3;
        sum_k_mid2_reg_1240 <= sum_k_mid2_fu_721_p3;
        tmp_119_reg_1250 <= {{mul_ln237_1_fu_769_p2[28:19]}};
    end
end

always @ (*) begin
    if (((icmp_ln224_fu_659_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter18_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_10_ce0_local = 1'b1;
    end else begin
        coupling_c_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_11_ce0_local = 1'b1;
    end else begin
        coupling_c_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_12_ce0_local = 1'b1;
    end else begin
        coupling_c_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_13_ce0_local = 1'b1;
    end else begin
        coupling_c_13_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_14_ce0_local = 1'b1;
    end else begin
        coupling_c_14_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_15_ce0_local = 1'b1;
    end else begin
        coupling_c_15_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_16_ce0_local = 1'b1;
    end else begin
        coupling_c_16_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_17_ce0_local = 1'b1;
    end else begin
        coupling_c_17_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_18_ce0_local = 1'b1;
    end else begin
        coupling_c_18_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_19_ce0_local = 1'b1;
    end else begin
        coupling_c_19_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_1_ce0_local = 1'b1;
    end else begin
        coupling_c_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_2_ce0_local = 1'b1;
    end else begin
        coupling_c_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_3_ce0_local = 1'b1;
    end else begin
        coupling_c_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_4_ce0_local = 1'b1;
    end else begin
        coupling_c_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_5_ce0_local = 1'b1;
    end else begin
        coupling_c_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_6_ce0_local = 1'b1;
    end else begin
        coupling_c_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_7_ce0_local = 1'b1;
    end else begin
        coupling_c_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_8_ce0_local = 1'b1;
    end else begin
        coupling_c_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_9_ce0_local = 1'b1;
    end else begin
        coupling_c_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        coupling_c_ce0_local = 1'b1;
    end else begin
        coupling_c_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        sum_of_products_s_ce0_local = 1'b1;
    end else begin
        sum_of_products_s_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln232_1_reg_1255_pp0_iter18_reg == 1'd1) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        sum_of_products_s_we0_local = 1'b1;
    end else begin
        sum_of_products_s_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        weighted_input_u_1_ce0_local = 1'b1;
    end else begin
        weighted_input_u_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        weighted_input_u_2_ce0_local = 1'b1;
    end else begin
        weighted_input_u_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        weighted_input_u_3_ce0_local = 1'b1;
    end else begin
        weighted_input_u_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        weighted_input_u_4_ce0_local = 1'b1;
    end else begin
        weighted_input_u_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        weighted_input_u_5_ce0_local = 1'b1;
    end else begin
        weighted_input_u_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        weighted_input_u_6_ce0_local = 1'b1;
    end else begin
        weighted_input_u_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        weighted_input_u_7_ce0_local = 1'b1;
    end else begin
        weighted_input_u_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        weighted_input_u_ce0_local = 1'b1;
    end else begin
        weighted_input_u_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln224_1_fu_701_p2 = (sum_i_fu_234 + 4'd1);

assign add_ln224_fu_665_p2 = (indvar_flatten13_fu_238 + 18'd1);

assign add_ln227_1_fu_803_p2 = (indvar_flatten_fu_230 + 16'd1);

assign add_ln227_2_fu_885_p2 = (p_shl_fu_867_p3 + zext_ln227_fu_881_p1);

assign add_ln227_fu_847_p2 = (select_ln224_fu_840_p3 + 5'd1);

assign add_ln232_fu_791_p2 = (sum_k_mid2_fu_721_p3 + 11'd1);

assign add_ln237_1_fu_759_p2 = (zext_ln232_fu_755_p1 + empty_53_fu_749_p2);

assign add_ln237_2_fu_1146_p2 = (shl_ln237_1_fu_1138_p3 + mul_ln237_fu_619_p2);

assign add_ln237_fu_918_p2 = (add_ln227_2_fu_885_p2 + zext_ln237_fu_914_p1);

assign add_ln241_fu_977_p2 = (zext_ln227_1_fu_891_p1 + tmp_11_fu_860_p3);

assign add_ln_fu_934_p3 = {{tmp_13_fu_924_p4}, {tmp_118_fu_899_p3}};

assign and_ln224_fu_695_p2 = (xor_ln224_fu_683_p2 & icmp_ln232_fu_689_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign coupling_c_10_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_10_ce0 = coupling_c_10_ce0_local;

assign coupling_c_11_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_11_ce0 = coupling_c_11_ce0_local;

assign coupling_c_12_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_12_ce0 = coupling_c_12_ce0_local;

assign coupling_c_13_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_13_ce0 = coupling_c_13_ce0_local;

assign coupling_c_14_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_14_ce0 = coupling_c_14_ce0_local;

assign coupling_c_15_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_15_ce0 = coupling_c_15_ce0_local;

assign coupling_c_16_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_16_ce0 = coupling_c_16_ce0_local;

assign coupling_c_17_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_17_ce0 = coupling_c_17_ce0_local;

assign coupling_c_18_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_18_ce0 = coupling_c_18_ce0_local;

assign coupling_c_19_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_19_ce0 = coupling_c_19_ce0_local;

assign coupling_c_1_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_1_ce0 = coupling_c_1_ce0_local;

assign coupling_c_2_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_2_ce0 = coupling_c_2_ce0_local;

assign coupling_c_3_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_3_ce0 = coupling_c_3_ce0_local;

assign coupling_c_4_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_4_ce0 = coupling_c_4_ce0_local;

assign coupling_c_5_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_5_ce0 = coupling_c_5_ce0_local;

assign coupling_c_6_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_6_ce0 = coupling_c_6_ce0_local;

assign coupling_c_7_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_7_ce0 = coupling_c_7_ce0_local;

assign coupling_c_8_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_8_ce0 = coupling_c_8_ce0_local;

assign coupling_c_9_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_9_ce0 = coupling_c_9_ce0_local;

assign coupling_c_address0 = zext_ln237_2_fu_954_p1;

assign coupling_c_ce0 = coupling_c_ce0_local;

assign empty_52_fu_715_p2 = (icmp_ln227_fu_677_p2 | and_ln224_fu_695_p2);

assign empty_53_fu_749_p2 = (p_shl8_fu_729_p3 + p_shl9_fu_745_p1);

assign empty_54_fu_1131_p3 = ((empty_52_reg_1235_pp0_iter18_reg[0:0] == 1'b1) ? 32'd0 : empty_fu_218);

assign grp_fu_785_p1 = 14'd20;

assign icmp_ln224_fu_659_p2 = ((indvar_flatten13_fu_238 == 18'd184320) ? 1'b1 : 1'b0);

assign icmp_ln227_fu_677_p2 = ((indvar_flatten_fu_230 == 16'd18432) ? 1'b1 : 1'b0);

assign icmp_ln232_1_fu_797_p2 = ((add_ln232_fu_791_p2 == 11'd1152) ? 1'b1 : 1'b0);

assign icmp_ln232_fu_689_p2 = ((sum_k_fu_222 == 11'd1152) ? 1'b1 : 1'b0);

assign mul_ln237_1_fu_769_p0 = mul_ln237_1_fu_769_p00;

assign mul_ln237_1_fu_769_p00 = add_ln237_1_fu_759_p2;

assign mul_ln237_1_fu_769_p1 = 29'd26215;

assign p_shl8_fu_729_p3 = {{select_ln224_1_fu_707_p3}, {10'd0}};

assign p_shl9_fu_745_p1 = tmp_116_fu_737_p3;

assign p_shl_fu_867_p3 = {{select_ln224_1_reg_1228_pp0_iter17_reg}, {11'd0}};

assign select_ln224_1_fu_707_p3 = ((icmp_ln227_fu_677_p2[0:0] == 1'b1) ? add_ln224_1_fu_701_p2 : sum_i_fu_234);

assign select_ln224_fu_840_p3 = ((icmp_ln227_reg_1218_pp0_iter17_reg[0:0] == 1'b1) ? 5'd0 : sum_j_fu_226);

assign select_ln227_1_fu_809_p3 = ((icmp_ln227_fu_677_p2[0:0] == 1'b1) ? 16'd1 : add_ln227_1_fu_803_p2);

assign select_ln227_fu_853_p3 = ((and_ln224_reg_1223_pp0_iter17_reg[0:0] == 1'b1) ? add_ln227_fu_847_p2 : select_ln224_fu_840_p3);

assign shl_ln237_1_fu_1138_p3 = {{empty_54_fu_1131_p3}, {16'd0}};

assign shl_ln_fu_907_p3 = {{sum_k_mid2_reg_1240_pp0_iter17_reg}, {1'd0}};

assign sum_k_mid2_fu_721_p3 = ((empty_52_fu_715_p2[0:0] == 1'b1) ? 11'd0 : sum_k_fu_222);

assign sum_of_products_s_address0 = zext_ln241_fu_1163_p1;

assign sum_of_products_s_ce0 = sum_of_products_s_ce0_local;

assign sum_of_products_s_d0 = {{add_ln237_2_fu_1146_p2[47:16]}};

assign sum_of_products_s_we0 = sum_of_products_s_we0_local;

assign tmp_116_fu_737_p3 = {{select_ln224_1_fu_707_p3}, {7'd0}};

assign tmp_117_fu_874_p3 = {{select_ln224_1_reg_1228_pp0_iter17_reg}, {8'd0}};

assign tmp_118_fu_899_p3 = select_ln227_fu_853_p3[32'd3];

assign tmp_11_fu_860_p3 = {{select_ln224_1_reg_1228_pp0_iter17_reg}, {4'd0}};

assign tmp_13_fu_924_p4 = {{add_ln237_fu_918_p2[14:1]}};

assign tmp_fu_994_p17 = 'bx;

assign tmp_s_fu_1038_p41 = 'bx;

assign tmp_s_fu_1038_p42 = urem_ln237_reg_1264[4:0];

assign trunc_ln227_fu_895_p1 = select_ln227_fu_853_p3[2:0];

assign weighted_input_u_1_address0 = zext_ln237_1_fu_942_p1;

assign weighted_input_u_1_ce0 = weighted_input_u_1_ce0_local;

assign weighted_input_u_2_address0 = zext_ln237_1_fu_942_p1;

assign weighted_input_u_2_ce0 = weighted_input_u_2_ce0_local;

assign weighted_input_u_3_address0 = zext_ln237_1_fu_942_p1;

assign weighted_input_u_3_ce0 = weighted_input_u_3_ce0_local;

assign weighted_input_u_4_address0 = zext_ln237_1_fu_942_p1;

assign weighted_input_u_4_ce0 = weighted_input_u_4_ce0_local;

assign weighted_input_u_5_address0 = zext_ln237_1_fu_942_p1;

assign weighted_input_u_5_ce0 = weighted_input_u_5_ce0_local;

assign weighted_input_u_6_address0 = zext_ln237_1_fu_942_p1;

assign weighted_input_u_6_ce0 = weighted_input_u_6_ce0_local;

assign weighted_input_u_7_address0 = zext_ln237_1_fu_942_p1;

assign weighted_input_u_7_ce0 = weighted_input_u_7_ce0_local;

assign weighted_input_u_address0 = zext_ln237_1_fu_942_p1;

assign weighted_input_u_ce0 = weighted_input_u_ce0_local;

assign xor_ln224_fu_683_p2 = (icmp_ln227_fu_677_p2 ^ 1'd1);

assign zext_ln227_1_fu_891_p1 = select_ln227_fu_853_p3;

assign zext_ln227_fu_881_p1 = tmp_117_fu_874_p3;

assign zext_ln232_fu_755_p1 = sum_k_mid2_fu_721_p3;

assign zext_ln237_1_fu_942_p1 = add_ln_fu_934_p3;

assign zext_ln237_2_fu_954_p1 = tmp_119_reg_1250_pp0_iter17_reg;

assign zext_ln237_fu_914_p1 = shl_ln_fu_907_p3;

assign zext_ln241_fu_1163_p1 = add_ln241_reg_1409;

endmodule //dynamic_routing_dynamic_routing_Pipeline_VITIS_LOOP_224_1_VITIS_LOOP_227_2_VITIS_LOOP_232_3
