// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module dynamic_routing_dynamic_routing_Pipeline_VITIS_LOOP_307_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        coupling_b_address0,
        coupling_b_ce0,
        coupling_b_we0,
        coupling_b_d0,
        coupling_b_q0,
        output_agreement_address0,
        output_agreement_ce0,
        output_agreement_q0
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] coupling_b_address0;
output   coupling_b_ce0;
output   coupling_b_we0;
output  [31:0] coupling_b_d0;
input  [31:0] coupling_b_q0;
output  [13:0] output_agreement_address0;
output   output_agreement_ce0;
input  [31:0] output_agreement_q0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln307_fu_76_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_state2;
reg   [13:0] coupling_b_addr_reg_116;
wire   [63:0] zext_ln307_fu_88_p1;
reg   [13:0] i_2_fu_38;
wire   [13:0] add_ln307_fu_82_p2;
wire    ap_loop_init;
reg   [13:0] ap_sig_allocacmp_i;
reg    coupling_b_ce0_local;
reg   [13:0] coupling_b_address0_local;
reg    coupling_b_we0_local;
wire   [31:0] add_ln311_fu_99_p2;
reg    output_agreement_ce0_local;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 i_2_fu_38 = 14'd0;
#0 ap_done_reg = 1'b0;
end

dynamic_routing_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln307_fu_76_p2 == 1'd0)) begin
            i_2_fu_38 <= add_ln307_fu_82_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_2_fu_38 <= 14'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        coupling_b_addr_reg_116 <= zext_ln307_fu_88_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln307_fu_76_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i = 14'd0;
    end else begin
        ap_sig_allocacmp_i = i_2_fu_38;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        coupling_b_address0_local = coupling_b_addr_reg_116;
    end else if (((icmp_ln307_fu_76_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        coupling_b_address0_local = zext_ln307_fu_88_p1;
    end else begin
        coupling_b_address0_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln307_fu_76_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1)))) begin
        coupling_b_ce0_local = 1'b1;
    end else begin
        coupling_b_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        coupling_b_we0_local = 1'b1;
    end else begin
        coupling_b_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_agreement_ce0_local = 1'b1;
    end else begin
        output_agreement_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln307_fu_76_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln307_fu_82_p2 = (ap_sig_allocacmp_i + 14'd1);

assign add_ln311_fu_99_p2 = (output_agreement_q0 + coupling_b_q0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign coupling_b_address0 = coupling_b_address0_local;

assign coupling_b_ce0 = coupling_b_ce0_local;

assign coupling_b_d0 = add_ln311_fu_99_p2;

assign coupling_b_we0 = coupling_b_we0_local;

assign icmp_ln307_fu_76_p2 = ((ap_sig_allocacmp_i == 14'd11520) ? 1'b1 : 1'b0);

assign output_agreement_address0 = zext_ln307_fu_88_p1;

assign output_agreement_ce0 = output_agreement_ce0_local;

assign zext_ln307_fu_88_p1 = ap_sig_allocacmp_i;

endmodule //dynamic_routing_dynamic_routing_Pipeline_VITIS_LOOP_307_1
