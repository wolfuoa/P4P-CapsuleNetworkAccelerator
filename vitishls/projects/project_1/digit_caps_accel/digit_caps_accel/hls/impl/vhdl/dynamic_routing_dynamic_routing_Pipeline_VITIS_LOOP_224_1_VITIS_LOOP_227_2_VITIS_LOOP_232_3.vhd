-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dynamic_routing_dynamic_routing_Pipeline_VITIS_LOOP_224_1_VITIS_LOOP_227_2_VITIS_LOOP_232_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    weighted_input_u_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    weighted_input_u_ce0 : OUT STD_LOGIC;
    weighted_input_u_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weighted_input_u_1_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    weighted_input_u_1_ce0 : OUT STD_LOGIC;
    weighted_input_u_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weighted_input_u_2_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    weighted_input_u_2_ce0 : OUT STD_LOGIC;
    weighted_input_u_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weighted_input_u_3_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    weighted_input_u_3_ce0 : OUT STD_LOGIC;
    weighted_input_u_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weighted_input_u_4_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    weighted_input_u_4_ce0 : OUT STD_LOGIC;
    weighted_input_u_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weighted_input_u_5_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    weighted_input_u_5_ce0 : OUT STD_LOGIC;
    weighted_input_u_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weighted_input_u_6_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    weighted_input_u_6_ce0 : OUT STD_LOGIC;
    weighted_input_u_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weighted_input_u_7_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    weighted_input_u_7_ce0 : OUT STD_LOGIC;
    weighted_input_u_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_ce0 : OUT STD_LOGIC;
    coupling_c_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_1_ce0 : OUT STD_LOGIC;
    coupling_c_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_2_ce0 : OUT STD_LOGIC;
    coupling_c_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_3_ce0 : OUT STD_LOGIC;
    coupling_c_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_4_ce0 : OUT STD_LOGIC;
    coupling_c_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_5_ce0 : OUT STD_LOGIC;
    coupling_c_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_6_ce0 : OUT STD_LOGIC;
    coupling_c_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_7_ce0 : OUT STD_LOGIC;
    coupling_c_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_8_ce0 : OUT STD_LOGIC;
    coupling_c_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_9_ce0 : OUT STD_LOGIC;
    coupling_c_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_10_ce0 : OUT STD_LOGIC;
    coupling_c_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_11_ce0 : OUT STD_LOGIC;
    coupling_c_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_12_ce0 : OUT STD_LOGIC;
    coupling_c_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_13_ce0 : OUT STD_LOGIC;
    coupling_c_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_14_ce0 : OUT STD_LOGIC;
    coupling_c_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_15_ce0 : OUT STD_LOGIC;
    coupling_c_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_16_ce0 : OUT STD_LOGIC;
    coupling_c_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_17_ce0 : OUT STD_LOGIC;
    coupling_c_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_18_ce0 : OUT STD_LOGIC;
    coupling_c_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coupling_c_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    coupling_c_19_ce0 : OUT STD_LOGIC;
    coupling_c_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sum_of_products_s_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    sum_of_products_s_ce0 : OUT STD_LOGIC;
    sum_of_products_s_we0 : OUT STD_LOGIC;
    sum_of_products_s_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of dynamic_routing_dynamic_routing_Pipeline_VITIS_LOOP_224_1_VITIS_LOOP_227_2_VITIS_LOOP_232_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv18_2D000 : STD_LOGIC_VECTOR (17 downto 0) := "101101000000000000";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv16_4800 : STD_LOGIC_VECTOR (15 downto 0) := "0100100000000000";
    constant ap_const_lv11_480 : STD_LOGIC_VECTOR (10 downto 0) := "10010000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv29_6667 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000110011001100111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv14_14 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010100";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln224_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln227_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln227_reg_1218_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_reg_1223_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln224_1_fu_707_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter11_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter12_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter13_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter14_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter15_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter16_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln224_1_reg_1228_pp0_iter17_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_52_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1235_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_k_mid2_fu_721_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter7_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter8_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter9_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter10_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter11_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter12_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter13_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter14_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter15_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter16_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_k_mid2_reg_1240_pp0_iter17_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln237_1_fu_759_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_119_reg_1250 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter13_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter14_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter15_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter16_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_reg_1250_pp0_iter17_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln232_1_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_1_reg_1255_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln227_fu_895_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln227_reg_1259 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_785_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal urem_ln237_reg_1264 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln241_fu_977_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln241_reg_1409 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln237_1_fu_942_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln237_2_fu_954_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln241_fu_1163_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_218 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_loop_init : STD_LOGIC;
    signal sum_k_fu_222 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal add_ln232_fu_791_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_j_fu_226 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal select_ln227_fu_853_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_230 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal select_ln227_1_fu_809_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sum_i_fu_234 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal indvar_flatten13_fu_238 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    signal add_ln224_fu_665_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal weighted_input_u_ce0_local : STD_LOGIC;
    signal weighted_input_u_1_ce0_local : STD_LOGIC;
    signal weighted_input_u_2_ce0_local : STD_LOGIC;
    signal weighted_input_u_3_ce0_local : STD_LOGIC;
    signal weighted_input_u_4_ce0_local : STD_LOGIC;
    signal weighted_input_u_5_ce0_local : STD_LOGIC;
    signal weighted_input_u_6_ce0_local : STD_LOGIC;
    signal weighted_input_u_7_ce0_local : STD_LOGIC;
    signal coupling_c_ce0_local : STD_LOGIC;
    signal coupling_c_1_ce0_local : STD_LOGIC;
    signal coupling_c_2_ce0_local : STD_LOGIC;
    signal coupling_c_3_ce0_local : STD_LOGIC;
    signal coupling_c_4_ce0_local : STD_LOGIC;
    signal coupling_c_5_ce0_local : STD_LOGIC;
    signal coupling_c_6_ce0_local : STD_LOGIC;
    signal coupling_c_7_ce0_local : STD_LOGIC;
    signal coupling_c_8_ce0_local : STD_LOGIC;
    signal coupling_c_9_ce0_local : STD_LOGIC;
    signal coupling_c_10_ce0_local : STD_LOGIC;
    signal coupling_c_11_ce0_local : STD_LOGIC;
    signal coupling_c_12_ce0_local : STD_LOGIC;
    signal coupling_c_13_ce0_local : STD_LOGIC;
    signal coupling_c_14_ce0_local : STD_LOGIC;
    signal coupling_c_15_ce0_local : STD_LOGIC;
    signal coupling_c_16_ce0_local : STD_LOGIC;
    signal coupling_c_17_ce0_local : STD_LOGIC;
    signal coupling_c_18_ce0_local : STD_LOGIC;
    signal coupling_c_19_ce0_local : STD_LOGIC;
    signal sum_of_products_s_we0_local : STD_LOGIC;
    signal sum_of_products_s_ce0_local : STD_LOGIC;
    signal icmp_ln232_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln224_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln224_1_fu_701_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_116_fu_737_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl8_fu_729_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl9_fu_745_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln232_fu_755_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_53_fu_749_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln237_1_fu_769_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln237_1_fu_769_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln237_1_fu_769_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_785_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln227_1_fu_803_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln224_fu_840_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln227_fu_847_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_117_fu_874_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl_fu_867_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln227_fu_881_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln_fu_907_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln227_2_fu_885_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln237_fu_914_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln237_fu_918_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_13_fu_924_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_118_fu_899_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln_fu_934_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln227_1_fu_891_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_860_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_994_p17 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_994_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1038_p41 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1038_p42 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p43 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_54_fu_1131_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln237_1_fu_1138_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln237_fu_619_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln237_2_fu_1146_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter17_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter18_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal mul_ln237_1_fu_769_p00 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_fu_994_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_994_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_994_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_994_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_994_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_994_p11 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_994_p13 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_994_p15 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_1038_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p5 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p7 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p9 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p11 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p13 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p15 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p17 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p19 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p21 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p23 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p25 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p27 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p29 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p31 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p33 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p35 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p37 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1038_p39 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component dynamic_routing_mul_32s_32s_48_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component dynamic_routing_mul_14ns_16ns_29_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component dynamic_routing_urem_14ns_6ns_5_18_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component dynamic_routing_sparsemux_17_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (2 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (2 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (2 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (2 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (2 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (2 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (2 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (2 downto 0);
        din7_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dynamic_routing_sparsemux_41_5_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (4 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (4 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (4 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (4 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (4 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (4 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (4 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (4 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (4 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (4 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (4 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (4 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (4 downto 0);
        din12_WIDTH : INTEGER;
        CASE13 : STD_LOGIC_VECTOR (4 downto 0);
        din13_WIDTH : INTEGER;
        CASE14 : STD_LOGIC_VECTOR (4 downto 0);
        din14_WIDTH : INTEGER;
        CASE15 : STD_LOGIC_VECTOR (4 downto 0);
        din15_WIDTH : INTEGER;
        CASE16 : STD_LOGIC_VECTOR (4 downto 0);
        din16_WIDTH : INTEGER;
        CASE17 : STD_LOGIC_VECTOR (4 downto 0);
        din17_WIDTH : INTEGER;
        CASE18 : STD_LOGIC_VECTOR (4 downto 0);
        din18_WIDTH : INTEGER;
        CASE19 : STD_LOGIC_VECTOR (4 downto 0);
        din19_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dynamic_routing_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_32s_32s_48_1_1_U101 : component dynamic_routing_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => tmp_s_fu_1038_p43,
        din1 => tmp_fu_994_p19,
        dout => mul_ln237_fu_619_p2);

    mul_14ns_16ns_29_1_1_U102 : component dynamic_routing_mul_14ns_16ns_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => mul_ln237_1_fu_769_p0,
        din1 => mul_ln237_1_fu_769_p1,
        dout => mul_ln237_1_fu_769_p2);

    urem_14ns_6ns_5_18_1_U103 : component dynamic_routing_urem_14ns_6ns_5_18_1
    generic map (
        ID => 1,
        NUM_STAGE => 18,
        din0_WIDTH => 14,
        din1_WIDTH => 6,
        dout_WIDTH => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add_ln237_1_fu_759_p2,
        din1 => grp_fu_785_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_785_p2);

    sparsemux_17_3_32_1_1_U104 : component dynamic_routing_sparsemux_17_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000",
        din0_WIDTH => 32,
        CASE1 => "001",
        din1_WIDTH => 32,
        CASE2 => "010",
        din2_WIDTH => 32,
        CASE3 => "011",
        din3_WIDTH => 32,
        CASE4 => "100",
        din4_WIDTH => 32,
        CASE5 => "101",
        din5_WIDTH => 32,
        CASE6 => "110",
        din6_WIDTH => 32,
        CASE7 => "111",
        din7_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => weighted_input_u_q0,
        din1 => weighted_input_u_1_q0,
        din2 => weighted_input_u_2_q0,
        din3 => weighted_input_u_3_q0,
        din4 => weighted_input_u_4_q0,
        din5 => weighted_input_u_5_q0,
        din6 => weighted_input_u_6_q0,
        din7 => weighted_input_u_7_q0,
        def => tmp_fu_994_p17,
        sel => trunc_ln227_reg_1259,
        dout => tmp_fu_994_p19);

    sparsemux_41_5_32_1_1_U105 : component dynamic_routing_sparsemux_41_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00000",
        din0_WIDTH => 32,
        CASE1 => "00001",
        din1_WIDTH => 32,
        CASE2 => "00010",
        din2_WIDTH => 32,
        CASE3 => "00011",
        din3_WIDTH => 32,
        CASE4 => "00100",
        din4_WIDTH => 32,
        CASE5 => "00101",
        din5_WIDTH => 32,
        CASE6 => "00110",
        din6_WIDTH => 32,
        CASE7 => "00111",
        din7_WIDTH => 32,
        CASE8 => "01000",
        din8_WIDTH => 32,
        CASE9 => "01001",
        din9_WIDTH => 32,
        CASE10 => "01010",
        din10_WIDTH => 32,
        CASE11 => "01011",
        din11_WIDTH => 32,
        CASE12 => "01100",
        din12_WIDTH => 32,
        CASE13 => "01101",
        din13_WIDTH => 32,
        CASE14 => "01110",
        din14_WIDTH => 32,
        CASE15 => "01111",
        din15_WIDTH => 32,
        CASE16 => "10000",
        din16_WIDTH => 32,
        CASE17 => "10001",
        din17_WIDTH => 32,
        CASE18 => "10010",
        din18_WIDTH => 32,
        CASE19 => "10011",
        din19_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => coupling_c_q0,
        din1 => coupling_c_1_q0,
        din2 => coupling_c_2_q0,
        din3 => coupling_c_3_q0,
        din4 => coupling_c_4_q0,
        din5 => coupling_c_5_q0,
        din6 => coupling_c_6_q0,
        din7 => coupling_c_7_q0,
        din8 => coupling_c_8_q0,
        din9 => coupling_c_9_q0,
        din10 => coupling_c_10_q0,
        din11 => coupling_c_11_q0,
        din12 => coupling_c_12_q0,
        din13 => coupling_c_13_q0,
        din14 => coupling_c_14_q0,
        din15 => coupling_c_15_q0,
        din16 => coupling_c_16_q0,
        din17 => coupling_c_17_q0,
        din18 => coupling_c_18_q0,
        din19 => coupling_c_19_q0,
        def => tmp_s_fu_1038_p41,
        sel => tmp_s_fu_1038_p42,
        dout => tmp_s_fu_1038_p43);

    flow_control_loop_pipe_sequential_init_U : component dynamic_routing_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter18_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    empty_fu_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_fu_218 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter19 = ap_const_logic_1)) then 
                    empty_fu_218 <= add_ln237_2_fu_1146_p2(47 downto 16);
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten13_fu_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten13_fu_238 <= ap_const_lv18_0;
                elsif (((icmp_ln224_fu_659_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten13_fu_238 <= add_ln224_fu_665_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_230 <= ap_const_lv16_0;
                elsif (((icmp_ln224_fu_659_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten_fu_230 <= select_ln227_1_fu_809_p3;
                end if;
            end if; 
        end if;
    end process;

    sum_i_fu_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    sum_i_fu_234 <= ap_const_lv4_0;
                elsif (((icmp_ln224_fu_659_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    sum_i_fu_234 <= select_ln224_1_fu_707_p3;
                end if;
            end if; 
        end if;
    end process;

    sum_j_fu_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    sum_j_fu_226 <= ap_const_lv5_0;
                elsif ((ap_enable_reg_pp0_iter18 = ap_const_logic_1)) then 
                    sum_j_fu_226 <= select_ln227_fu_853_p3;
                end if;
            end if; 
        end if;
    end process;

    sum_k_fu_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    sum_k_fu_222 <= ap_const_lv11_0;
                elsif (((icmp_ln224_fu_659_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    sum_k_fu_222 <= add_ln232_fu_791_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln241_reg_1409 <= add_ln241_fu_977_p2;
                and_ln224_reg_1223_pp0_iter10_reg <= and_ln224_reg_1223_pp0_iter9_reg;
                and_ln224_reg_1223_pp0_iter11_reg <= and_ln224_reg_1223_pp0_iter10_reg;
                and_ln224_reg_1223_pp0_iter12_reg <= and_ln224_reg_1223_pp0_iter11_reg;
                and_ln224_reg_1223_pp0_iter13_reg <= and_ln224_reg_1223_pp0_iter12_reg;
                and_ln224_reg_1223_pp0_iter14_reg <= and_ln224_reg_1223_pp0_iter13_reg;
                and_ln224_reg_1223_pp0_iter15_reg <= and_ln224_reg_1223_pp0_iter14_reg;
                and_ln224_reg_1223_pp0_iter16_reg <= and_ln224_reg_1223_pp0_iter15_reg;
                and_ln224_reg_1223_pp0_iter17_reg <= and_ln224_reg_1223_pp0_iter16_reg;
                and_ln224_reg_1223_pp0_iter2_reg <= and_ln224_reg_1223;
                and_ln224_reg_1223_pp0_iter3_reg <= and_ln224_reg_1223_pp0_iter2_reg;
                and_ln224_reg_1223_pp0_iter4_reg <= and_ln224_reg_1223_pp0_iter3_reg;
                and_ln224_reg_1223_pp0_iter5_reg <= and_ln224_reg_1223_pp0_iter4_reg;
                and_ln224_reg_1223_pp0_iter6_reg <= and_ln224_reg_1223_pp0_iter5_reg;
                and_ln224_reg_1223_pp0_iter7_reg <= and_ln224_reg_1223_pp0_iter6_reg;
                and_ln224_reg_1223_pp0_iter8_reg <= and_ln224_reg_1223_pp0_iter7_reg;
                and_ln224_reg_1223_pp0_iter9_reg <= and_ln224_reg_1223_pp0_iter8_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
                ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
                ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                empty_52_reg_1235_pp0_iter10_reg <= empty_52_reg_1235_pp0_iter9_reg;
                empty_52_reg_1235_pp0_iter11_reg <= empty_52_reg_1235_pp0_iter10_reg;
                empty_52_reg_1235_pp0_iter12_reg <= empty_52_reg_1235_pp0_iter11_reg;
                empty_52_reg_1235_pp0_iter13_reg <= empty_52_reg_1235_pp0_iter12_reg;
                empty_52_reg_1235_pp0_iter14_reg <= empty_52_reg_1235_pp0_iter13_reg;
                empty_52_reg_1235_pp0_iter15_reg <= empty_52_reg_1235_pp0_iter14_reg;
                empty_52_reg_1235_pp0_iter16_reg <= empty_52_reg_1235_pp0_iter15_reg;
                empty_52_reg_1235_pp0_iter17_reg <= empty_52_reg_1235_pp0_iter16_reg;
                empty_52_reg_1235_pp0_iter18_reg <= empty_52_reg_1235_pp0_iter17_reg;
                empty_52_reg_1235_pp0_iter2_reg <= empty_52_reg_1235;
                empty_52_reg_1235_pp0_iter3_reg <= empty_52_reg_1235_pp0_iter2_reg;
                empty_52_reg_1235_pp0_iter4_reg <= empty_52_reg_1235_pp0_iter3_reg;
                empty_52_reg_1235_pp0_iter5_reg <= empty_52_reg_1235_pp0_iter4_reg;
                empty_52_reg_1235_pp0_iter6_reg <= empty_52_reg_1235_pp0_iter5_reg;
                empty_52_reg_1235_pp0_iter7_reg <= empty_52_reg_1235_pp0_iter6_reg;
                empty_52_reg_1235_pp0_iter8_reg <= empty_52_reg_1235_pp0_iter7_reg;
                empty_52_reg_1235_pp0_iter9_reg <= empty_52_reg_1235_pp0_iter8_reg;
                icmp_ln227_reg_1218_pp0_iter10_reg <= icmp_ln227_reg_1218_pp0_iter9_reg;
                icmp_ln227_reg_1218_pp0_iter11_reg <= icmp_ln227_reg_1218_pp0_iter10_reg;
                icmp_ln227_reg_1218_pp0_iter12_reg <= icmp_ln227_reg_1218_pp0_iter11_reg;
                icmp_ln227_reg_1218_pp0_iter13_reg <= icmp_ln227_reg_1218_pp0_iter12_reg;
                icmp_ln227_reg_1218_pp0_iter14_reg <= icmp_ln227_reg_1218_pp0_iter13_reg;
                icmp_ln227_reg_1218_pp0_iter15_reg <= icmp_ln227_reg_1218_pp0_iter14_reg;
                icmp_ln227_reg_1218_pp0_iter16_reg <= icmp_ln227_reg_1218_pp0_iter15_reg;
                icmp_ln227_reg_1218_pp0_iter17_reg <= icmp_ln227_reg_1218_pp0_iter16_reg;
                icmp_ln227_reg_1218_pp0_iter2_reg <= icmp_ln227_reg_1218;
                icmp_ln227_reg_1218_pp0_iter3_reg <= icmp_ln227_reg_1218_pp0_iter2_reg;
                icmp_ln227_reg_1218_pp0_iter4_reg <= icmp_ln227_reg_1218_pp0_iter3_reg;
                icmp_ln227_reg_1218_pp0_iter5_reg <= icmp_ln227_reg_1218_pp0_iter4_reg;
                icmp_ln227_reg_1218_pp0_iter6_reg <= icmp_ln227_reg_1218_pp0_iter5_reg;
                icmp_ln227_reg_1218_pp0_iter7_reg <= icmp_ln227_reg_1218_pp0_iter6_reg;
                icmp_ln227_reg_1218_pp0_iter8_reg <= icmp_ln227_reg_1218_pp0_iter7_reg;
                icmp_ln227_reg_1218_pp0_iter9_reg <= icmp_ln227_reg_1218_pp0_iter8_reg;
                icmp_ln232_1_reg_1255_pp0_iter10_reg <= icmp_ln232_1_reg_1255_pp0_iter9_reg;
                icmp_ln232_1_reg_1255_pp0_iter11_reg <= icmp_ln232_1_reg_1255_pp0_iter10_reg;
                icmp_ln232_1_reg_1255_pp0_iter12_reg <= icmp_ln232_1_reg_1255_pp0_iter11_reg;
                icmp_ln232_1_reg_1255_pp0_iter13_reg <= icmp_ln232_1_reg_1255_pp0_iter12_reg;
                icmp_ln232_1_reg_1255_pp0_iter14_reg <= icmp_ln232_1_reg_1255_pp0_iter13_reg;
                icmp_ln232_1_reg_1255_pp0_iter15_reg <= icmp_ln232_1_reg_1255_pp0_iter14_reg;
                icmp_ln232_1_reg_1255_pp0_iter16_reg <= icmp_ln232_1_reg_1255_pp0_iter15_reg;
                icmp_ln232_1_reg_1255_pp0_iter17_reg <= icmp_ln232_1_reg_1255_pp0_iter16_reg;
                icmp_ln232_1_reg_1255_pp0_iter18_reg <= icmp_ln232_1_reg_1255_pp0_iter17_reg;
                icmp_ln232_1_reg_1255_pp0_iter2_reg <= icmp_ln232_1_reg_1255;
                icmp_ln232_1_reg_1255_pp0_iter3_reg <= icmp_ln232_1_reg_1255_pp0_iter2_reg;
                icmp_ln232_1_reg_1255_pp0_iter4_reg <= icmp_ln232_1_reg_1255_pp0_iter3_reg;
                icmp_ln232_1_reg_1255_pp0_iter5_reg <= icmp_ln232_1_reg_1255_pp0_iter4_reg;
                icmp_ln232_1_reg_1255_pp0_iter6_reg <= icmp_ln232_1_reg_1255_pp0_iter5_reg;
                icmp_ln232_1_reg_1255_pp0_iter7_reg <= icmp_ln232_1_reg_1255_pp0_iter6_reg;
                icmp_ln232_1_reg_1255_pp0_iter8_reg <= icmp_ln232_1_reg_1255_pp0_iter7_reg;
                icmp_ln232_1_reg_1255_pp0_iter9_reg <= icmp_ln232_1_reg_1255_pp0_iter8_reg;
                select_ln224_1_reg_1228_pp0_iter10_reg <= select_ln224_1_reg_1228_pp0_iter9_reg;
                select_ln224_1_reg_1228_pp0_iter11_reg <= select_ln224_1_reg_1228_pp0_iter10_reg;
                select_ln224_1_reg_1228_pp0_iter12_reg <= select_ln224_1_reg_1228_pp0_iter11_reg;
                select_ln224_1_reg_1228_pp0_iter13_reg <= select_ln224_1_reg_1228_pp0_iter12_reg;
                select_ln224_1_reg_1228_pp0_iter14_reg <= select_ln224_1_reg_1228_pp0_iter13_reg;
                select_ln224_1_reg_1228_pp0_iter15_reg <= select_ln224_1_reg_1228_pp0_iter14_reg;
                select_ln224_1_reg_1228_pp0_iter16_reg <= select_ln224_1_reg_1228_pp0_iter15_reg;
                select_ln224_1_reg_1228_pp0_iter17_reg <= select_ln224_1_reg_1228_pp0_iter16_reg;
                select_ln224_1_reg_1228_pp0_iter2_reg <= select_ln224_1_reg_1228;
                select_ln224_1_reg_1228_pp0_iter3_reg <= select_ln224_1_reg_1228_pp0_iter2_reg;
                select_ln224_1_reg_1228_pp0_iter4_reg <= select_ln224_1_reg_1228_pp0_iter3_reg;
                select_ln224_1_reg_1228_pp0_iter5_reg <= select_ln224_1_reg_1228_pp0_iter4_reg;
                select_ln224_1_reg_1228_pp0_iter6_reg <= select_ln224_1_reg_1228_pp0_iter5_reg;
                select_ln224_1_reg_1228_pp0_iter7_reg <= select_ln224_1_reg_1228_pp0_iter6_reg;
                select_ln224_1_reg_1228_pp0_iter8_reg <= select_ln224_1_reg_1228_pp0_iter7_reg;
                select_ln224_1_reg_1228_pp0_iter9_reg <= select_ln224_1_reg_1228_pp0_iter8_reg;
                sum_k_mid2_reg_1240_pp0_iter10_reg <= sum_k_mid2_reg_1240_pp0_iter9_reg;
                sum_k_mid2_reg_1240_pp0_iter11_reg <= sum_k_mid2_reg_1240_pp0_iter10_reg;
                sum_k_mid2_reg_1240_pp0_iter12_reg <= sum_k_mid2_reg_1240_pp0_iter11_reg;
                sum_k_mid2_reg_1240_pp0_iter13_reg <= sum_k_mid2_reg_1240_pp0_iter12_reg;
                sum_k_mid2_reg_1240_pp0_iter14_reg <= sum_k_mid2_reg_1240_pp0_iter13_reg;
                sum_k_mid2_reg_1240_pp0_iter15_reg <= sum_k_mid2_reg_1240_pp0_iter14_reg;
                sum_k_mid2_reg_1240_pp0_iter16_reg <= sum_k_mid2_reg_1240_pp0_iter15_reg;
                sum_k_mid2_reg_1240_pp0_iter17_reg <= sum_k_mid2_reg_1240_pp0_iter16_reg;
                sum_k_mid2_reg_1240_pp0_iter2_reg <= sum_k_mid2_reg_1240;
                sum_k_mid2_reg_1240_pp0_iter3_reg <= sum_k_mid2_reg_1240_pp0_iter2_reg;
                sum_k_mid2_reg_1240_pp0_iter4_reg <= sum_k_mid2_reg_1240_pp0_iter3_reg;
                sum_k_mid2_reg_1240_pp0_iter5_reg <= sum_k_mid2_reg_1240_pp0_iter4_reg;
                sum_k_mid2_reg_1240_pp0_iter6_reg <= sum_k_mid2_reg_1240_pp0_iter5_reg;
                sum_k_mid2_reg_1240_pp0_iter7_reg <= sum_k_mid2_reg_1240_pp0_iter6_reg;
                sum_k_mid2_reg_1240_pp0_iter8_reg <= sum_k_mid2_reg_1240_pp0_iter7_reg;
                sum_k_mid2_reg_1240_pp0_iter9_reg <= sum_k_mid2_reg_1240_pp0_iter8_reg;
                tmp_119_reg_1250_pp0_iter10_reg <= tmp_119_reg_1250_pp0_iter9_reg;
                tmp_119_reg_1250_pp0_iter11_reg <= tmp_119_reg_1250_pp0_iter10_reg;
                tmp_119_reg_1250_pp0_iter12_reg <= tmp_119_reg_1250_pp0_iter11_reg;
                tmp_119_reg_1250_pp0_iter13_reg <= tmp_119_reg_1250_pp0_iter12_reg;
                tmp_119_reg_1250_pp0_iter14_reg <= tmp_119_reg_1250_pp0_iter13_reg;
                tmp_119_reg_1250_pp0_iter15_reg <= tmp_119_reg_1250_pp0_iter14_reg;
                tmp_119_reg_1250_pp0_iter16_reg <= tmp_119_reg_1250_pp0_iter15_reg;
                tmp_119_reg_1250_pp0_iter17_reg <= tmp_119_reg_1250_pp0_iter16_reg;
                tmp_119_reg_1250_pp0_iter2_reg <= tmp_119_reg_1250;
                tmp_119_reg_1250_pp0_iter3_reg <= tmp_119_reg_1250_pp0_iter2_reg;
                tmp_119_reg_1250_pp0_iter4_reg <= tmp_119_reg_1250_pp0_iter3_reg;
                tmp_119_reg_1250_pp0_iter5_reg <= tmp_119_reg_1250_pp0_iter4_reg;
                tmp_119_reg_1250_pp0_iter6_reg <= tmp_119_reg_1250_pp0_iter5_reg;
                tmp_119_reg_1250_pp0_iter7_reg <= tmp_119_reg_1250_pp0_iter6_reg;
                tmp_119_reg_1250_pp0_iter8_reg <= tmp_119_reg_1250_pp0_iter7_reg;
                tmp_119_reg_1250_pp0_iter9_reg <= tmp_119_reg_1250_pp0_iter8_reg;
                trunc_ln227_reg_1259 <= trunc_ln227_fu_895_p1;
                urem_ln237_reg_1264 <= grp_fu_785_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln224_reg_1223 <= and_ln224_fu_695_p2;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                empty_52_reg_1235 <= empty_52_fu_715_p2;
                icmp_ln227_reg_1218 <= icmp_ln227_fu_677_p2;
                icmp_ln232_1_reg_1255 <= icmp_ln232_1_fu_797_p2;
                select_ln224_1_reg_1228 <= select_ln224_1_fu_707_p3;
                sum_k_mid2_reg_1240 <= sum_k_mid2_fu_721_p3;
                tmp_119_reg_1250 <= mul_ln237_1_fu_769_p2(28 downto 19);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln224_1_fu_701_p2 <= std_logic_vector(unsigned(sum_i_fu_234) + unsigned(ap_const_lv4_1));
    add_ln224_fu_665_p2 <= std_logic_vector(unsigned(indvar_flatten13_fu_238) + unsigned(ap_const_lv18_1));
    add_ln227_1_fu_803_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_230) + unsigned(ap_const_lv16_1));
    add_ln227_2_fu_885_p2 <= std_logic_vector(unsigned(p_shl_fu_867_p3) + unsigned(zext_ln227_fu_881_p1));
    add_ln227_fu_847_p2 <= std_logic_vector(unsigned(select_ln224_fu_840_p3) + unsigned(ap_const_lv5_1));
    add_ln232_fu_791_p2 <= std_logic_vector(unsigned(sum_k_mid2_fu_721_p3) + unsigned(ap_const_lv11_1));
    add_ln237_1_fu_759_p2 <= std_logic_vector(unsigned(zext_ln232_fu_755_p1) + unsigned(empty_53_fu_749_p2));
    add_ln237_2_fu_1146_p2 <= std_logic_vector(unsigned(shl_ln237_1_fu_1138_p3) + unsigned(mul_ln237_fu_619_p2));
    add_ln237_fu_918_p2 <= std_logic_vector(unsigned(add_ln227_2_fu_885_p2) + unsigned(zext_ln237_fu_914_p1));
    add_ln241_fu_977_p2 <= std_logic_vector(unsigned(zext_ln227_1_fu_891_p1) + unsigned(tmp_11_fu_860_p3));
    add_ln_fu_934_p3 <= (tmp_13_fu_924_p4 & tmp_118_fu_899_p3);
    and_ln224_fu_695_p2 <= (xor_ln224_fu_683_p2 and icmp_ln232_fu_689_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln224_fu_659_p2)
    begin
        if (((icmp_ln224_fu_659_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter18_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter18_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_10_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_10_ce0 <= coupling_c_10_ce0_local;

    coupling_c_10_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_10_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_10_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_11_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_11_ce0 <= coupling_c_11_ce0_local;

    coupling_c_11_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_11_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_11_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_12_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_12_ce0 <= coupling_c_12_ce0_local;

    coupling_c_12_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_12_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_12_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_13_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_13_ce0 <= coupling_c_13_ce0_local;

    coupling_c_13_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_13_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_13_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_14_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_14_ce0 <= coupling_c_14_ce0_local;

    coupling_c_14_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_14_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_14_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_15_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_15_ce0 <= coupling_c_15_ce0_local;

    coupling_c_15_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_15_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_15_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_16_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_16_ce0 <= coupling_c_16_ce0_local;

    coupling_c_16_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_16_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_16_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_17_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_17_ce0 <= coupling_c_17_ce0_local;

    coupling_c_17_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_17_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_17_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_18_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_18_ce0 <= coupling_c_18_ce0_local;

    coupling_c_18_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_18_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_18_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_19_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_19_ce0 <= coupling_c_19_ce0_local;

    coupling_c_19_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_19_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_19_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_1_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_1_ce0 <= coupling_c_1_ce0_local;

    coupling_c_1_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_1_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_2_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_2_ce0 <= coupling_c_2_ce0_local;

    coupling_c_2_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_2_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_3_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_3_ce0 <= coupling_c_3_ce0_local;

    coupling_c_3_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_3_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_4_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_4_ce0 <= coupling_c_4_ce0_local;

    coupling_c_4_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_4_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_5_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_5_ce0 <= coupling_c_5_ce0_local;

    coupling_c_5_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_5_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_6_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_6_ce0 <= coupling_c_6_ce0_local;

    coupling_c_6_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_6_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_7_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_7_ce0 <= coupling_c_7_ce0_local;

    coupling_c_7_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_7_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_8_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_8_ce0 <= coupling_c_8_ce0_local;

    coupling_c_8_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_8_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_8_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_9_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_9_ce0 <= coupling_c_9_ce0_local;

    coupling_c_9_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_9_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_9_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    coupling_c_address0 <= zext_ln237_2_fu_954_p1(10 - 1 downto 0);
    coupling_c_ce0 <= coupling_c_ce0_local;

    coupling_c_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            coupling_c_ce0_local <= ap_const_logic_1;
        else 
            coupling_c_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    empty_52_fu_715_p2 <= (icmp_ln227_fu_677_p2 or and_ln224_fu_695_p2);
    empty_53_fu_749_p2 <= std_logic_vector(unsigned(p_shl8_fu_729_p3) + unsigned(p_shl9_fu_745_p1));
    empty_54_fu_1131_p3 <= 
        ap_const_lv32_0 when (empty_52_reg_1235_pp0_iter18_reg(0) = '1') else 
        empty_fu_218;
    grp_fu_785_p1 <= ap_const_lv14_14(6 - 1 downto 0);
    icmp_ln224_fu_659_p2 <= "1" when (indvar_flatten13_fu_238 = ap_const_lv18_2D000) else "0";
    icmp_ln227_fu_677_p2 <= "1" when (indvar_flatten_fu_230 = ap_const_lv16_4800) else "0";
    icmp_ln232_1_fu_797_p2 <= "1" when (add_ln232_fu_791_p2 = ap_const_lv11_480) else "0";
    icmp_ln232_fu_689_p2 <= "1" when (sum_k_fu_222 = ap_const_lv11_480) else "0";
    mul_ln237_1_fu_769_p0 <= mul_ln237_1_fu_769_p00(14 - 1 downto 0);
    mul_ln237_1_fu_769_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln237_1_fu_759_p2),29));
    mul_ln237_1_fu_769_p1 <= ap_const_lv29_6667(16 - 1 downto 0);
    p_shl8_fu_729_p3 <= (select_ln224_1_fu_707_p3 & ap_const_lv10_0);
    p_shl9_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_116_fu_737_p3),14));
    p_shl_fu_867_p3 <= (select_ln224_1_reg_1228_pp0_iter17_reg & ap_const_lv11_0);
    select_ln224_1_fu_707_p3 <= 
        add_ln224_1_fu_701_p2 when (icmp_ln227_fu_677_p2(0) = '1') else 
        sum_i_fu_234;
    select_ln224_fu_840_p3 <= 
        ap_const_lv5_0 when (icmp_ln227_reg_1218_pp0_iter17_reg(0) = '1') else 
        sum_j_fu_226;
    select_ln227_1_fu_809_p3 <= 
        ap_const_lv16_1 when (icmp_ln227_fu_677_p2(0) = '1') else 
        add_ln227_1_fu_803_p2;
    select_ln227_fu_853_p3 <= 
        add_ln227_fu_847_p2 when (and_ln224_reg_1223_pp0_iter17_reg(0) = '1') else 
        select_ln224_fu_840_p3;
    shl_ln237_1_fu_1138_p3 <= (empty_54_fu_1131_p3 & ap_const_lv16_0);
    shl_ln_fu_907_p3 <= (sum_k_mid2_reg_1240_pp0_iter17_reg & ap_const_lv1_0);
    sum_k_mid2_fu_721_p3 <= 
        ap_const_lv11_0 when (empty_52_fu_715_p2(0) = '1') else 
        sum_k_fu_222;
    sum_of_products_s_address0 <= zext_ln241_fu_1163_p1(8 - 1 downto 0);
    sum_of_products_s_ce0 <= sum_of_products_s_ce0_local;

    sum_of_products_s_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter19, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1))) then 
            sum_of_products_s_ce0_local <= ap_const_logic_1;
        else 
            sum_of_products_s_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    sum_of_products_s_d0 <= add_ln237_2_fu_1146_p2(47 downto 16);
    sum_of_products_s_we0 <= sum_of_products_s_we0_local;

    sum_of_products_s_we0_local_assign_proc : process(ap_enable_reg_pp0_iter19, ap_block_pp0_stage0_11001, icmp_ln232_1_reg_1255_pp0_iter18_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln232_1_reg_1255_pp0_iter18_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1))) then 
            sum_of_products_s_we0_local <= ap_const_logic_1;
        else 
            sum_of_products_s_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    tmp_116_fu_737_p3 <= (select_ln224_1_fu_707_p3 & ap_const_lv7_0);
    tmp_117_fu_874_p3 <= (select_ln224_1_reg_1228_pp0_iter17_reg & ap_const_lv8_0);
    tmp_118_fu_899_p3 <= select_ln227_fu_853_p3(3 downto 3);
    tmp_11_fu_860_p3 <= (select_ln224_1_reg_1228_pp0_iter17_reg & ap_const_lv4_0);
    tmp_13_fu_924_p4 <= add_ln237_fu_918_p2(14 downto 1);
    tmp_fu_994_p17 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_s_fu_1038_p41 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_s_fu_1038_p42 <= urem_ln237_reg_1264(5 - 1 downto 0);
    trunc_ln227_fu_895_p1 <= select_ln227_fu_853_p3(3 - 1 downto 0);
    weighted_input_u_1_address0 <= zext_ln237_1_fu_942_p1(15 - 1 downto 0);
    weighted_input_u_1_ce0 <= weighted_input_u_1_ce0_local;

    weighted_input_u_1_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            weighted_input_u_1_ce0_local <= ap_const_logic_1;
        else 
            weighted_input_u_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    weighted_input_u_2_address0 <= zext_ln237_1_fu_942_p1(15 - 1 downto 0);
    weighted_input_u_2_ce0 <= weighted_input_u_2_ce0_local;

    weighted_input_u_2_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            weighted_input_u_2_ce0_local <= ap_const_logic_1;
        else 
            weighted_input_u_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    weighted_input_u_3_address0 <= zext_ln237_1_fu_942_p1(15 - 1 downto 0);
    weighted_input_u_3_ce0 <= weighted_input_u_3_ce0_local;

    weighted_input_u_3_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            weighted_input_u_3_ce0_local <= ap_const_logic_1;
        else 
            weighted_input_u_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    weighted_input_u_4_address0 <= zext_ln237_1_fu_942_p1(15 - 1 downto 0);
    weighted_input_u_4_ce0 <= weighted_input_u_4_ce0_local;

    weighted_input_u_4_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            weighted_input_u_4_ce0_local <= ap_const_logic_1;
        else 
            weighted_input_u_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    weighted_input_u_5_address0 <= zext_ln237_1_fu_942_p1(15 - 1 downto 0);
    weighted_input_u_5_ce0 <= weighted_input_u_5_ce0_local;

    weighted_input_u_5_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            weighted_input_u_5_ce0_local <= ap_const_logic_1;
        else 
            weighted_input_u_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    weighted_input_u_6_address0 <= zext_ln237_1_fu_942_p1(15 - 1 downto 0);
    weighted_input_u_6_ce0 <= weighted_input_u_6_ce0_local;

    weighted_input_u_6_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            weighted_input_u_6_ce0_local <= ap_const_logic_1;
        else 
            weighted_input_u_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    weighted_input_u_7_address0 <= zext_ln237_1_fu_942_p1(15 - 1 downto 0);
    weighted_input_u_7_ce0 <= weighted_input_u_7_ce0_local;

    weighted_input_u_7_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            weighted_input_u_7_ce0_local <= ap_const_logic_1;
        else 
            weighted_input_u_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    weighted_input_u_address0 <= zext_ln237_1_fu_942_p1(15 - 1 downto 0);
    weighted_input_u_ce0 <= weighted_input_u_ce0_local;

    weighted_input_u_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            weighted_input_u_ce0_local <= ap_const_logic_1;
        else 
            weighted_input_u_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln224_fu_683_p2 <= (icmp_ln227_fu_677_p2 xor ap_const_lv1_1);
    zext_ln227_1_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln227_fu_853_p3),8));
    zext_ln227_fu_881_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_117_fu_874_p3),15));
    zext_ln232_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_k_mid2_fu_721_p3),14));
    zext_ln237_1_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln_fu_934_p3),64));
    zext_ln237_2_fu_954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_119_reg_1250_pp0_iter17_reg),64));
    zext_ln237_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_907_p3),15));
    zext_ln241_fu_1163_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln241_reg_1409),64));
end behav;
