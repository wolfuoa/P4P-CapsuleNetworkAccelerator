// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module dynamic_routing_squash (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_mat_address0,
        input_mat_ce0,
        input_mat_q0,
        squash_mat_address0,
        squash_mat_ce0,
        squash_mat_we0,
        squash_mat_d0
);

parameter    ap_ST_fsm_state1 = 123'd1;
parameter    ap_ST_fsm_state2 = 123'd2;
parameter    ap_ST_fsm_state3 = 123'd4;
parameter    ap_ST_fsm_state4 = 123'd8;
parameter    ap_ST_fsm_state5 = 123'd16;
parameter    ap_ST_fsm_state6 = 123'd32;
parameter    ap_ST_fsm_state7 = 123'd64;
parameter    ap_ST_fsm_state8 = 123'd128;
parameter    ap_ST_fsm_state9 = 123'd256;
parameter    ap_ST_fsm_state10 = 123'd512;
parameter    ap_ST_fsm_state11 = 123'd1024;
parameter    ap_ST_fsm_state12 = 123'd2048;
parameter    ap_ST_fsm_state13 = 123'd4096;
parameter    ap_ST_fsm_state14 = 123'd8192;
parameter    ap_ST_fsm_state15 = 123'd16384;
parameter    ap_ST_fsm_state16 = 123'd32768;
parameter    ap_ST_fsm_state17 = 123'd65536;
parameter    ap_ST_fsm_state18 = 123'd131072;
parameter    ap_ST_fsm_state19 = 123'd262144;
parameter    ap_ST_fsm_state20 = 123'd524288;
parameter    ap_ST_fsm_state21 = 123'd1048576;
parameter    ap_ST_fsm_state22 = 123'd2097152;
parameter    ap_ST_fsm_state23 = 123'd4194304;
parameter    ap_ST_fsm_state24 = 123'd8388608;
parameter    ap_ST_fsm_state25 = 123'd16777216;
parameter    ap_ST_fsm_state26 = 123'd33554432;
parameter    ap_ST_fsm_state27 = 123'd67108864;
parameter    ap_ST_fsm_state28 = 123'd134217728;
parameter    ap_ST_fsm_state29 = 123'd268435456;
parameter    ap_ST_fsm_state30 = 123'd536870912;
parameter    ap_ST_fsm_state31 = 123'd1073741824;
parameter    ap_ST_fsm_state32 = 123'd2147483648;
parameter    ap_ST_fsm_state33 = 123'd4294967296;
parameter    ap_ST_fsm_state34 = 123'd8589934592;
parameter    ap_ST_fsm_state35 = 123'd17179869184;
parameter    ap_ST_fsm_state36 = 123'd34359738368;
parameter    ap_ST_fsm_state37 = 123'd68719476736;
parameter    ap_ST_fsm_state38 = 123'd137438953472;
parameter    ap_ST_fsm_state39 = 123'd274877906944;
parameter    ap_ST_fsm_state40 = 123'd549755813888;
parameter    ap_ST_fsm_state41 = 123'd1099511627776;
parameter    ap_ST_fsm_state42 = 123'd2199023255552;
parameter    ap_ST_fsm_state43 = 123'd4398046511104;
parameter    ap_ST_fsm_state44 = 123'd8796093022208;
parameter    ap_ST_fsm_state45 = 123'd17592186044416;
parameter    ap_ST_fsm_state46 = 123'd35184372088832;
parameter    ap_ST_fsm_state47 = 123'd70368744177664;
parameter    ap_ST_fsm_state48 = 123'd140737488355328;
parameter    ap_ST_fsm_state49 = 123'd281474976710656;
parameter    ap_ST_fsm_state50 = 123'd562949953421312;
parameter    ap_ST_fsm_state51 = 123'd1125899906842624;
parameter    ap_ST_fsm_state52 = 123'd2251799813685248;
parameter    ap_ST_fsm_state53 = 123'd4503599627370496;
parameter    ap_ST_fsm_state54 = 123'd9007199254740992;
parameter    ap_ST_fsm_state55 = 123'd18014398509481984;
parameter    ap_ST_fsm_state56 = 123'd36028797018963968;
parameter    ap_ST_fsm_state57 = 123'd72057594037927936;
parameter    ap_ST_fsm_state58 = 123'd144115188075855872;
parameter    ap_ST_fsm_state59 = 123'd288230376151711744;
parameter    ap_ST_fsm_state60 = 123'd576460752303423488;
parameter    ap_ST_fsm_state61 = 123'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 123'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 123'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 123'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 123'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 123'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 123'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 123'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 123'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 123'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 123'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 123'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 123'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 123'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 123'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 123'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 123'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 123'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 123'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 123'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 123'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 123'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 123'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 123'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 123'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 123'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 123'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 123'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 123'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 123'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 123'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 123'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 123'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 123'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 123'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 123'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 123'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 123'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 123'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 123'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 123'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 123'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 123'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 123'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 123'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 123'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 123'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 123'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 123'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 123'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 123'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 123'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 123'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 123'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 123'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 123'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 123'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 123'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 123'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 123'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 123'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 123'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 123'd5316911983139663491615228241121378304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] input_mat_address0;
output   input_mat_ce0;
input  [31:0] input_mat_q0;
output  [7:0] squash_mat_address0;
output   squash_mat_ce0;
output   squash_mat_we0;
output  [31:0] squash_mat_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] input_mat_address0;
reg input_mat_ce0;

(* fsm_encoding = "none" *) reg   [122:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] tmp_s_fu_199_p3;
reg   [7:0] tmp_s_reg_838;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln278_fu_244_p2;
reg   [0:0] icmp_ln278_reg_854;
wire   [0:0] tmp_fu_250_p3;
reg   [0:0] tmp_reg_859;
wire   [31:0] select_ln278_fu_264_p3;
reg   [31:0] select_ln278_reg_864;
wire   [63:0] retval_0_i_i_fu_548_p3;
reg   [63:0] retval_0_i_i_reg_871;
wire    ap_CS_fsm_state5;
wire   [63:0] grp_fu_174_p2;
reg   [63:0] pf_reg_876;
wire    ap_CS_fsm_state26;
wire   [31:0] ref_tmp14_4_fu_776_p11;
reg  signed [31:0] ref_tmp14_4_reg_881;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state55;
wire   [31:0] trunc_ln278_9_fu_817_p1;
reg   [31:0] trunc_ln278_9_reg_896;
wire    ap_CS_fsm_state122;
wire    grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_start;
wire    grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_done;
wire    grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_idle;
wire    grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_ready;
wire   [7:0] grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_input_mat_address0;
wire    grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_input_mat_ce0;
wire   [31:0] grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_p_out;
wire    grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_p_out_ap_vld;
wire    grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_start;
wire    grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_done;
wire    grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_idle;
wire    grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_ready;
wire   [7:0] grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_input_mat_address0;
wire    grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_input_mat_ce0;
wire   [7:0] grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_squash_mat_address0;
wire    grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_squash_mat_ce0;
wire    grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_squash_mat_we0;
wire   [31:0] grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_squash_mat_d0;
reg    grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_start_reg;
wire   [0:0] icmp_ln268_fu_187_p2;
wire    ap_CS_fsm_state3;
reg    grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_start_reg;
wire    ap_CS_fsm_state123;
reg   [3:0] i_fu_148;
wire   [3:0] add_ln268_fu_193_p2;
wire    ap_CS_fsm_state6;
wire  signed [31:0] sext_ln278_fu_216_p0;
wire  signed [32:0] sext_ln278_fu_216_p1;
wire  signed [31:0] shl_ln_fu_226_p1;
wire  signed [32:0] add_ln278_fu_220_p2;
wire   [47:0] grp_fu_238_p0;
wire  signed [31:0] icmp_ln278_fu_244_p0;
wire  signed [31:0] tmp_fu_250_p1;
wire  signed [31:0] sub_ln278_fu_258_p1;
wire   [31:0] sub_ln278_fu_258_p2;
wire  signed [31:0] select_ln278_fu_264_p2;
wire   [32:0] zext_ln278_fu_272_p1;
reg   [32:0] tmp_1_fu_275_p4;
wire   [33:0] tmp_2_fu_285_p3;
wire  signed [63:0] sext_ln278_2_fu_293_p1;
reg   [63:0] tmp_3_fu_297_p3;
wire   [31:0] trunc_ln278_fu_305_p1;
wire   [31:0] sub_ln278_1_fu_313_p2;
wire   [31:0] add_ln278_1_fu_319_p2;
wire   [30:0] tmp_4_fu_325_p4;
wire   [5:0] trunc_ln278_2_fu_341_p1;
wire   [5:0] sub_ln278_7_fu_345_p2;
wire   [32:0] zext_ln278_6_fu_351_p1;
wire   [32:0] lshr_ln278_2_fu_355_p2;
wire   [31:0] trunc_ln278_3_fu_361_p1;
wire   [31:0] and_ln278_3_fu_365_p2;
wire   [0:0] icmp_ln278_1_fu_335_p2;
wire   [0:0] icmp_ln278_2_fu_370_p2;
wire   [0:0] tmp_5_fu_382_p3;
wire   [0:0] tmp_6_fu_396_p3;
wire   [0:0] xor_ln278_2_fu_390_p2;
wire   [0:0] and_ln278_fu_404_p2;
wire   [0:0] phi_ln278_fu_376_p2;
wire   [0:0] or_ln278_fu_410_p2;
wire   [31:0] add_ln278_2_fu_433_p2;
wire   [63:0] zext_ln278_1_fu_424_p1;
wire   [63:0] zext_ln278_2_fu_439_p1;
wire   [31:0] sub_ln278_2_fu_449_p2;
wire   [63:0] zext_ln278_3_fu_455_p1;
wire   [0:0] icmp_ln278_3_fu_427_p2;
wire   [63:0] lshr_ln278_fu_443_p2;
wire   [63:0] shl_ln278_fu_459_p2;
wire   [1:0] or_ln_fu_416_p3;
wire   [63:0] cond47_i_i_fu_465_p3;
wire   [63:0] zext_ln278_4_fu_473_p1;
wire   [63:0] add_ln278_3_fu_477_p2;
wire   [62:0] lshr_ln278_1_fu_483_p4;
wire   [0:0] tmp_8_fu_497_p3;
wire   [10:0] trunc_ln278_1_fu_309_p1;
wire   [10:0] sub_ln278_6_fu_513_p2;
wire   [10:0] select_ln278_1_fu_505_p3;
wire   [10:0] add_ln278_4_fu_519_p2;
wire   [63:0] zext_ln278_9_fu_493_p1;
wire   [11:0] tmp_7_fu_525_p3;
wire   [63:0] LD_fu_532_p5;
wire   [63:0] bitcast_ln748_fu_544_p1;
wire   [63:0] bitcast_ln716_fu_555_p1;
wire   [10:0] tmp_10_fu_570_p4;
wire   [51:0] trunc_ln278_5_fu_584_p1;
wire   [52:0] zext_ln278_6_cast_fu_588_p3;
wire   [53:0] zext_ln278_10_fu_596_p1;
wire   [0:0] tmp_9_fu_562_p3;
wire   [53:0] sub_ln278_3_fu_600_p2;
wire   [62:0] trunc_ln278_4_fu_558_p1;
wire   [11:0] zext_ln278_5_fu_580_p1;
wire   [11:0] sub_ln278_4_fu_620_p2;
wire   [10:0] trunc_ln278_6_fu_626_p1;
wire   [0:0] icmp_ln278_5_fu_630_p2;
wire   [10:0] add_ln278_5_fu_636_p2;
wire   [10:0] sub_ln278_5_fu_642_p2;
wire   [10:0] select_ln278_3_fu_648_p3;
wire   [53:0] select_ln278_2_fu_606_p3;
wire   [53:0] zext_ln278_7_fu_676_p1;
wire   [53:0] ashr_ln278_fu_680_p2;
wire   [0:0] icmp_ln278_7_fu_670_p2;
wire   [31:0] trunc_ln278_8_fu_686_p1;
wire   [31:0] select_ln278_6_fu_690_p3;
wire   [5:0] tmp_11_fu_706_p4;
wire   [31:0] trunc_ln278_7_fu_666_p1;
wire   [31:0] zext_ln278_8_fu_656_p1;
wire   [0:0] icmp_ln278_8_fu_716_p2;
wire   [31:0] shl_ln278_1_fu_722_p2;
wire   [0:0] icmp_ln278_4_fu_614_p2;
wire   [0:0] icmp_ln278_6_fu_660_p2;
wire   [0:0] xor_ln278_fu_736_p2;
wire   [0:0] or_ln278_1_fu_748_p2;
wire   [0:0] xor_ln278_1_fu_754_p2;
wire   [0:0] and_ln278_1_fu_742_p2;
wire   [0:0] and_ln278_2_fu_760_p2;
wire   [31:0] ref_tmp14_4_fu_776_p6;
wire   [31:0] ref_tmp14_4_fu_776_p8;
wire   [31:0] ref_tmp14_4_fu_776_p9;
wire   [2:0] ref_tmp14_4_fu_776_p10;
wire   [47:0] grp_fu_238_p2;
wire   [63:0] grp_fu_811_p0;
wire   [31:0] grp_fu_811_p2;
reg    grp_fu_238_ap_start;
wire    grp_fu_238_ap_done;
reg    grp_fu_811_ap_start;
wire    grp_fu_811_ap_done;
reg   [122:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
wire    ap_ST_fsm_state112_blk;
wire    ap_ST_fsm_state113_blk;
wire    ap_ST_fsm_state114_blk;
wire    ap_ST_fsm_state115_blk;
wire    ap_ST_fsm_state116_blk;
wire    ap_ST_fsm_state117_blk;
wire    ap_ST_fsm_state118_blk;
wire    ap_ST_fsm_state119_blk;
wire    ap_ST_fsm_state120_blk;
wire    ap_ST_fsm_state121_blk;
wire    ap_ST_fsm_state122_blk;
reg    ap_ST_fsm_state123_blk;
wire  signed [2:0] ref_tmp14_4_fu_776_p1;
wire   [2:0] ref_tmp14_4_fu_776_p3;
wire   [2:0] ref_tmp14_4_fu_776_p5;
wire   [2:0] ref_tmp14_4_fu_776_p7;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 123'd1;
#0 grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_start_reg = 1'b0;
#0 grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_start_reg = 1'b0;
#0 i_fu_148 = 4'd0;
end

dynamic_routing_squash_Pipeline_VITIS_LOOP_272_2 grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_start),
    .ap_done(grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_done),
    .ap_idle(grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_idle),
    .ap_ready(grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_ready),
    .tmp_10(tmp_s_reg_838),
    .input_mat_address0(grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_input_mat_address0),
    .input_mat_ce0(grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_input_mat_ce0),
    .input_mat_q0(input_mat_q0),
    .p_out(grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_p_out),
    .p_out_ap_vld(grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_p_out_ap_vld)
);

dynamic_routing_squash_Pipeline_VITIS_LOOP_280_3 grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_start),
    .ap_done(grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_done),
    .ap_idle(grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_idle),
    .ap_ready(grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_ready),
    .tmp_10(tmp_s_reg_838),
    .input_mat_address0(grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_input_mat_address0),
    .input_mat_ce0(grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_input_mat_ce0),
    .input_mat_q0(input_mat_q0),
    .sext_ln280(trunc_ln278_9_reg_896),
    .squash_mat_address0(grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_squash_mat_address0),
    .squash_mat_ce0(grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_squash_mat_ce0),
    .squash_mat_we0(grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_squash_mat_we0),
    .squash_mat_d0(grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_squash_mat_d0)
);

dynamic_routing_dsqrt_64ns_64ns_64_21_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsqrt_64ns_64ns_64_21_no_dsp_1_U147(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(retval_0_i_i_reg_871),
    .ce(1'b1),
    .dout(grp_fu_174_p2)
);

dynamic_routing_sdiv_48ns_33s_48_52_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 52 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 48 ))
sdiv_48ns_33s_48_52_seq_1_U148(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_238_ap_start),
    .done(grp_fu_238_ap_done),
    .din0(grp_fu_238_p0),
    .din1(add_ln278_fu_220_p2),
    .ce(1'b1),
    .dout(grp_fu_238_p2)
);

(* dissolve_hierarchy = "yes" *) dynamic_routing_sparsemux_9_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 32 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 32 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 32 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
sparsemux_9_3_32_1_1_U149(
    .din0(32'd0),
    .din1(trunc_ln278_7_fu_666_p1),
    .din2(ref_tmp14_4_fu_776_p6),
    .din3(ref_tmp14_4_fu_776_p8),
    .def(ref_tmp14_4_fu_776_p9),
    .sel(ref_tmp14_4_fu_776_p10),
    .dout(ref_tmp14_4_fu_776_p11)
);

dynamic_routing_sdiv_64ns_32s_32_68_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sdiv_64ns_32s_32_68_seq_1_U150(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_811_ap_start),
    .done(grp_fu_811_ap_done),
    .din0(grp_fu_811_p0),
    .din1(ref_tmp14_4_reg_881),
    .ce(1'b1),
    .dout(grp_fu_811_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln268_fu_187_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_start_reg <= 1'b1;
        end else if ((grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_ready == 1'b1)) begin
            grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state122)) begin
            grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_start_reg <= 1'b1;
        end else if ((grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_ready == 1'b1)) begin
            grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_148 <= 4'd0;
    end else if (((icmp_ln268_fu_187_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_fu_148 <= add_ln268_fu_193_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln278_reg_854 <= icmp_ln278_fu_244_p2;
        select_ln278_reg_864 <= select_ln278_fu_264_p3;
        tmp_reg_859 <= tmp_fu_250_p1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        pf_reg_876 <= grp_fu_174_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ref_tmp14_4_reg_881 <= ref_tmp14_4_fu_776_p11;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        retval_0_i_i_reg_871 <= retval_0_i_i_fu_548_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_s_reg_838[7 : 4] <= tmp_s_fu_199_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        trunc_ln278_9_reg_896 <= trunc_ln278_9_fu_817_p1;
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

assign ap_ST_fsm_state112_blk = 1'b0;

assign ap_ST_fsm_state113_blk = 1'b0;

assign ap_ST_fsm_state114_blk = 1'b0;

assign ap_ST_fsm_state115_blk = 1'b0;

assign ap_ST_fsm_state116_blk = 1'b0;

assign ap_ST_fsm_state117_blk = 1'b0;

assign ap_ST_fsm_state118_blk = 1'b0;

assign ap_ST_fsm_state119_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state120_blk = 1'b0;

assign ap_ST_fsm_state121_blk = 1'b0;

assign ap_ST_fsm_state122_blk = 1'b0;

always @ (*) begin
    if ((grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_done == 1'b0)) begin
        ap_ST_fsm_state123_blk = 1'b1;
    end else begin
        ap_ST_fsm_state123_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

always @ (*) begin
    if ((grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((icmp_ln268_fu_187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln268_fu_187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_238_ap_start = 1'b1;
    end else begin
        grp_fu_238_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_811_ap_start = 1'b1;
    end else begin
        grp_fu_811_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        input_mat_address0 = grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_input_mat_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_mat_address0 = grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_input_mat_address0;
    end else begin
        input_mat_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        input_mat_ce0 = grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_input_mat_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_mat_ce0 = grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_input_mat_ce0;
    end else begin
        input_mat_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln268_fu_187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            if (((grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state123))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_fu_532_p5 = {{tmp_7_fu_525_p3}, {zext_ln278_9_fu_493_p1[51:0]}};

assign add_ln268_fu_193_p2 = (i_fu_148 + 4'd1);

assign add_ln278_1_fu_319_p2 = ($signed(sub_ln278_1_fu_313_p2) + $signed(32'd4294967243));

assign add_ln278_2_fu_433_p2 = ($signed(sub_ln278_1_fu_313_p2) + $signed(32'd4294967242));

assign add_ln278_3_fu_477_p2 = (cond47_i_i_fu_465_p3 + zext_ln278_4_fu_473_p1);

assign add_ln278_4_fu_519_p2 = (sub_ln278_6_fu_513_p2 + select_ln278_1_fu_505_p3);

assign add_ln278_5_fu_636_p2 = ($signed(trunc_ln278_6_fu_626_p1) + $signed(11'd2032));

assign add_ln278_fu_220_p2 = ($signed(sext_ln278_fu_216_p1) + $signed(33'd65536));

assign and_ln278_1_fu_742_p2 = (xor_ln278_fu_736_p2 & icmp_ln278_6_fu_660_p2);

assign and_ln278_2_fu_760_p2 = (xor_ln278_1_fu_754_p2 & icmp_ln278_5_fu_630_p2);

assign and_ln278_3_fu_365_p2 = (trunc_ln278_3_fu_361_p1 & select_ln278_reg_864);

assign and_ln278_fu_404_p2 = (xor_ln278_2_fu_390_p2 & tmp_6_fu_396_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ashr_ln278_fu_680_p2 = $signed(select_ln278_2_fu_606_p3) >>> zext_ln278_7_fu_676_p1;

assign bitcast_ln716_fu_555_p1 = pf_reg_876;

assign bitcast_ln748_fu_544_p1 = LD_fu_532_p5;

assign cond47_i_i_fu_465_p3 = ((icmp_ln278_3_fu_427_p2[0:0] == 1'b1) ? lshr_ln278_fu_443_p2 : shl_ln278_fu_459_p2);

assign grp_fu_238_p0 = {{shl_ln_fu_226_p1}, {16'd0}};

assign grp_fu_811_p0 = {{grp_fu_238_p2}, {16'd0}};

assign grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_start = grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_ap_start_reg;

assign grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_start = grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_ap_start_reg;

assign icmp_ln268_fu_187_p2 = ((i_fu_148 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln278_1_fu_335_p2 = (($signed(tmp_4_fu_325_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln278_2_fu_370_p2 = ((and_ln278_3_fu_365_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln278_3_fu_427_p2 = (($signed(add_ln278_1_fu_319_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln278_4_fu_614_p2 = ((trunc_ln278_4_fu_558_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln278_5_fu_630_p2 = (($signed(sub_ln278_4_fu_620_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln278_6_fu_660_p2 = ((sub_ln278_4_fu_620_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln278_7_fu_670_p2 = ((select_ln278_3_fu_648_p3 < 11'd54) ? 1'b1 : 1'b0);

assign icmp_ln278_8_fu_716_p2 = ((tmp_11_fu_706_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_244_p0 = grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_p_out;

assign icmp_ln278_fu_244_p2 = ((icmp_ln278_fu_244_p0 == 32'd0) ? 1'b1 : 1'b0);

assign lshr_ln278_1_fu_483_p4 = {{add_ln278_3_fu_477_p2[63:1]}};

assign lshr_ln278_2_fu_355_p2 = 33'd8589934591 >> zext_ln278_6_fu_351_p1;

assign lshr_ln278_fu_443_p2 = zext_ln278_1_fu_424_p1 >> zext_ln278_2_fu_439_p1;

assign or_ln278_1_fu_748_p2 = (icmp_ln278_6_fu_660_p2 | icmp_ln278_4_fu_614_p2);

assign or_ln278_fu_410_p2 = (phi_ln278_fu_376_p2 | and_ln278_fu_404_p2);

assign or_ln_fu_416_p3 = {{1'd0}, {or_ln278_fu_410_p2}};

assign phi_ln278_fu_376_p2 = (icmp_ln278_2_fu_370_p2 & icmp_ln278_1_fu_335_p2);

assign ref_tmp14_4_fu_776_p10 = {{{icmp_ln278_4_fu_614_p2}, {and_ln278_1_fu_742_p2}}, {and_ln278_2_fu_760_p2}};

assign ref_tmp14_4_fu_776_p6 = ((icmp_ln278_7_fu_670_p2[0:0] == 1'b1) ? trunc_ln278_8_fu_686_p1 : select_ln278_6_fu_690_p3);

assign ref_tmp14_4_fu_776_p8 = ((icmp_ln278_8_fu_716_p2[0:0] == 1'b1) ? shl_ln278_1_fu_722_p2 : 32'd0);

assign ref_tmp14_4_fu_776_p9 = 'bx;

assign retval_0_i_i_fu_548_p3 = ((icmp_ln278_reg_854[0:0] == 1'b1) ? 64'd0 : bitcast_ln748_fu_544_p1);

assign select_ln278_1_fu_505_p3 = ((tmp_8_fu_497_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln278_2_fu_606_p3 = ((tmp_9_fu_562_p3[0:0] == 1'b1) ? sub_ln278_3_fu_600_p2 : zext_ln278_10_fu_596_p1);

assign select_ln278_3_fu_648_p3 = ((icmp_ln278_5_fu_630_p2[0:0] == 1'b1) ? add_ln278_5_fu_636_p2 : sub_ln278_5_fu_642_p2);

assign select_ln278_6_fu_690_p3 = ((tmp_9_fu_562_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln278_fu_264_p2 = grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_p_out;

assign select_ln278_fu_264_p3 = ((tmp_fu_250_p3[0:0] == 1'b1) ? sub_ln278_fu_258_p2 : select_ln278_fu_264_p2);

assign sext_ln278_2_fu_293_p1 = $signed(tmp_2_fu_285_p3);

assign sext_ln278_fu_216_p0 = grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_p_out;

assign sext_ln278_fu_216_p1 = sext_ln278_fu_216_p0;

assign shl_ln278_1_fu_722_p2 = trunc_ln278_7_fu_666_p1 << zext_ln278_8_fu_656_p1;

assign shl_ln278_fu_459_p2 = zext_ln278_1_fu_424_p1 << zext_ln278_3_fu_455_p1;

assign shl_ln_fu_226_p1 = grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_p_out;

assign squash_mat_address0 = grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_squash_mat_address0;

assign squash_mat_ce0 = grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_squash_mat_ce0;

assign squash_mat_d0 = grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_squash_mat_d0;

assign squash_mat_we0 = grp_squash_Pipeline_VITIS_LOOP_280_3_fu_164_squash_mat_we0;

assign sub_ln278_1_fu_313_p2 = (32'd33 - trunc_ln278_fu_305_p1);

assign sub_ln278_2_fu_449_p2 = (32'd54 - sub_ln278_1_fu_313_p2);

assign sub_ln278_3_fu_600_p2 = (54'd0 - zext_ln278_10_fu_596_p1);

assign sub_ln278_4_fu_620_p2 = (12'd1075 - zext_ln278_5_fu_580_p1);

assign sub_ln278_5_fu_642_p2 = (11'd16 - trunc_ln278_6_fu_626_p1);

assign sub_ln278_6_fu_513_p2 = (11'd17 - trunc_ln278_1_fu_309_p1);

assign sub_ln278_7_fu_345_p2 = (6'd23 - trunc_ln278_2_fu_341_p1);

assign sub_ln278_fu_258_p1 = grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_p_out;

assign sub_ln278_fu_258_p2 = ($signed(32'd0) - $signed(sub_ln278_fu_258_p1));

assign tmp_10_fu_570_p4 = {{bitcast_ln716_fu_555_p1[62:52]}};

assign tmp_11_fu_706_p4 = {{select_ln278_3_fu_648_p3[10:5]}};

integer ap_tvar_int_0;

always @ (zext_ln278_fu_272_p1) begin
    for (ap_tvar_int_0 = 33 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 32 - 0) begin
            tmp_1_fu_275_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_1_fu_275_p4[ap_tvar_int_0] = zext_ln278_fu_272_p1[32 - ap_tvar_int_0];
        end
    end
end

assign tmp_2_fu_285_p3 = {{1'd1}, {tmp_1_fu_275_p4}};


always @ (sext_ln278_2_fu_293_p1) begin
    if (sext_ln278_2_fu_293_p1[0] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd0;
    end else if (sext_ln278_2_fu_293_p1[1] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd1;
    end else if (sext_ln278_2_fu_293_p1[2] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd2;
    end else if (sext_ln278_2_fu_293_p1[3] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd3;
    end else if (sext_ln278_2_fu_293_p1[4] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd4;
    end else if (sext_ln278_2_fu_293_p1[5] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd5;
    end else if (sext_ln278_2_fu_293_p1[6] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd6;
    end else if (sext_ln278_2_fu_293_p1[7] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd7;
    end else if (sext_ln278_2_fu_293_p1[8] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd8;
    end else if (sext_ln278_2_fu_293_p1[9] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd9;
    end else if (sext_ln278_2_fu_293_p1[10] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd10;
    end else if (sext_ln278_2_fu_293_p1[11] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd11;
    end else if (sext_ln278_2_fu_293_p1[12] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd12;
    end else if (sext_ln278_2_fu_293_p1[13] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd13;
    end else if (sext_ln278_2_fu_293_p1[14] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd14;
    end else if (sext_ln278_2_fu_293_p1[15] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd15;
    end else if (sext_ln278_2_fu_293_p1[16] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd16;
    end else if (sext_ln278_2_fu_293_p1[17] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd17;
    end else if (sext_ln278_2_fu_293_p1[18] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd18;
    end else if (sext_ln278_2_fu_293_p1[19] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd19;
    end else if (sext_ln278_2_fu_293_p1[20] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd20;
    end else if (sext_ln278_2_fu_293_p1[21] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd21;
    end else if (sext_ln278_2_fu_293_p1[22] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd22;
    end else if (sext_ln278_2_fu_293_p1[23] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd23;
    end else if (sext_ln278_2_fu_293_p1[24] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd24;
    end else if (sext_ln278_2_fu_293_p1[25] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd25;
    end else if (sext_ln278_2_fu_293_p1[26] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd26;
    end else if (sext_ln278_2_fu_293_p1[27] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd27;
    end else if (sext_ln278_2_fu_293_p1[28] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd28;
    end else if (sext_ln278_2_fu_293_p1[29] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd29;
    end else if (sext_ln278_2_fu_293_p1[30] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd30;
    end else if (sext_ln278_2_fu_293_p1[31] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd31;
    end else if (sext_ln278_2_fu_293_p1[32] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd32;
    end else if (sext_ln278_2_fu_293_p1[33] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd33;
    end else if (sext_ln278_2_fu_293_p1[34] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd34;
    end else if (sext_ln278_2_fu_293_p1[35] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd35;
    end else if (sext_ln278_2_fu_293_p1[36] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd36;
    end else if (sext_ln278_2_fu_293_p1[37] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd37;
    end else if (sext_ln278_2_fu_293_p1[38] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd38;
    end else if (sext_ln278_2_fu_293_p1[39] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd39;
    end else if (sext_ln278_2_fu_293_p1[40] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd40;
    end else if (sext_ln278_2_fu_293_p1[41] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd41;
    end else if (sext_ln278_2_fu_293_p1[42] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd42;
    end else if (sext_ln278_2_fu_293_p1[43] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd43;
    end else if (sext_ln278_2_fu_293_p1[44] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd44;
    end else if (sext_ln278_2_fu_293_p1[45] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd45;
    end else if (sext_ln278_2_fu_293_p1[46] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd46;
    end else if (sext_ln278_2_fu_293_p1[47] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd47;
    end else if (sext_ln278_2_fu_293_p1[48] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd48;
    end else if (sext_ln278_2_fu_293_p1[49] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd49;
    end else if (sext_ln278_2_fu_293_p1[50] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd50;
    end else if (sext_ln278_2_fu_293_p1[51] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd51;
    end else if (sext_ln278_2_fu_293_p1[52] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd52;
    end else if (sext_ln278_2_fu_293_p1[53] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd53;
    end else if (sext_ln278_2_fu_293_p1[54] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd54;
    end else if (sext_ln278_2_fu_293_p1[55] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd55;
    end else if (sext_ln278_2_fu_293_p1[56] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd56;
    end else if (sext_ln278_2_fu_293_p1[57] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd57;
    end else if (sext_ln278_2_fu_293_p1[58] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd58;
    end else if (sext_ln278_2_fu_293_p1[59] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd59;
    end else if (sext_ln278_2_fu_293_p1[60] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd60;
    end else if (sext_ln278_2_fu_293_p1[61] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd61;
    end else if (sext_ln278_2_fu_293_p1[62] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd62;
    end else if (sext_ln278_2_fu_293_p1[63] == 1'b1) begin
        tmp_3_fu_297_p3 = 64'd63;
    end else begin
        tmp_3_fu_297_p3 = 64'd64;
    end
end

assign tmp_4_fu_325_p4 = {{add_ln278_1_fu_319_p2[31:1]}};

assign tmp_5_fu_382_p3 = add_ln278_1_fu_319_p2[32'd31];

assign tmp_6_fu_396_p3 = zext_ln278_fu_272_p1[add_ln278_1_fu_319_p2];

assign tmp_7_fu_525_p3 = {{tmp_reg_859}, {add_ln278_4_fu_519_p2}};

assign tmp_8_fu_497_p3 = add_ln278_3_fu_477_p2[32'd54];

assign tmp_9_fu_562_p3 = bitcast_ln716_fu_555_p1[32'd63];

assign tmp_fu_250_p1 = grp_squash_Pipeline_VITIS_LOOP_272_2_fu_156_p_out;

assign tmp_fu_250_p3 = tmp_fu_250_p1[32'd31];

assign tmp_s_fu_199_p3 = {{i_fu_148}, {4'd0}};

assign trunc_ln278_1_fu_309_p1 = tmp_3_fu_297_p3[10:0];

assign trunc_ln278_2_fu_341_p1 = sub_ln278_1_fu_313_p2[5:0];

assign trunc_ln278_3_fu_361_p1 = lshr_ln278_2_fu_355_p2[31:0];

assign trunc_ln278_4_fu_558_p1 = bitcast_ln716_fu_555_p1[62:0];

assign trunc_ln278_5_fu_584_p1 = bitcast_ln716_fu_555_p1[51:0];

assign trunc_ln278_6_fu_626_p1 = sub_ln278_4_fu_620_p2[10:0];

assign trunc_ln278_7_fu_666_p1 = select_ln278_2_fu_606_p3[31:0];

assign trunc_ln278_8_fu_686_p1 = ashr_ln278_fu_680_p2[31:0];

assign trunc_ln278_9_fu_817_p1 = grp_fu_811_p2[31:0];

assign trunc_ln278_fu_305_p1 = tmp_3_fu_297_p3[31:0];

assign xor_ln278_1_fu_754_p2 = (or_ln278_1_fu_748_p2 ^ 1'd1);

assign xor_ln278_2_fu_390_p2 = (tmp_5_fu_382_p3 ^ 1'd1);

assign xor_ln278_fu_736_p2 = (icmp_ln278_4_fu_614_p2 ^ 1'd1);

assign zext_ln278_10_fu_596_p1 = zext_ln278_6_cast_fu_588_p3;

assign zext_ln278_1_fu_424_p1 = select_ln278_reg_864;

assign zext_ln278_2_fu_439_p1 = add_ln278_2_fu_433_p2;

assign zext_ln278_3_fu_455_p1 = sub_ln278_2_fu_449_p2;

assign zext_ln278_4_fu_473_p1 = or_ln_fu_416_p3;

assign zext_ln278_5_fu_580_p1 = tmp_10_fu_570_p4;

assign zext_ln278_6_cast_fu_588_p3 = {{1'd1}, {trunc_ln278_5_fu_584_p1}};

assign zext_ln278_6_fu_351_p1 = sub_ln278_7_fu_345_p2;

assign zext_ln278_7_fu_676_p1 = select_ln278_3_fu_648_p3;

assign zext_ln278_8_fu_656_p1 = select_ln278_3_fu_648_p3;

assign zext_ln278_9_fu_493_p1 = lshr_ln278_1_fu_483_p4;

assign zext_ln278_fu_272_p1 = select_ln278_reg_864;

always @ (posedge ap_clk) begin
    tmp_s_reg_838[3:0] <= 4'b0000;
end

endmodule //dynamic_routing_squash
