-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity relu_conv_2d_conv_2d_Pipeline_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    image_to_convolve_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_ce0 : OUT STD_LOGIC;
    image_to_convolve_we0 : OUT STD_LOGIC;
    image_to_convolve_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_1_ce0 : OUT STD_LOGIC;
    image_to_convolve_1_we0 : OUT STD_LOGIC;
    image_to_convolve_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_2_ce0 : OUT STD_LOGIC;
    image_to_convolve_2_we0 : OUT STD_LOGIC;
    image_to_convolve_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_3_ce0 : OUT STD_LOGIC;
    image_to_convolve_3_we0 : OUT STD_LOGIC;
    image_to_convolve_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_4_ce0 : OUT STD_LOGIC;
    image_to_convolve_4_we0 : OUT STD_LOGIC;
    image_to_convolve_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_5_ce0 : OUT STD_LOGIC;
    image_to_convolve_5_we0 : OUT STD_LOGIC;
    image_to_convolve_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_6_ce0 : OUT STD_LOGIC;
    image_to_convolve_6_we0 : OUT STD_LOGIC;
    image_to_convolve_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_7_ce0 : OUT STD_LOGIC;
    image_to_convolve_7_we0 : OUT STD_LOGIC;
    image_to_convolve_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_8_ce0 : OUT STD_LOGIC;
    image_to_convolve_8_we0 : OUT STD_LOGIC;
    image_to_convolve_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_9_ce0 : OUT STD_LOGIC;
    image_to_convolve_9_we0 : OUT STD_LOGIC;
    image_to_convolve_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_10_ce0 : OUT STD_LOGIC;
    image_to_convolve_10_we0 : OUT STD_LOGIC;
    image_to_convolve_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_11_ce0 : OUT STD_LOGIC;
    image_to_convolve_11_we0 : OUT STD_LOGIC;
    image_to_convolve_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_12_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_12_ce0 : OUT STD_LOGIC;
    image_to_convolve_12_we0 : OUT STD_LOGIC;
    image_to_convolve_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_13_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_13_ce0 : OUT STD_LOGIC;
    image_to_convolve_13_we0 : OUT STD_LOGIC;
    image_to_convolve_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_14_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_14_ce0 : OUT STD_LOGIC;
    image_to_convolve_14_we0 : OUT STD_LOGIC;
    image_to_convolve_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_15_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_15_ce0 : OUT STD_LOGIC;
    image_to_convolve_15_we0 : OUT STD_LOGIC;
    image_to_convolve_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_16_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_16_ce0 : OUT STD_LOGIC;
    image_to_convolve_16_we0 : OUT STD_LOGIC;
    image_to_convolve_16_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_17_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_17_ce0 : OUT STD_LOGIC;
    image_to_convolve_17_we0 : OUT STD_LOGIC;
    image_to_convolve_17_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_18_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_18_ce0 : OUT STD_LOGIC;
    image_to_convolve_18_we0 : OUT STD_LOGIC;
    image_to_convolve_18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_19_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_19_ce0 : OUT STD_LOGIC;
    image_to_convolve_19_we0 : OUT STD_LOGIC;
    image_to_convolve_19_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_20_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_20_ce0 : OUT STD_LOGIC;
    image_to_convolve_20_we0 : OUT STD_LOGIC;
    image_to_convolve_20_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_21_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_21_ce0 : OUT STD_LOGIC;
    image_to_convolve_21_we0 : OUT STD_LOGIC;
    image_to_convolve_21_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_22_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_22_ce0 : OUT STD_LOGIC;
    image_to_convolve_22_we0 : OUT STD_LOGIC;
    image_to_convolve_22_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_23_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_23_ce0 : OUT STD_LOGIC;
    image_to_convolve_23_we0 : OUT STD_LOGIC;
    image_to_convolve_23_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_24_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_24_ce0 : OUT STD_LOGIC;
    image_to_convolve_24_we0 : OUT STD_LOGIC;
    image_to_convolve_24_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_25_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_25_ce0 : OUT STD_LOGIC;
    image_to_convolve_25_we0 : OUT STD_LOGIC;
    image_to_convolve_25_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_26_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_26_ce0 : OUT STD_LOGIC;
    image_to_convolve_26_we0 : OUT STD_LOGIC;
    image_to_convolve_26_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_to_convolve_27_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    image_to_convolve_27_ce0 : OUT STD_LOGIC;
    image_to_convolve_27_we0 : OUT STD_LOGIC;
    image_to_convolve_27_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    sext_ln85 : IN STD_LOGIC_VECTOR (57 downto 0) );
end;


architecture behav of relu_conv_2d_conv_2d_Pipeline_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv480_lc_1 : STD_LOGIC_VECTOR (479 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv10_310 : STD_LOGIC_VECTOR (9 downto 0) := "1100010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_1C : STD_LOGIC_VECTOR (9 downto 0) := "0000011100";
    constant ap_const_lv20_493 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010010010011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal exitcond538_reg_818 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_68_reg_826 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op61_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal exitcond538_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond538_reg_818_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_67_fu_628_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_67_reg_822 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_68_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_68_reg_826_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_addr_read_reg_830 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_mux_empty_64_phi_fu_576_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_64_reg_573 : STD_LOGIC_VECTOR (511 downto 0);
    signal shiftreg319_cast_fu_680_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast25_fu_701_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_urem_fu_182 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal idx_urem_fu_650_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_phi_urem_load : STD_LOGIC_VECTOR (9 downto 0);
    signal phi_mul_fu_186 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal next_mul_fu_685_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal shiftreg319_fu_190 : STD_LOGIC_VECTOR (479 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal loop_index41_fu_194 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal empty_fu_618_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_loop_index41_load : STD_LOGIC_VECTOR (9 downto 0);
    signal image_to_convolve_26_we0_local : STD_LOGIC;
    signal ap_predicate_pred852_state3 : BOOLEAN;
    signal empty_65_fu_733_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal image_to_convolve_26_ce0_local : STD_LOGIC;
    signal image_to_convolve_25_we0_local : STD_LOGIC;
    signal ap_predicate_pred862_state3 : BOOLEAN;
    signal image_to_convolve_25_ce0_local : STD_LOGIC;
    signal image_to_convolve_24_we0_local : STD_LOGIC;
    signal ap_predicate_pred871_state3 : BOOLEAN;
    signal image_to_convolve_24_ce0_local : STD_LOGIC;
    signal image_to_convolve_23_we0_local : STD_LOGIC;
    signal ap_predicate_pred880_state3 : BOOLEAN;
    signal image_to_convolve_23_ce0_local : STD_LOGIC;
    signal image_to_convolve_22_we0_local : STD_LOGIC;
    signal ap_predicate_pred889_state3 : BOOLEAN;
    signal image_to_convolve_22_ce0_local : STD_LOGIC;
    signal image_to_convolve_21_we0_local : STD_LOGIC;
    signal ap_predicate_pred898_state3 : BOOLEAN;
    signal image_to_convolve_21_ce0_local : STD_LOGIC;
    signal image_to_convolve_20_we0_local : STD_LOGIC;
    signal ap_predicate_pred907_state3 : BOOLEAN;
    signal image_to_convolve_20_ce0_local : STD_LOGIC;
    signal image_to_convolve_19_we0_local : STD_LOGIC;
    signal ap_predicate_pred916_state3 : BOOLEAN;
    signal image_to_convolve_19_ce0_local : STD_LOGIC;
    signal image_to_convolve_18_we0_local : STD_LOGIC;
    signal ap_predicate_pred925_state3 : BOOLEAN;
    signal image_to_convolve_18_ce0_local : STD_LOGIC;
    signal image_to_convolve_17_we0_local : STD_LOGIC;
    signal ap_predicate_pred934_state3 : BOOLEAN;
    signal image_to_convolve_17_ce0_local : STD_LOGIC;
    signal image_to_convolve_16_we0_local : STD_LOGIC;
    signal ap_predicate_pred943_state3 : BOOLEAN;
    signal image_to_convolve_16_ce0_local : STD_LOGIC;
    signal image_to_convolve_15_we0_local : STD_LOGIC;
    signal ap_predicate_pred952_state3 : BOOLEAN;
    signal image_to_convolve_15_ce0_local : STD_LOGIC;
    signal image_to_convolve_14_we0_local : STD_LOGIC;
    signal ap_predicate_pred961_state3 : BOOLEAN;
    signal image_to_convolve_14_ce0_local : STD_LOGIC;
    signal image_to_convolve_13_we0_local : STD_LOGIC;
    signal ap_predicate_pred970_state3 : BOOLEAN;
    signal image_to_convolve_13_ce0_local : STD_LOGIC;
    signal image_to_convolve_12_we0_local : STD_LOGIC;
    signal ap_predicate_pred979_state3 : BOOLEAN;
    signal image_to_convolve_12_ce0_local : STD_LOGIC;
    signal image_to_convolve_11_we0_local : STD_LOGIC;
    signal ap_predicate_pred988_state3 : BOOLEAN;
    signal image_to_convolve_11_ce0_local : STD_LOGIC;
    signal image_to_convolve_10_we0_local : STD_LOGIC;
    signal ap_predicate_pred997_state3 : BOOLEAN;
    signal image_to_convolve_10_ce0_local : STD_LOGIC;
    signal image_to_convolve_9_we0_local : STD_LOGIC;
    signal ap_predicate_pred1006_state3 : BOOLEAN;
    signal image_to_convolve_9_ce0_local : STD_LOGIC;
    signal image_to_convolve_8_we0_local : STD_LOGIC;
    signal ap_predicate_pred1015_state3 : BOOLEAN;
    signal image_to_convolve_8_ce0_local : STD_LOGIC;
    signal image_to_convolve_7_we0_local : STD_LOGIC;
    signal ap_predicate_pred1024_state3 : BOOLEAN;
    signal image_to_convolve_7_ce0_local : STD_LOGIC;
    signal image_to_convolve_6_we0_local : STD_LOGIC;
    signal ap_predicate_pred1033_state3 : BOOLEAN;
    signal image_to_convolve_6_ce0_local : STD_LOGIC;
    signal image_to_convolve_5_we0_local : STD_LOGIC;
    signal ap_predicate_pred1042_state3 : BOOLEAN;
    signal image_to_convolve_5_ce0_local : STD_LOGIC;
    signal image_to_convolve_4_we0_local : STD_LOGIC;
    signal ap_predicate_pred1051_state3 : BOOLEAN;
    signal image_to_convolve_4_ce0_local : STD_LOGIC;
    signal image_to_convolve_3_we0_local : STD_LOGIC;
    signal ap_predicate_pred1060_state3 : BOOLEAN;
    signal image_to_convolve_3_ce0_local : STD_LOGIC;
    signal image_to_convolve_2_we0_local : STD_LOGIC;
    signal ap_predicate_pred1069_state3 : BOOLEAN;
    signal image_to_convolve_2_ce0_local : STD_LOGIC;
    signal image_to_convolve_1_we0_local : STD_LOGIC;
    signal ap_predicate_pred1078_state3 : BOOLEAN;
    signal image_to_convolve_1_ce0_local : STD_LOGIC;
    signal image_to_convolve_we0_local : STD_LOGIC;
    signal ap_predicate_pred1087_state3 : BOOLEAN;
    signal image_to_convolve_ce0_local : STD_LOGIC;
    signal image_to_convolve_27_we0_local : STD_LOGIC;
    signal ap_predicate_pred1108_state3 : BOOLEAN;
    signal image_to_convolve_27_ce0_local : STD_LOGIC;
    signal empty_66_fu_624_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal next_urem_fu_638_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_63_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_691_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component relu_conv_2d_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component relu_conv_2d_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    loop_index41_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond538_fu_612_p2 = ap_const_lv1_0))) then 
                    loop_index41_fu_194 <= empty_fu_618_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    loop_index41_fu_194 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;

    phi_mul_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    phi_mul_fu_186 <= ap_const_lv20_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    phi_mul_fu_186 <= next_mul_fu_685_p2;
                end if;
            end if; 
        end if;
    end process;

    phi_urem_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond538_fu_612_p2 = ap_const_lv1_0))) then 
                    phi_urem_fu_182 <= idx_urem_fu_650_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    phi_urem_fu_182 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;

    shiftreg319_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    shiftreg319_fu_190 <= ap_const_lv480_lc_1;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    shiftreg319_fu_190 <= ap_phi_mux_empty_64_phi_fu_576_p4(511 downto 32);
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                    ap_predicate_pred1006_state3 <= (empty_67_reg_822 = ap_const_lv5_9);
                    ap_predicate_pred1015_state3 <= (empty_67_reg_822 = ap_const_lv5_8);
                    ap_predicate_pred1024_state3 <= (empty_67_reg_822 = ap_const_lv5_7);
                    ap_predicate_pred1033_state3 <= (empty_67_reg_822 = ap_const_lv5_6);
                    ap_predicate_pred1042_state3 <= (empty_67_reg_822 = ap_const_lv5_5);
                    ap_predicate_pred1051_state3 <= (empty_67_reg_822 = ap_const_lv5_4);
                    ap_predicate_pred1060_state3 <= (empty_67_reg_822 = ap_const_lv5_3);
                    ap_predicate_pred1069_state3 <= (empty_67_reg_822 = ap_const_lv5_2);
                    ap_predicate_pred1078_state3 <= (empty_67_reg_822 = ap_const_lv5_1);
                    ap_predicate_pred1087_state3 <= (empty_67_reg_822 = ap_const_lv5_0);
                    ap_predicate_pred1108_state3 <= ((empty_67_reg_822 = ap_const_lv5_1B) or ((empty_67_reg_822 = ap_const_lv5_1C) or ((empty_67_reg_822 = ap_const_lv5_1D) or ((empty_67_reg_822 = ap_const_lv5_1E) or (empty_67_reg_822 = ap_const_lv5_1F)))));
                    ap_predicate_pred852_state3 <= (empty_67_reg_822 = ap_const_lv5_1A);
                    ap_predicate_pred862_state3 <= (empty_67_reg_822 = ap_const_lv5_19);
                    ap_predicate_pred871_state3 <= (empty_67_reg_822 = ap_const_lv5_18);
                    ap_predicate_pred880_state3 <= (empty_67_reg_822 = ap_const_lv5_17);
                    ap_predicate_pred889_state3 <= (empty_67_reg_822 = ap_const_lv5_16);
                    ap_predicate_pred898_state3 <= (empty_67_reg_822 = ap_const_lv5_15);
                    ap_predicate_pred907_state3 <= (empty_67_reg_822 = ap_const_lv5_14);
                    ap_predicate_pred916_state3 <= (empty_67_reg_822 = ap_const_lv5_13);
                    ap_predicate_pred925_state3 <= (empty_67_reg_822 = ap_const_lv5_12);
                    ap_predicate_pred934_state3 <= (empty_67_reg_822 = ap_const_lv5_11);
                    ap_predicate_pred943_state3 <= (empty_67_reg_822 = ap_const_lv5_10);
                    ap_predicate_pred952_state3 <= (empty_67_reg_822 = ap_const_lv5_F);
                    ap_predicate_pred961_state3 <= (empty_67_reg_822 = ap_const_lv5_E);
                    ap_predicate_pred970_state3 <= (empty_67_reg_822 = ap_const_lv5_D);
                    ap_predicate_pred979_state3 <= (empty_67_reg_822 = ap_const_lv5_C);
                    ap_predicate_pred988_state3 <= (empty_67_reg_822 = ap_const_lv5_B);
                    ap_predicate_pred997_state3 <= (empty_67_reg_822 = ap_const_lv5_A);
                empty_67_reg_822 <= empty_67_fu_628_p1;
                empty_68_reg_826 <= empty_68_fu_632_p2;
                empty_68_reg_826_pp0_iter1_reg <= empty_68_reg_826;
                exitcond538_reg_818 <= exitcond538_fu_612_p2;
                exitcond538_reg_818_pp0_iter1_reg <= exitcond538_reg_818;
                gmem_addr_read_reg_830 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state2_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state2_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(m_axi_gmem_RVALID, ap_predicate_op61_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op61_read_state2 = ap_const_boolean_1) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, exitcond538_fu_612_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond538_fu_612_p2 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_empty_64_phi_fu_576_p4_assign_proc : process(exitcond538_reg_818_pp0_iter1_reg, empty_68_reg_826_pp0_iter1_reg, gmem_addr_read_reg_830, ap_phi_reg_pp0_iter2_empty_64_reg_573, shiftreg319_cast_fu_680_p1)
    begin
        if ((exitcond538_reg_818_pp0_iter1_reg = ap_const_lv1_0)) then
            if ((empty_68_reg_826_pp0_iter1_reg = ap_const_lv1_0)) then 
                ap_phi_mux_empty_64_phi_fu_576_p4 <= shiftreg319_cast_fu_680_p1;
            elsif ((empty_68_reg_826_pp0_iter1_reg = ap_const_lv1_1)) then 
                ap_phi_mux_empty_64_phi_fu_576_p4 <= gmem_addr_read_reg_830;
            else 
                ap_phi_mux_empty_64_phi_fu_576_p4 <= ap_phi_reg_pp0_iter2_empty_64_reg_573;
            end if;
        else 
            ap_phi_mux_empty_64_phi_fu_576_p4 <= ap_phi_reg_pp0_iter2_empty_64_reg_573;
        end if; 
    end process;

    ap_phi_reg_pp0_iter2_empty_64_reg_573 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op61_read_state2_assign_proc : process(exitcond538_reg_818, empty_68_reg_826)
    begin
                ap_predicate_op61_read_state2 <= ((empty_68_reg_826 = ap_const_lv1_1) and (exitcond538_reg_818 = ap_const_lv1_0));
    end process;

    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_loop_index41_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, loop_index41_fu_194)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_loop_index41_load <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_loop_index41_load <= loop_index41_fu_194;
        end if; 
    end process;


    ap_sig_allocacmp_phi_urem_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, phi_urem_fu_182, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_phi_urem_load <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_phi_urem_load <= phi_urem_fu_182;
        end if; 
    end process;

    empty_63_fu_644_p2 <= "1" when (unsigned(next_urem_fu_638_p2) < unsigned(ap_const_lv10_1C)) else "0";
    empty_65_fu_733_p1 <= ap_phi_mux_empty_64_phi_fu_576_p4(32 - 1 downto 0);
    empty_66_fu_624_p1 <= ap_sig_allocacmp_loop_index41_load(4 - 1 downto 0);
    empty_67_fu_628_p1 <= ap_sig_allocacmp_phi_urem_load(5 - 1 downto 0);
    empty_68_fu_632_p2 <= "1" when (empty_66_fu_624_p1 = ap_const_lv4_0) else "0";
    empty_fu_618_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_loop_index41_load) + unsigned(ap_const_lv10_1));
    exitcond538_fu_612_p2 <= "1" when (ap_sig_allocacmp_loop_index41_load = ap_const_lv10_310) else "0";

    gmem_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_predicate_op61_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op61_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    idx_urem_fu_650_p3 <= 
        next_urem_fu_638_p2 when (empty_63_fu_644_p2(0) = '1') else 
        ap_const_lv10_0;
    image_to_convolve_10_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_10_ce0 <= image_to_convolve_10_ce0_local;

    image_to_convolve_10_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_10_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_10_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_10_d0 <= empty_65_fu_733_p1;
    image_to_convolve_10_we0 <= image_to_convolve_10_we0_local;

    image_to_convolve_10_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred997_state3)
    begin
        if (((ap_predicate_pred997_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_10_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_10_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_11_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_11_ce0 <= image_to_convolve_11_ce0_local;

    image_to_convolve_11_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_11_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_11_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_11_d0 <= empty_65_fu_733_p1;
    image_to_convolve_11_we0 <= image_to_convolve_11_we0_local;

    image_to_convolve_11_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred988_state3)
    begin
        if (((ap_predicate_pred988_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_11_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_11_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_12_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_12_ce0 <= image_to_convolve_12_ce0_local;

    image_to_convolve_12_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_12_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_12_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_12_d0 <= empty_65_fu_733_p1;
    image_to_convolve_12_we0 <= image_to_convolve_12_we0_local;

    image_to_convolve_12_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred979_state3)
    begin
        if (((ap_predicate_pred979_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_12_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_12_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_13_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_13_ce0 <= image_to_convolve_13_ce0_local;

    image_to_convolve_13_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_13_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_13_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_13_d0 <= empty_65_fu_733_p1;
    image_to_convolve_13_we0 <= image_to_convolve_13_we0_local;

    image_to_convolve_13_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred970_state3)
    begin
        if (((ap_predicate_pred970_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_13_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_13_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_14_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_14_ce0 <= image_to_convolve_14_ce0_local;

    image_to_convolve_14_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_14_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_14_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_14_d0 <= empty_65_fu_733_p1;
    image_to_convolve_14_we0 <= image_to_convolve_14_we0_local;

    image_to_convolve_14_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred961_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred961_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_14_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_14_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_15_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_15_ce0 <= image_to_convolve_15_ce0_local;

    image_to_convolve_15_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_15_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_15_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_15_d0 <= empty_65_fu_733_p1;
    image_to_convolve_15_we0 <= image_to_convolve_15_we0_local;

    image_to_convolve_15_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred952_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred952_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_15_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_15_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_16_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_16_ce0 <= image_to_convolve_16_ce0_local;

    image_to_convolve_16_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_16_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_16_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_16_d0 <= empty_65_fu_733_p1;
    image_to_convolve_16_we0 <= image_to_convolve_16_we0_local;

    image_to_convolve_16_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred943_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred943_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_16_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_16_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_17_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_17_ce0 <= image_to_convolve_17_ce0_local;

    image_to_convolve_17_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_17_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_17_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_17_d0 <= empty_65_fu_733_p1;
    image_to_convolve_17_we0 <= image_to_convolve_17_we0_local;

    image_to_convolve_17_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred934_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred934_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_17_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_17_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_18_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_18_ce0 <= image_to_convolve_18_ce0_local;

    image_to_convolve_18_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_18_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_18_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_18_d0 <= empty_65_fu_733_p1;
    image_to_convolve_18_we0 <= image_to_convolve_18_we0_local;

    image_to_convolve_18_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred925_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred925_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_18_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_18_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_19_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_19_ce0 <= image_to_convolve_19_ce0_local;

    image_to_convolve_19_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_19_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_19_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_19_d0 <= empty_65_fu_733_p1;
    image_to_convolve_19_we0 <= image_to_convolve_19_we0_local;

    image_to_convolve_19_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred916_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred916_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_19_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_19_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_1_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_1_ce0 <= image_to_convolve_1_ce0_local;

    image_to_convolve_1_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_1_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_1_d0 <= empty_65_fu_733_p1;
    image_to_convolve_1_we0 <= image_to_convolve_1_we0_local;

    image_to_convolve_1_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1078_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1078_state3 = ap_const_boolean_1))) then 
            image_to_convolve_1_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_1_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_20_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_20_ce0 <= image_to_convolve_20_ce0_local;

    image_to_convolve_20_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_20_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_20_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_20_d0 <= empty_65_fu_733_p1;
    image_to_convolve_20_we0 <= image_to_convolve_20_we0_local;

    image_to_convolve_20_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred907_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred907_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_20_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_20_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_21_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_21_ce0 <= image_to_convolve_21_ce0_local;

    image_to_convolve_21_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_21_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_21_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_21_d0 <= empty_65_fu_733_p1;
    image_to_convolve_21_we0 <= image_to_convolve_21_we0_local;

    image_to_convolve_21_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred898_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred898_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_21_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_21_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_22_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_22_ce0 <= image_to_convolve_22_ce0_local;

    image_to_convolve_22_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_22_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_22_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_22_d0 <= empty_65_fu_733_p1;
    image_to_convolve_22_we0 <= image_to_convolve_22_we0_local;

    image_to_convolve_22_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred889_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred889_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_22_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_22_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_23_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_23_ce0 <= image_to_convolve_23_ce0_local;

    image_to_convolve_23_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_23_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_23_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_23_d0 <= empty_65_fu_733_p1;
    image_to_convolve_23_we0 <= image_to_convolve_23_we0_local;

    image_to_convolve_23_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred880_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred880_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_23_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_23_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_24_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_24_ce0 <= image_to_convolve_24_ce0_local;

    image_to_convolve_24_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_24_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_24_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_24_d0 <= empty_65_fu_733_p1;
    image_to_convolve_24_we0 <= image_to_convolve_24_we0_local;

    image_to_convolve_24_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred871_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred871_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_24_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_24_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_25_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_25_ce0 <= image_to_convolve_25_ce0_local;

    image_to_convolve_25_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_25_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_25_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_25_d0 <= empty_65_fu_733_p1;
    image_to_convolve_25_we0 <= image_to_convolve_25_we0_local;

    image_to_convolve_25_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred862_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred862_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_25_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_25_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_26_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_26_ce0 <= image_to_convolve_26_ce0_local;

    image_to_convolve_26_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_26_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_26_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_26_d0 <= empty_65_fu_733_p1;
    image_to_convolve_26_we0 <= image_to_convolve_26_we0_local;

    image_to_convolve_26_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred852_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred852_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_26_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_26_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_27_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_27_ce0 <= image_to_convolve_27_ce0_local;

    image_to_convolve_27_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_27_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_27_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_27_d0 <= empty_65_fu_733_p1;
    image_to_convolve_27_we0 <= image_to_convolve_27_we0_local;

    image_to_convolve_27_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1108_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1108_state3 = ap_const_boolean_1))) then 
            image_to_convolve_27_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_27_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_2_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_2_ce0 <= image_to_convolve_2_ce0_local;

    image_to_convolve_2_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_2_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_2_d0 <= empty_65_fu_733_p1;
    image_to_convolve_2_we0 <= image_to_convolve_2_we0_local;

    image_to_convolve_2_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1069_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1069_state3 = ap_const_boolean_1))) then 
            image_to_convolve_2_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_3_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_3_ce0 <= image_to_convolve_3_ce0_local;

    image_to_convolve_3_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_3_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_3_d0 <= empty_65_fu_733_p1;
    image_to_convolve_3_we0 <= image_to_convolve_3_we0_local;

    image_to_convolve_3_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1060_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1060_state3 = ap_const_boolean_1))) then 
            image_to_convolve_3_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_3_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_4_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_4_ce0 <= image_to_convolve_4_ce0_local;

    image_to_convolve_4_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_4_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_4_d0 <= empty_65_fu_733_p1;
    image_to_convolve_4_we0 <= image_to_convolve_4_we0_local;

    image_to_convolve_4_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1051_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1051_state3 = ap_const_boolean_1))) then 
            image_to_convolve_4_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_4_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_5_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_5_ce0 <= image_to_convolve_5_ce0_local;

    image_to_convolve_5_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_5_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_5_d0 <= empty_65_fu_733_p1;
    image_to_convolve_5_we0 <= image_to_convolve_5_we0_local;

    image_to_convolve_5_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1042_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1042_state3 = ap_const_boolean_1))) then 
            image_to_convolve_5_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_5_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_6_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_6_ce0 <= image_to_convolve_6_ce0_local;

    image_to_convolve_6_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_6_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_6_d0 <= empty_65_fu_733_p1;
    image_to_convolve_6_we0 <= image_to_convolve_6_we0_local;

    image_to_convolve_6_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1033_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1033_state3 = ap_const_boolean_1))) then 
            image_to_convolve_6_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_6_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_7_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_7_ce0 <= image_to_convolve_7_ce0_local;

    image_to_convolve_7_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_7_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_7_d0 <= empty_65_fu_733_p1;
    image_to_convolve_7_we0 <= image_to_convolve_7_we0_local;

    image_to_convolve_7_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1024_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1024_state3 = ap_const_boolean_1))) then 
            image_to_convolve_7_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_7_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_8_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_8_ce0 <= image_to_convolve_8_ce0_local;

    image_to_convolve_8_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_8_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_8_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_8_d0 <= empty_65_fu_733_p1;
    image_to_convolve_8_we0 <= image_to_convolve_8_we0_local;

    image_to_convolve_8_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1015_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1015_state3 = ap_const_boolean_1))) then 
            image_to_convolve_8_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_8_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_9_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_9_ce0 <= image_to_convolve_9_ce0_local;

    image_to_convolve_9_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_9_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_9_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_9_d0 <= empty_65_fu_733_p1;
    image_to_convolve_9_we0 <= image_to_convolve_9_we0_local;

    image_to_convolve_9_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1006_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1006_state3 = ap_const_boolean_1))) then 
            image_to_convolve_9_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_9_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_address0 <= p_cast25_fu_701_p1(5 - 1 downto 0);
    image_to_convolve_ce0 <= image_to_convolve_ce0_local;

    image_to_convolve_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_to_convolve_ce0_local <= ap_const_logic_1;
        else 
            image_to_convolve_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_to_convolve_d0 <= empty_65_fu_733_p1;
    image_to_convolve_we0 <= image_to_convolve_we0_local;

    image_to_convolve_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_predicate_pred1087_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_pred1087_state3 = ap_const_boolean_1))) then 
            image_to_convolve_we0_local <= ap_const_logic_1;
        else 
            image_to_convolve_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_ARADDR <= ap_const_lv64_0;
    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_0;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;
    m_axi_gmem_ARVALID <= ap_const_logic_0;
    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;

    m_axi_gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op61_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op61_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= ap_const_lv512_lc_1;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv64_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;
    next_mul_fu_685_p2 <= std_logic_vector(unsigned(phi_mul_fu_186) + unsigned(ap_const_lv20_493));
    next_urem_fu_638_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_phi_urem_load) + unsigned(ap_const_lv10_1));
    p_cast25_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_691_p4),64));
    shiftreg319_cast_fu_680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shiftreg319_fu_190),512));
    tmp_fu_691_p4 <= phi_mul_fu_186(19 downto 15);
end behav;
